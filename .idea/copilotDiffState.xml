<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/aplicacion/interfaces/IServicioBitacora.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/aplicacion/interfaces/IServicioBitacora.java" />
              <option name="originalContent" value="package com.planta.plantapp.aplicacion.interfaces;&#10;&#10;import java.io.*;&#10;import java.util.*;&#10;&#10;/**&#10; * &#10; */&#10;public interface IServicioBitacora {&#10;&#10;}" />
              <option name="updatedContent" value="package com.planta.plantapp.aplicacion.interfaces;&#10;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.List;&#10;&#10;/**&#10; * Interfaz del servicio de aplicación para la gestión de bitácoras.&#10; * Define las operaciones de alto nivel disponibles para la gestión de bitácoras.&#10; */&#10;public interface IServicioBitacora {&#10;&#10;    /**&#10;     * Registra una nueva entrada en la bitácora.&#10;     * @param descripcion Descripción del cuidado realizado&#10;     * @param foto URL o path de la foto (opcional)&#10;     * @param plantaId ID de la planta&#10;     * @param tipoCuidado Tipo de cuidado realizado&#10;     * @param observaciones Observaciones adicionales (opcional)&#10;     * @return La bitácora creada&#10;     */&#10;    Bitacora registrarEntrada(String descripcion, String foto, String plantaId, String tipoCuidado, String observaciones);&#10;&#10;    /**&#10;     * Obtiene una bitácora por su ID.&#10;     * @param id ID de la bitácora&#10;     * @return La bitácora encontrada&#10;     */&#10;    Bitacora obtenerBitacora(String id);&#10;&#10;    /**&#10;     * Lista todas las bitácoras del sistema.&#10;     * @return Lista de todas las bitácoras&#10;     */&#10;    List&lt;Bitacora&gt; listarTodasLasBitacoras();&#10;&#10;    /**&#10;     * Lista las bitácoras de una planta específica.&#10;     * @param plantaId ID de la planta&#10;     * @return Lista de bitácoras de la planta&#10;     */&#10;    List&lt;Bitacora&gt; listarBitacorasPorPlanta(String plantaId);&#10;&#10;    /**&#10;     * Lista las bitácoras por tipo de cuidado.&#10;     * @param tipoCuidado Tipo de cuidado a filtrar&#10;     * @return Lista de bitácoras del tipo especificado&#10;     */&#10;    List&lt;Bitacora&gt; listarBitacorasPorTipoCuidado(String tipoCuidado);&#10;&#10;    /**&#10;     * Lista las bitácoras en un rango de fechas.&#10;     * @param fechaInicio Fecha de inicio&#10;     * @param fechaFin Fecha de fin&#10;     * @return Lista de bitácoras en el rango&#10;     */&#10;    List&lt;Bitacora&gt; listarBitacorasPorFechas(LocalDateTime fechaInicio, LocalDateTime fechaFin);&#10;&#10;    /**&#10;     * Lista las bitácoras de una planta en un rango de fechas.&#10;     * @param plantaId ID de la planta&#10;     * @param fechaInicio Fecha de inicio&#10;     * @param fechaFin Fecha de fin&#10;     * @return Lista de bitácoras filtradas&#10;     */&#10;    List&lt;Bitacora&gt; listarBitacorasPorPlantaYFechas(String plantaId, LocalDateTime fechaInicio, LocalDateTime fechaFin);&#10;&#10;    /**&#10;     * Actualiza una bitácora existente.&#10;     * @param id ID de la bitácora&#10;     * @param descripcion Nueva descripción&#10;     * @param foto Nueva foto (opcional)&#10;     * @param tipoCuidado Nuevo tipo de cuidado&#10;     * @param observaciones Nuevas observaciones&#10;     * @return La bitácora actualizada&#10;     */&#10;    Bitacora actualizarBitacora(String id, String descripcion, String foto, String tipoCuidado, String observaciones);&#10;&#10;    /**&#10;     * Elimina una bitácora.&#10;     * @param id ID de la bitácora a eliminar&#10;     */&#10;    void eliminarBitacora(String id);&#10;&#10;    /**&#10;     * Obtiene el historial reciente de una planta.&#10;     * @param plantaId ID de la planta&#10;     * @param limite Número máximo de entradas a obtener&#10;     * @return Lista de las últimas bitácoras&#10;     */&#10;    List&lt;Bitacora&gt; obtenerHistorialReciente(String plantaId, int limite);&#10;&#10;    /**&#10;     * Obtiene estadísticas de cuidados de una planta.&#10;     * @param plantaId ID de la planta&#10;     * @return Número total de entradas en la bitácora&#10;     */&#10;    long obtenerTotalCuidados(String plantaId);&#10;&#10;    /**&#10;     * Exporta las bitácoras de una planta a formato de reporte.&#10;     * @param plantaId ID de la planta&#10;     * @return Datos para el reporte&#10;     */&#10;    List&lt;Bitacora&gt; exportarBitacorasPlanta(String plantaId);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/aplicacion/servicios/ServicioBitacora.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/aplicacion/servicios/ServicioBitacora.java" />
              <option name="updatedContent" value="package com.planta.plantapp.aplicacion.servicios;&#10;&#10;import com.planta.plantapp.aplicacion.interfaces.IServicioBitacora;&#10;import com.planta.plantapp.dominio.modelo.IBitacoraRepositorio;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.stereotype.Service;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.List;&#10;&#10;/**&#10; * Implementación del servicio de aplicación para la gestión de bitácoras.&#10; * Coordina las operaciones de dominio y orquesta los casos de uso.&#10; */&#10;@Service&#10;public class ServicioBitacora implements IServicioBitacora {&#10;&#10;    private final IBitacoraRepositorio bitacoraRepositorio;&#10;&#10;    @Autowired&#10;    public ServicioBitacora(IBitacoraRepositorio bitacoraRepositorio) {&#10;        this.bitacoraRepositorio = bitacoraRepositorio;&#10;    }&#10;&#10;    @Override&#10;    public Bitacora registrarEntrada(String descripcion, String foto, String plantaId, String tipoCuidado, String observaciones) {&#10;        if (descripcion == null || descripcion.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;La descripción es obligatoria&quot;);&#10;        }&#10;        if (plantaId == null || plantaId.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;El ID de la planta es obligatorio&quot;);&#10;        }&#10;&#10;        Bitacora bitacora = new Bitacora(descripcion, foto, plantaId, tipoCuidado, observaciones);&#10;        bitacoraRepositorio.guardar(bitacora);&#10;        return bitacora;&#10;    }&#10;&#10;    @Override&#10;    public Bitacora obtenerBitacora(String id) {&#10;        if (id == null || id.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;El ID de la bitácora es obligatorio&quot;);&#10;        }&#10;        &#10;        Bitacora bitacora = bitacoraRepositorio.obtenerPorId(id);&#10;        if (bitacora == null) {&#10;            throw new RuntimeException(&quot;Bitácora no encontrada con ID: &quot; + id);&#10;        }&#10;        return bitacora;&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Bitacora&gt; listarTodasLasBitacoras() {&#10;        return bitacoraRepositorio.listarTodas();&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Bitacora&gt; listarBitacorasPorPlanta(String plantaId) {&#10;        if (plantaId == null || plantaId.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;El ID de la planta es obligatorio&quot;);&#10;        }&#10;        return bitacoraRepositorio.listarPorPlanta(plantaId);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Bitacora&gt; listarBitacorasPorTipoCuidado(String tipoCuidado) {&#10;        if (tipoCuidado == null || tipoCuidado.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;El tipo de cuidado es obligatorio&quot;);&#10;        }&#10;        return bitacoraRepositorio.listarPorTipoCuidado(tipoCuidado);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Bitacora&gt; listarBitacorasPorFechas(LocalDateTime fechaInicio, LocalDateTime fechaFin) {&#10;        if (fechaInicio == null || fechaFin == null) {&#10;            throw new IllegalArgumentException(&quot;Las fechas de inicio y fin son obligatorias&quot;);&#10;        }&#10;        if (fechaInicio.isAfter(fechaFin)) {&#10;            throw new IllegalArgumentException(&quot;La fecha de inicio no puede ser posterior a la fecha de fin&quot;);&#10;        }&#10;        return bitacoraRepositorio.listarPorRangoFechas(fechaInicio, fechaFin);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Bitacora&gt; listarBitacorasPorPlantaYFechas(String plantaId, LocalDateTime fechaInicio, LocalDateTime fechaFin) {&#10;        if (plantaId == null || plantaId.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;El ID de la planta es obligatorio&quot;);&#10;        }&#10;        if (fechaInicio == null || fechaFin == null) {&#10;            throw new IllegalArgumentException(&quot;Las fechas de inicio y fin son obligatorias&quot;);&#10;        }&#10;        if (fechaInicio.isAfter(fechaFin)) {&#10;            throw new IllegalArgumentException(&quot;La fecha de inicio no puede ser posterior a la fecha de fin&quot;);&#10;        }&#10;        return bitacoraRepositorio.listarPorPlantaYFechas(plantaId, fechaInicio, fechaFin);&#10;    }&#10;&#10;    @Override&#10;    public Bitacora actualizarBitacora(String id, String descripcion, String foto, String tipoCuidado, String observaciones) {&#10;        if (id == null || id.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;El ID de la bitácora es obligatorio&quot;);&#10;        }&#10;&#10;        Bitacora bitacora = obtenerBitacora(id);&#10;        &#10;        if (descripcion != null &amp;&amp; !descripcion.isBlank()) {&#10;            bitacora.setDescripcion(descripcion);&#10;        }&#10;        if (foto != null) {&#10;            bitacora.setFoto(foto);&#10;        }&#10;        if (tipoCuidado != null &amp;&amp; !tipoCuidado.isBlank()) {&#10;            bitacora.setTipoCuidado(tipoCuidado);&#10;        }&#10;        if (observaciones != null) {&#10;            bitacora.setObservaciones(observaciones);&#10;        }&#10;&#10;        bitacoraRepositorio.actualizar(bitacora);&#10;        return bitacora;&#10;    }&#10;&#10;    @Override&#10;    public void eliminarBitacora(String id) {&#10;        if (id == null || id.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;El ID de la bitácora es obligatorio&quot;);&#10;        }&#10;        &#10;        // Verificar que la bitácora existe antes de eliminar&#10;        obtenerBitacora(id);&#10;        bitacoraRepositorio.eliminar(id);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Bitacora&gt; obtenerHistorialReciente(String plantaId, int limite) {&#10;        if (plantaId == null || plantaId.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;El ID de la planta es obligatorio&quot;);&#10;        }&#10;        if (limite &lt;= 0) {&#10;            throw new IllegalArgumentException(&quot;El límite debe ser mayor a 0&quot;);&#10;        }&#10;        return bitacoraRepositorio.obtenerUltimasPorPlanta(plantaId, limite);&#10;    }&#10;&#10;    @Override&#10;    public long obtenerTotalCuidados(String plantaId) {&#10;        if (plantaId == null || plantaId.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;El ID de la planta es obligatorio&quot;);&#10;        }&#10;        return bitacoraRepositorio.contarPorPlanta(plantaId);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Bitacora&gt; exportarBitacorasPlanta(String plantaId) {&#10;        if (plantaId == null || plantaId.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;El ID de la planta es obligatorio&quot;);&#10;        }&#10;        return bitacoraRepositorio.listarPorPlanta(plantaId);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/aplicacion/servicios/ServicioBitacoraImpl.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/aplicacion/servicios/ServicioBitacoraImpl.java" />
              <option name="originalContent" value="package com.planta.plantapp.aplicacion.servicios;&#10;&#10;import com.planta.plantapp.dominio.modelo.IBitacoraRepositorio;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#10;import com.planta.plantapp.dominio.modelo.planta.Planta;&#10;import com.planta.plantapp.dominio.modelo.servicios.ServicioBitacoraDominio;&#10;&#10;import java.util.Date;&#10;import java.util.List;&#10;import java.util.Optional;&#10;&#10;/**&#10; * Servicio de aplicación que orquesta el uso del dominio para gestionar bitácoras.&#10; * Forma parte del dominio de la solución.&#10; */&#10;public class ServicioBitacoraImpl {&#10;&#10;    private final ServicioBitacoraDominio servicioDominio;&#10;    private final IBitacoraRepositorio repositorioBitacora;&#10;&#10;    public ServicioBitacoraImpl(ServicioBitacoraDominio servicioDominio, IBitacoraRepositorio repositorioBitacora) {&#10;        this.servicioDominio = servicioDominio;&#10;        this.repositorioBitacora = repositorioBitacora;&#10;    }&#10;&#10;    /**&#10;     * Registra una nueva observación para una planta.&#10;     */&#10;    public void registrarObservacion(String plantaId, String descripcion) {&#10;        Bitacora nueva = new Bitacora(descripcion, null, new Planta(plantaId));&#10;        repositorioBitacora.guardar(nueva);&#10;    }&#10;&#10;    /**&#10;     * Obtiene todas las bitácoras asociadas a una planta.&#10;     */&#10;    public List&lt;Bitacora&gt; obtenerPorPlanta(String plantaId) {&#10;        return repositorioBitacora.listarPorPlanta(plantaId);&#10;    }&#10;&#10;    /**&#10;     * Obtiene bitácoras dentro de un rango de fechas.&#10;     */&#10;    public List&lt;Bitacora&gt; obtenerPorFechaRango(Date desde, Date hasta) {&#10;        return repositorioBitacora.listarPorFecha(desde, hasta);&#10;    }&#10;&#10;    /**&#10;     * Edita la descripción de una bitácora si existe.&#10;     */&#10;    public void editarObservacion(String bitacoraId, String nuevaDescripcion) {&#10;        Bitacora bitacora = repositorioBitacora.obtenerPorId(bitacoraId);&#10;        if (bitacora != null) {&#10;            bitacora.setDescripcion(nuevaDescripcion);&#10;            repositorioBitacora.actualizar(bitacora);&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Elimina una bitácora si existe.&#10;     */&#10;    public void eliminar(String bitacoraId) {&#10;        repositorioBitacora.eliminar(bitacoraId);&#10;    }&#10;&#10;    /**&#10;     * Exporta el historial en bytes (ejemplo simple, podría generar PDF o CSV).&#10;     */&#10;    public byte[] exportarHistorial(String plantaId) {&#10;        List&lt;Bitacora&gt; historial = repositorioBitacora.listarPorPlanta(plantaId);&#10;        return historial.toString().getBytes(); // Mejor reemplazar con lógica de exportación real&#10;    }&#10;&#10;    /**&#10;     * Busca bitácoras por tipo de actividad (riego, poda, etc.).&#10;     */&#10;    public List&lt;Bitacora&gt; buscarPorTipo(String tipo) {&#10;        return repositorioBitacora.listarPorTipoActividad(tipo);&#10;    }&#10;&#10;    /**&#10;     * Lista todas las bitácoras pendientes de atención por usuario.&#10;     */&#10;    public List&lt;Bitacora&gt; listarPendientesPorUsuario(String usuarioId) {&#10;        return repositorioBitacora.listarPorUsuario(usuarioId)&#10;                .stream()&#10;                .filter(bitacora -&gt; bitacora.getDescripcion() != null &amp;&amp; bitacora.getDescripcion().contains(&quot;pendiente&quot;))&#10;                .toList(); // Filtro de ejemplo, depende de cómo se marca lo &quot;pendiente&quot;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.planta.plantapp.aplicacion.servicios;&#13;&#10;&#13;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#13;&#10;import com.planta.plantapp.dominio.modelo.IBitacoraRepositorio;&#13;&#10;import org.springframework.beans.factory.annotation.Autowired;&#13;&#10;import org.springframework.stereotype.Service;&#13;&#10;&#13;&#10;import java.time.LocalDateTime;&#13;&#10;import java.util.List;&#13;&#10;&#13;&#10;/**&#13;&#10; * Implementación del servicio de aplicación para bitácoras.&#13;&#10; */&#13;&#10;@Service&#13;&#10;public class ServicioBitacoraImpl {&#13;&#10;&#13;&#10;    private final IBitacoraRepositorio repositorioBitacora;&#13;&#10;&#13;&#10;    @Autowired&#13;&#10;    public ServicioBitacoraImpl(IBitacoraRepositorio repositorioBitacora) {&#13;&#10;        this.repositorioBitacora = repositorioBitacora;&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Registra una nueva observación para una planta.&#13;&#10;     */&#13;&#10;    public void registrarObservacion(String plantaId, String descripcion) {&#13;&#10;        Bitacora nueva = new Bitacora(descripcion, null, plantaId, &quot;observacion&quot;);&#13;&#10;        repositorioBitacora.guardar(nueva);&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Obtiene todas las bitácoras asociadas a una planta.&#13;&#10;     */&#13;&#10;    public List&lt;Bitacora&gt; obtenerPorPlanta(String plantaId) {&#13;&#10;        return repositorioBitacora.listarPorPlanta(plantaId);&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Obtiene bitácoras dentro de un rango de fechas.&#13;&#10;     */&#13;&#10;    public List&lt;Bitacora&gt; obtenerPorFechaRango(LocalDateTime desde, LocalDateTime hasta) {&#13;&#10;        return repositorioBitacora.listarPorRangoFechas(desde, hasta);&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Edita la descripción de una bitácora si existe.&#13;&#10;     */&#13;&#10;    public void editarObservacion(String bitacoraId, String nuevaDescripcion) {&#13;&#10;        Bitacora bitacora = repositorioBitacora.obtenerPorId(bitacoraId);&#13;&#10;        if (bitacora != null) {&#13;&#10;            bitacora.setDescripcion(nuevaDescripcion);&#13;&#10;            repositorioBitacora.actualizar(bitacora);&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Elimina una bitácora si existe.&#13;&#10;     */&#13;&#10;    public void eliminar(String bitacoraId) {&#13;&#10;        repositorioBitacora.eliminar(bitacoraId);&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Exporta el historial en bytes (ejemplo simple, podría generar PDF o CSV).&#13;&#10;     */&#13;&#10;    public byte[] exportarHistorial(String plantaId) {&#13;&#10;        List&lt;Bitacora&gt; historial = repositorioBitacora.listarPorPlanta(plantaId);&#13;&#10;        return historial.toString().getBytes(); // Mejor reemplazar con lógica de exportación real&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Busca bitácoras por tipo de actividad (riego, poda, etc.).&#13;&#10;     */&#13;&#10;    public List&lt;Bitacora&gt; buscarPorTipo(String tipo) {&#13;&#10;        return repositorioBitacora.listarPorTipoCuidado(tipo);&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Lista todas las bitácoras del sistema.&#13;&#10;     */&#13;&#10;    public List&lt;Bitacora&gt; listarTodas() {&#13;&#10;        return repositorioBitacora.listarTodas();&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/config/SecurityConfig.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/config/SecurityConfig.java" />
              <option name="originalContent" value="package com.planta.plantapp.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.security.config.annotation.web.builders.HttpSecurity;&#10;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;&#10;import org.springframework.security.web.SecurityFilterChain;&#10;import org.springframework.security.crypto.password.PasswordEncoder;&#10;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;&#10;&#10;@Configuration&#10;@EnableWebSecurity&#10;public class SecurityConfig {&#10;&#10;    @Bean&#10;    public PasswordEncoder passwordEncoder() {&#10;        return new BCryptPasswordEncoder();&#10;    }&#10;&#10;    @Bean&#10;    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {&#10;        http&#10;                .csrf(csrf -&gt; csrf.disable())&#10;                .authorizeHttpRequests(auth -&gt; auth&#10;                        .requestMatchers(&#10;                                // Rutas existentes&#10;                                &quot;/web/login&quot;, &quot;/web/registro&quot;,&quot;/web/index&quot;, &quot;/web/dashboard&quot;,&#10;                                &quot;/usuarios/**&quot;, &quot;/web/dashboard#eventos&quot;, &quot;/web/plantas/catalogo&quot;, &quot;/web/test2&quot;, &quot;/web/plantas&quot;,&#10;                                &quot;/login/**&quot;, &quot;/css/**&quot;, &quot;/js/**&quot;, &quot;/images/**&quot;,&quot;/static/**&quot;,&#10;                                // Nuevas rutas para bitácora&#10;                                &quot;/&quot;, &quot;/home&quot;, &quot;/dashboard&quot;,&#10;                                &quot;/bitacora/**&quot;, &quot;/api/bitacoras/**&quot;,&#10;                                &quot;/plantas/**&quot;, &quot;/recordatorios/**&quot;,&#10;                                // Consola H2 para desarrollo&#10;                                &quot;/h2-console/**&quot;,&#10;                                // Recursos estáticos adicionales&#10;                                &quot;/templates/**&quot;, &quot;/vista/**&quot;&#10;                        ).permitAll()&#10;                        .anyRequest().authenticated()&#10;                )&#10;                .formLogin(login -&gt; login&#10;                        .loginPage(&quot;/login&quot;)&#10;                        .defaultSuccessUrl(&quot;/dashboard&quot;, true)&#10;                        .permitAll()&#10;                )&#10;                .logout(logout -&gt; logout&#10;                        .logoutUrl(&quot;/logout&quot;)&#10;                        .logoutSuccessUrl(&quot;/login&quot;)&#10;                        .permitAll()&#10;                )&#10;                // Configuración especial para H2 Console&#10;                .headers(headers -&gt; headers.frameOptions().disable());&#10;&#10;        return http.build();&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.planta.plantapp.config;&#10;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.security.config.annotation.web.builders.HttpSecurity;&#10;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;&#10;import org.springframework.security.web.SecurityFilterChain;&#10;import org.springframework.security.crypto.password.PasswordEncoder;&#10;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;&#10;&#10;@Configuration&#10;@EnableWebSecurity&#10;public class SecurityConfig {&#10;&#10;    @Bean&#10;    public PasswordEncoder passwordEncoder() {&#10;        return new BCryptPasswordEncoder();&#10;    }&#10;&#10;    @Bean&#10;    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {&#10;        http&#10;                .csrf(csrf -&gt; csrf.disable())&#10;                .authorizeHttpRequests(auth -&gt; auth&#10;                        .requestMatchers(&#10;                                // Rutas públicas principales&#10;                                &quot;/&quot;, &quot;/web/index&quot;, &quot;/web/login&quot;, &quot;/web/registro&quot;,&#10;                                // Rutas de bitácora (públicas por ahora)&#10;                                &quot;/bitacora/**&quot;, &quot;/api/bitacoras/**&quot;,&#10;                                // Recursos estáticos&#10;                                &quot;/css/**&quot;, &quot;/js/**&quot;, &quot;/images/**&quot;, &quot;/static/**&quot;,&#10;                                &quot;/login/**&quot;, &quot;/vista/**&quot;,&#10;                                // Otras rutas existentes&#10;                                &quot;/web/dashboard&quot;, &quot;/usuarios/**&quot;, &quot;/web/plantas/**&quot;,&#10;                                &quot;/plantas/**&quot;, &quot;/recordatorios/**&quot;,&#10;                                // Consola H2 para desarrollo&#10;                                &quot;/h2-console/**&quot;&#10;                        ).permitAll()&#10;                        .anyRequest().permitAll() // Temporalmente permitir todo&#10;                )&#10;                .formLogin(login -&gt; login&#10;                        .loginPage(&quot;/web/login&quot;)&#10;                        .defaultSuccessUrl(&quot;/web/dashboard&quot;, true)&#10;                        .permitAll()&#10;                )&#10;                .logout(logout -&gt; logout&#10;                        .logoutUrl(&quot;/logout&quot;)&#10;                        .logoutSuccessUrl(&quot;/web/login&quot;)&#10;                        .permitAll()&#10;                )&#10;                // Configuración especial para H2 Console&#10;                .headers(headers -&gt; headers.frameOptions().disable());&#10;&#10;        return http.build();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/dominio/modelo/IBitacoraRepositorio.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/dominio/modelo/IBitacoraRepositorio.java" />
              <option name="originalContent" value="package com.planta.plantapp.dominio.modelo;&#10;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#10;&#10;import java.util.Date;&#10;import java.util.List;&#10;&#10;/**&#10; * Repositorio del dominio que define las operaciones disponibles&#10; * para gestionar bitácoras asociadas a plantas.&#10; *&#10; * Esta interfaz pertenece al dominio del problema y no define detalles de implementación.&#10; */&#10;public interface IBitacoraRepositorio {&#10;&#10;    /**&#10;     * Guarda una nueva bitácora en el sistema.&#10;     * @param bitacora Bitácora a guardar&#10;     */&#10;    void guardar(Bitacora bitacora);&#10;&#10;    /**&#10;     * Obtiene una bitácora por su identificador único.&#10;     * @param id Identificador de la bitácora&#10;     * @return Bitacora correspondiente o null si no existe&#10;     */&#10;    Bitacora obtenerPorId(String id);&#10;&#10;    /**&#10;     * Lista todas las bitácoras registradas.&#10;     * @return Lista completa de bitácoras&#10;     */&#10;    List&lt;Bitacora&gt; listarTodas();&#10;&#10;    /**&#10;     * Elimina una bitácora según su ID.&#10;     * @param id Identificador de la bitácora a eliminar&#10;     */&#10;    void eliminar(String id);&#10;&#10;    /**&#10;     * Actualiza una bitácora existente.&#10;     * @param bitacora Bitácora con los cambios aplicados&#10;     */&#10;    void actualizar(Bitacora bitacora);&#10;&#10;    /**&#10;     * Lista todas las bitácoras asociadas a una planta específica.&#10;     * @param plantaId ID de la planta&#10;     * @return Lista de bitácoras asociadas&#10;     */&#10;    List&lt;Bitacora&gt; listarPorPlanta(String plantaId);&#10;&#10;    /**&#10;     * Lista todas las bitácoras registradas por un usuario específico.&#10;     * @param usuarioId ID del usuario&#10;     * @return Lista de bitácoras creadas por el usuario&#10;     */&#10;    List&lt;Bitacora&gt; listarPorUsuario(String usuarioId);&#10;&#10;    /**&#10;     * Lista todas las bitácoras dentro de un rango de fechas.&#10;     * @param fechaInicio Fecha de inicio del rango&#10;     * @param fechaFin Fecha final del rango&#10;     * @return Lista de bitácoras en el rango&#10;     */&#10;    List&lt;Bitacora&gt; listarPorFecha(Date fechaInicio, Date fechaFin);&#10;&#10;    /**&#10;     * Lista las bitácoras por tipo de actividad (riego, poda, etc.).&#10;     * @param tipoActividad Nombre del tipo de actividad&#10;     * @return Lista de bitácoras filtradas&#10;     */&#10;    List&lt;Bitacora&gt; listarPorTipoActividad(String tipoActividad);&#10;&#10;    /**&#10;     * Busca bitácoras que contengan una descripción parcial o total.&#10;     * @param descripcion Texto a buscar&#10;     * @return Lista de coincidencias&#10;     */&#10;    List&lt;Bitacora&gt; buscarPorDescripcion(String descripcion);&#10;&#10;    /**&#10;     * Cuenta cuántas bitácoras existen para una planta.&#10;     * @param plantaId ID de la planta&#10;     * @return Número total de registros&#10;     */&#10;    Long contarRegistrosPorPlanta(String plantaId);&#10;&#10;    /**&#10;     * Obtiene la última bitácora registrada para una planta.&#10;     * @param plantaId ID de la planta&#10;     * @return Último registro de bitácora o null si no hay registros&#10;     */&#10;    Bitacora obtenerUltimoRegistro(String plantaId);&#10;}&#10;" />
              <option name="updatedContent" value="package com.planta.plantapp.dominio.modelo;&#13;&#10;&#13;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#13;&#10;&#13;&#10;import java.time.LocalDateTime;&#13;&#10;import java.util.List;&#13;&#10;&#13;&#10;/**&#13;&#10; * Repositorio del dominio que define las operaciones disponibles&#13;&#10; * para gestionar bitácoras asociadas a plantas.&#13;&#10; *&#13;&#10; * Esta interfaz pertenece al dominio del problema y no define detalles de implementación.&#13;&#10; */&#13;&#10;public interface IBitacoraRepositorio {&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Guarda una nueva bitácora en el sistema.&#13;&#10;     * @param bitacora Bitácora a guardar&#13;&#10;     */&#13;&#10;    void guardar(Bitacora bitacora);&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Obtiene una bitácora por su identificador único.&#13;&#10;     * @param id Identificador de la bitácora&#13;&#10;     * @return Bitacora correspondiente o null si no existe&#13;&#10;     */&#13;&#10;    Bitacora obtenerPorId(String id);&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Lista todas las bitácoras registradas.&#13;&#10;     * @return Lista completa de bitácoras&#13;&#10;     */&#13;&#10;    List&lt;Bitacora&gt; listarTodas();&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Elimina una bitácora según su ID.&#13;&#10;     * @param id Identificador de la bitácora a eliminar&#13;&#10;     */&#13;&#10;    void eliminar(String id);&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Actualiza una bitácora existente.&#13;&#10;     * @param bitacora Bitácora con los cambios aplicados&#13;&#10;     */&#13;&#10;    void actualizar(Bitacora bitacora);&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Lista todas las bitácoras asociadas a una planta específica.&#13;&#10;     * @param plantaId ID de la planta&#13;&#10;     * @return Lista de bitácoras asociadas&#13;&#10;     */&#13;&#10;    List&lt;Bitacora&gt; listarPorPlanta(String plantaId);&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Lista las bitácoras filtradas por tipo de cuidado.&#13;&#10;     * @param tipoCuidado Tipo de cuidado a filtrar&#13;&#10;     * @return Lista de bitácoras del tipo especificado&#13;&#10;     */&#13;&#10;    List&lt;Bitacora&gt; listarPorTipoCuidado(String tipoCuidado);&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Lista las bitácoras en un rango de fechas.&#13;&#10;     * @param fechaInicio Fecha de inicio del rango&#13;&#10;     * @param fechaFin Fecha de fin del rango&#13;&#10;     * @return Lista de bitácoras en el rango especificado&#13;&#10;     */&#13;&#10;    List&lt;Bitacora&gt; listarPorRangoFechas(LocalDateTime fechaInicio, LocalDateTime fechaFin);&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Lista las bitácoras de una planta en un rango de fechas.&#13;&#10;     * @param plantaId ID de la planta&#13;&#10;     * @param fechaInicio Fecha de inicio&#13;&#10;     * @param fechaFin Fecha de fin&#13;&#10;     * @return Lista de bitácoras filtradas&#13;&#10;     */&#13;&#10;    List&lt;Bitacora&gt; listarPorPlantaYFechas(String plantaId, LocalDateTime fechaInicio, LocalDateTime fechaFin);&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Cuenta el número total de bitácoras de una planta.&#13;&#10;     * @param plantaId ID de la planta&#13;&#10;     * @return Número de bitácoras&#13;&#10;     */&#13;&#10;    long contarPorPlanta(String plantaId);&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Obtiene las últimas bitácoras de una planta.&#13;&#10;     * @param plantaId ID de la planta&#13;&#10;     * @param limite Número máximo de bitácoras a obtener&#13;&#10;     * @return Lista de las últimas bitácoras&#13;&#10;     */&#13;&#10;    List&lt;Bitacora&gt; obtenerUltimasPorPlanta(String plantaId, int limite);&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/dominio/modelo/bitacora/Bitacora.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/dominio/modelo/bitacora/Bitacora.java" />
              <option name="originalContent" value="package com.planta.plantapp.dominio.modelo.bitacora;&#10;&#10;import com.planta.plantapp.dominio.modelo.planta.Planta;&#10;&#10;import java.util.Date;&#10;import java.util.Objects;&#10;&#10;/**&#10; * Entidad de dominio que representa una entrada de bitácora de cuidado de una planta.&#10; */&#10;public class Bitacora {&#10;&#10;    private String id;&#10;    private Date fecha = new Date();  // inicialización directa&#10;    private String descripcion;&#10;    private String foto;&#10;    private Planta planta;&#10;&#10;    public Bitacora(String descripcion, String foto, Planta planta) {&#10;        this.descripcion = descripcion;&#10;        this.foto = foto;&#10;        this.planta = planta;&#10;    }&#10;&#10;    public Bitacora() {&#10;        // Constructor vacío&#10;    }&#10;&#10;    public String getId() {&#10;        return id;&#10;    }&#10;&#10;    public void setId(String id) {&#10;        this.id = id;&#10;    }&#10;&#10;    public Date getFecha() {&#10;        return fecha;&#10;    }&#10;&#10;    public void setFecha(Date fecha) {&#10;        this.fecha = fecha;&#10;    }&#10;&#10;    public String getDescripcion() {&#10;        return descripcion;&#10;    }&#10;&#10;    public void setDescripcion(String descripcion) {&#10;        this.descripcion = descripcion;&#10;    }&#10;&#10;    public String getFoto() {&#10;        return foto;&#10;    }&#10;&#10;    public void setFoto(String foto) {&#10;        this.foto = foto;&#10;    }&#10;&#10;    public Planta getPlanta() {&#10;        return planta;&#10;    }&#10;&#10;    public void setPlanta(Planta planta) {&#10;        this.planta = planta;&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Bitacora{&quot; +&#10;                &quot;fecha=&quot; + fecha +&#10;                &quot;, descripcion='&quot; + descripcion + '\'' +&#10;                &quot;, planta=&quot; + (planta != null ? planta.getNombreComun() : &quot;N/A&quot;) +&#10;                '}';&#10;    }&#10;&#10;    @Override&#10;    public boolean equals(Object o) {&#10;        if (this == o) return true;&#10;        if (!(o instanceof Bitacora other)) return false;&#10;        return Objects.equals(id, other.id);&#10;    }&#10;&#10;    @Override&#10;    public int hashCode() {&#10;        return Objects.hash(id);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.planta.plantapp.dominio.modelo.bitacora;&#10;&#10;import com.planta.plantapp.dominio.modelo.planta.Planta;&#10;import org.springframework.data.annotation.Id;&#10;import org.springframework.data.mongodb.core.mapping.Document;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.Objects;&#10;&#10;/**&#10; * Entidad de dominio que representa una entrada de bitácora de cuidado de una planta.&#10; */&#10;@Document(collection = &quot;bitacoras&quot;)&#10;public class Bitacora {&#10;&#10;    @Id&#10;    private String id;&#10;    private LocalDateTime fecha;&#10;    private String descripcion;&#10;    private String foto;&#10;    private String plantaId;&#10;    private String tipoCuidado;&#10;    private String observaciones;&#10;&#10;    public Bitacora() {&#10;        this.fecha = LocalDateTime.now();&#10;    }&#10;&#10;    public Bitacora(String descripcion, String foto, String plantaId, String tipoCuidado) {&#10;        this();&#10;        if (descripcion == null || descripcion.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;La descripción no puede ser nula o vacía&quot;);&#10;        }&#10;        if (plantaId == null || plantaId.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;El ID de la planta no puede ser nulo o vacío&quot;);&#10;        }&#10;        this.descripcion = descripcion;&#10;        this.foto = foto;&#10;        this.plantaId = plantaId;&#10;        this.tipoCuidado = tipoCuidado;&#10;    }&#10;&#10;    public Bitacora(String descripcion, String foto, String plantaId, String tipoCuidado, String observaciones) {&#10;        this(descripcion, foto, plantaId, tipoCuidado);&#10;        this.observaciones = observaciones;&#10;    }&#10;&#10;    // Getters y Setters&#10;    public String getId() {&#10;        return id;&#10;    }&#10;&#10;    public void setId(String id) {&#10;        this.id = id;&#10;    }&#10;&#10;    public LocalDateTime getFecha() {&#10;        return fecha;&#10;    }&#10;&#10;    public void setFecha(LocalDateTime fecha) {&#10;        this.fecha = fecha;&#10;    }&#10;&#10;    public String getDescripcion() {&#10;        return descripcion;&#10;    }&#10;&#10;    public void setDescripcion(String descripcion) {&#10;        if (descripcion == null || descripcion.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;La descripción no puede ser nula o vacía&quot;);&#10;        }&#10;        this.descripcion = descripcion;&#10;    }&#10;&#10;    public String getFoto() {&#10;        return foto;&#10;    }&#10;&#10;    public void setFoto(String foto) {&#10;        this.foto = foto;&#10;    }&#10;&#10;    public String getPlantaId() {&#10;        return plantaId;&#10;    }&#10;&#10;    public void setPlantaId(String plantaId) {&#10;        if (plantaId == null || plantaId.isBlank()) {&#10;            throw new IllegalArgumentException(&quot;El ID de la planta no puede ser nulo o vacío&quot;);&#10;        }&#10;        this.plantaId = plantaId;&#10;    }&#10;&#10;    public String getTipoCuidado() {&#10;        return tipoCuidado;&#10;    }&#10;&#10;    public void setTipoCuidado(String tipoCuidado) {&#10;        this.tipoCuidado = tipoCuidado;&#10;    }&#10;&#10;    public String getObservaciones() {&#10;        return observaciones;&#10;    }&#10;&#10;    public void setObservaciones(String observaciones) {&#10;        this.observaciones = observaciones;&#10;    }&#10;&#10;    @Override&#10;    public boolean equals(Object obj) {&#10;        if (this == obj) return true;&#10;        if (obj == null || getClass() != obj.getClass()) return false;&#10;        Bitacora bitacora = (Bitacora) obj;&#10;        return Objects.equals(id, bitacora.id);&#10;    }&#10;&#10;    @Override&#10;    public int hashCode() {&#10;        return Objects.hash(id);&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Bitacora{&quot; +&#10;                &quot;id='&quot; + id + '\'' +&#10;                &quot;, fecha=&quot; + fecha +&#10;                &quot;, descripcion='&quot; + descripcion + '\'' +&#10;                &quot;, plantaId='&quot; + plantaId + '\'' +&#10;                &quot;, tipoCuidado='&quot; + tipoCuidado + '\'' +&#10;                '}';&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/dominio/modelo/servicios/ServicioBitacoraDominio.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/dominio/modelo/servicios/ServicioBitacoraDominio.java" />
              <option name="originalContent" value="package com.planta.plantapp.dominio.modelo.servicios;&#10;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#10;import com.planta.plantapp.dominio.modelo.planta.Planta;&#10;import com.planta.plantapp.dominio.modelo.IBitacoraRepositorio;&#10;&#10;import java.util.Date;&#10;import java.util.Objects;&#10;&#10;/**&#10; * Servicio de dominio para registrar observaciones (bitácoras) asociadas a plantas.&#10; */&#10;public class ServicioBitacoraDominio {&#10;&#10;    private final IBitacoraRepositorio repositorioBitacora;&#10;&#10;    /**&#10;     * Constructor que inyecta el repositorio del dominio.&#10;     */&#10;    public ServicioBitacoraDominio(IBitacoraRepositorio repositorioBitacora) {&#10;        this.repositorioBitacora = repositorioBitacora;&#10;    }&#10;&#10;    /**&#10;     * Registra una observación para una planta en forma de bitácora.&#10;     *&#10;     * @param planta Planta observada&#10;     * @param descripcion Texto descriptivo de la observación&#10;     * @param fotoUrl (opcional) URL de foto relacionada&#10;     */&#10;    public void registrarObservacion(Planta planta, String descripcion, String fotoUrl) {&#10;        Objects.requireNonNull(planta, &quot;La planta no puede ser null&quot;);&#10;        Objects.requireNonNull(descripcion, &quot;La descripción no puede ser null&quot;);&#10;&#10;        Bitacora bitacora = new Bitacora(descripcion, fotoUrl, planta);&#10;        bitacora.setFecha(new Date());&#10;&#10;        repositorioBitacora.guardar(bitacora);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.planta.plantapp.dominio.modelo.servicios;&#13;&#10;&#13;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#13;&#10;import com.planta.plantapp.dominio.modelo.planta.Planta;&#13;&#10;import com.planta.plantapp.dominio.modelo.IBitacoraRepositorio;&#13;&#10;&#13;&#10;import java.util.Objects;&#13;&#10;&#13;&#10;/**&#13;&#10; * Servicio de dominio para registrar observaciones (bitácoras) asociadas a plantas.&#13;&#10; */&#13;&#10;public class ServicioBitacoraDominio {&#13;&#10;&#13;&#10;    private final IBitacoraRepositorio repositorioBitacora;&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Constructor que inyecta el repositorio del dominio.&#13;&#10;     */&#13;&#10;    public ServicioBitacoraDominio(IBitacoraRepositorio repositorioBitacora) {&#13;&#10;        this.repositorioBitacora = repositorioBitacora;&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * Registra una observación para una planta en forma de bitácora.&#13;&#10;     *&#13;&#10;     * @param planta Planta observada&#13;&#10;     * @param descripcion Texto descriptivo de la observación&#13;&#10;     * @param fotoUrl (opcional) URL de foto relacionada&#13;&#10;     */&#13;&#10;    public void registrarObservacion(Planta planta, String descripcion, String fotoUrl) {&#13;&#10;        Objects.requireNonNull(planta, &quot;La planta no puede ser null&quot;);&#13;&#10;        Objects.requireNonNull(descripcion, &quot;La descripción no puede ser null&quot;);&#13;&#10;&#13;&#10;        Bitacora bitacora = new Bitacora(descripcion, fotoUrl, planta.getId(), &quot;observacion&quot;);&#13;&#10;        // La fecha se asigna automáticamente en el constructor de Bitacora&#13;&#10;&#13;&#10;        repositorioBitacora.guardar(bitacora);&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/infraestructura/repositorio/mongodb/BitacoraRepositorioImpl.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/infraestructura/repositorio/mongodb/BitacoraRepositorioImpl.java" />
              <option name="originalContent" value="package com.planta.plantapp.infraestructura.repositorio.mongodb;&#10;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#10;import com.planta.plantapp.dominio.modelo.IBitacoraRepositorio;&#10;&#10;import java.util.Date;&#10;import java.util.List;&#10;&#10;public class BitacoraRepositorioImpl implements IBitacoraRepositorio {&#10;&#10;    public BitacoraRepositorioImpl() {&#10;        // Constructor por defecto&#10;    }&#10;&#10;    @Override&#10;    public void guardar(Bitacora bitacora) {&#10;        // TODO: guardar en MongoDB&#10;    }&#10;&#10;    @Override&#10;    public Bitacora obtenerPorId(String id) {&#10;        // TODO: buscar por ID&#10;        return null;&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Bitacora&gt; listarTodas() {&#10;        // TODO&#10;        return null;&#10;    }&#10;&#10;    @Override&#10;    public void eliminar(String id) {&#10;        // TODO&#10;    }&#10;&#10;    @Override&#10;    public void actualizar(Bitacora bitacora) {&#10;        // TODO&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Bitacora&gt; listarPorPlanta(String plantaId) {&#10;        // TODO&#10;        return null;&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Bitacora&gt; listarPorUsuario(String usuarioId) {&#10;        // TODO&#10;        return null;&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Bitacora&gt; listarPorFecha(Date fechaInicio, Date fechaFin) {&#10;        // TODO&#10;        return null;&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Bitacora&gt; listarPorTipoActividad(String tipoActividad) {&#10;        // TODO&#10;        return null;&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Bitacora&gt; buscarPorDescripcion(String descripcion) {&#10;        // TODO&#10;        return null;&#10;    }&#10;&#10;    @Override&#10;    public Long contarRegistrosPorPlanta(String plantaId) {&#10;        // TODO&#10;        return null;&#10;    }&#10;&#10;    @Override&#10;    public Bitacora obtenerUltimoRegistro(String plantaId) {&#10;        // TODO&#10;        return null;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.planta.plantapp.infraestructura.repositorio.mongodb;&#13;&#10;&#13;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#13;&#10;import com.planta.plantapp.dominio.modelo.IBitacoraRepositorio;&#13;&#10;import com.planta.plantapp.infraestructura.repositorio.mongodb.mongo.BitacoraMongoRepositorio;&#13;&#10;import org.springframework.beans.factory.annotation.Autowired;&#13;&#10;import org.springframework.data.domain.PageRequest;&#13;&#10;import org.springframework.data.domain.Sort;&#13;&#10;import org.springframework.stereotype.Repository;&#13;&#10;&#13;&#10;import java.time.LocalDateTime;&#13;&#10;import java.util.List;&#13;&#10;&#13;&#10;/**&#13;&#10; * Implementación del repositorio de bitácora usando MongoDB.&#13;&#10; */&#13;&#10;@Repository&#13;&#10;public class BitacoraRepositorioImpl implements IBitacoraRepositorio {&#13;&#10;&#13;&#10;    private final BitacoraMongoRepositorio bitacoraMongoRepositorio;&#13;&#10;&#13;&#10;    @Autowired&#13;&#10;    public BitacoraRepositorioImpl(BitacoraMongoRepositorio bitacoraMongoRepositorio) {&#13;&#10;        this.bitacoraMongoRepositorio = bitacoraMongoRepositorio;&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public void guardar(Bitacora bitacora) {&#13;&#10;        bitacoraMongoRepositorio.save(bitacora);&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public Bitacora obtenerPorId(String id) {&#13;&#10;        return bitacoraMongoRepositorio.findById(id).orElse(null);&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public List&lt;Bitacora&gt; listarTodas() {&#13;&#10;        return bitacoraMongoRepositorio.findAll(Sort.by(Sort.Direction.DESC, &quot;fecha&quot;));&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public void eliminar(String id) {&#13;&#10;        bitacoraMongoRepositorio.deleteById(id);&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public void actualizar(Bitacora bitacora) {&#13;&#10;        bitacoraMongoRepositorio.save(bitacora);&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public List&lt;Bitacora&gt; listarPorPlanta(String plantaId) {&#13;&#10;        return bitacoraMongoRepositorio.findByPlantaIdOrderByFechaDesc(plantaId);&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public List&lt;Bitacora&gt; listarPorTipoCuidado(String tipoCuidado) {&#13;&#10;        return bitacoraMongoRepositorio.findByTipoCuidadoOrderByFechaDesc(tipoCuidado);&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public List&lt;Bitacora&gt; listarPorRangoFechas(LocalDateTime fechaInicio, LocalDateTime fechaFin) {&#13;&#10;        return bitacoraMongoRepositorio.findByFechaBetweenOrderByFechaDesc(fechaInicio, fechaFin);&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public List&lt;Bitacora&gt; listarPorPlantaYFechas(String plantaId, LocalDateTime fechaInicio, LocalDateTime fechaFin) {&#13;&#10;        return bitacoraMongoRepositorio.findByPlantaIdAndFechaBetweenOrderByFechaDesc(plantaId, fechaInicio, fechaFin);&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public long contarPorPlanta(String plantaId) {&#13;&#10;        return bitacoraMongoRepositorio.countByPlantaId(plantaId);&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public List&lt;Bitacora&gt; obtenerUltimasPorPlanta(String plantaId, int limite) {&#13;&#10;        PageRequest pageRequest = PageRequest.of(0, limite, Sort.by(Sort.Direction.DESC, &quot;fecha&quot;));&#13;&#10;        return bitacoraMongoRepositorio.findByPlantaId(plantaId, pageRequest).getContent();&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/infraestructura/repositorio/mongodb/mongo/BitacoraMongoRepositorio.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/infraestructura/repositorio/mongodb/mongo/BitacoraMongoRepositorio.java" />
              <option name="updatedContent" value="package com.planta.plantapp.infraestructura.repositorio.mongodb.mongo;&#10;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#10;import org.springframework.data.domain.Page;&#10;import org.springframework.data.domain.Pageable;&#10;import org.springframework.data.mongodb.repository.MongoRepository;&#10;import org.springframework.stereotype.Repository;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.List;&#10;&#10;/**&#10; * Repositorio de MongoDB para la gestión de bitácoras.&#10; * Extiende MongoRepository para operaciones CRUD básicas y define consultas personalizadas.&#10; */&#10;@Repository&#10;public interface BitacoraMongoRepositorio extends MongoRepository&lt;Bitacora, String&gt; {&#10;&#10;    /**&#10;     * Encuentra todas las bitácoras de una planta ordenadas por fecha descendente.&#10;     * @param plantaId ID de la planta&#10;     * @return Lista de bitácoras&#10;     */&#10;    List&lt;Bitacora&gt; findByPlantaIdOrderByFechaDesc(String plantaId);&#10;&#10;    /**&#10;     * Encuentra bitácoras por tipo de cuidado ordenadas por fecha descendente.&#10;     * @param tipoCuidado Tipo de cuidado&#10;     * @return Lista de bitácoras&#10;     */&#10;    List&lt;Bitacora&gt; findByTipoCuidadoOrderByFechaDesc(String tipoCuidado);&#10;&#10;    /**&#10;     * Encuentra bitácoras en un rango de fechas ordenadas por fecha descendente.&#10;     * @param fechaInicio Fecha de inicio&#10;     * @param fechaFin Fecha de fin&#10;     * @return Lista de bitácoras&#10;     */&#10;    List&lt;Bitacora&gt; findByFechaBetweenOrderByFechaDesc(LocalDateTime fechaInicio, LocalDateTime fechaFin);&#10;&#10;    /**&#10;     * Encuentra bitácoras de una planta en un rango de fechas ordenadas por fecha descendente.&#10;     * @param plantaId ID de la planta&#10;     * @param fechaInicio Fecha de inicio&#10;     * @param fechaFin Fecha de fin&#10;     * @return Lista de bitácoras&#10;     */&#10;    List&lt;Bitacora&gt; findByPlantaIdAndFechaBetweenOrderByFechaDesc(String plantaId, LocalDateTime fechaInicio, LocalDateTime fechaFin);&#10;&#10;    /**&#10;     * Cuenta el número de bitácoras de una planta.&#10;     * @param plantaId ID de la planta&#10;     * @return Número de bitácoras&#10;     */&#10;    long countByPlantaId(String plantaId);&#10;&#10;    /**&#10;     * Encuentra bitácoras de una planta con paginación.&#10;     * @param plantaId ID de la planta&#10;     * @param pageable Configuración de paginación&#10;     * @return Página de bitácoras&#10;     */&#10;    Page&lt;Bitacora&gt; findByPlantaId(String plantaId, Pageable pageable);&#10;&#10;    /**&#10;     * Encuentra bitácoras que contengan texto en la descripción.&#10;     * @param descripcion Texto a buscar&#10;     * @return Lista de bitácoras&#10;     */&#10;    List&lt;Bitacora&gt; findByDescripcionContainingIgnoreCaseOrderByFechaDesc(String descripcion);&#10;&#10;    /**&#10;     * Encuentra bitácoras de una planta que contengan texto en la descripción.&#10;     * @param plantaId ID de la planta&#10;     * @param descripcion Texto a buscar&#10;     * @return Lista de bitácoras&#10;     */&#10;    List&lt;Bitacora&gt; findByPlantaIdAndDescripcionContainingIgnoreCaseOrderByFechaDesc(String plantaId, String descripcion);&#10;&#10;    /**&#10;     * Encuentra bitácoras con foto.&#10;     * @return Lista de bitácoras que tienen foto&#10;     */&#10;    List&lt;Bitacora&gt; findByFotoIsNotNullOrderByFechaDesc();&#10;&#10;    /**&#10;     * Encuentra bitácoras de una planta con foto.&#10;     * @param plantaId ID de la planta&#10;     * @return Lista de bitácoras con foto&#10;     */&#10;    List&lt;Bitacora&gt; findByPlantaIdAndFotoIsNotNullOrderByFechaDesc(String plantaId);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/presentacion/controlador/BitacoraController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/presentacion/controlador/BitacoraController.java" />
              <option name="originalContent" value="package com.planta.plantapp.presentacion.controlador;&#10;&#10;import com.planta.plantapp.aplicacion.interfaces.IServicioBitacora;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.format.annotation.DateTimeFormat;&#10;import org.springframework.http.HttpStatus;&#10;import org.springframework.http.ResponseEntity;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.List;&#10;&#10;/**&#10; * Controlador REST para manejar las operaciones relacionadas con la bitácora de las plantas.&#10; */&#10;@RestController&#10;@RequestMapping(&quot;/api/bitacoras&quot;)&#10;@CrossOrigin(origins = &quot;*&quot;)&#10;public class BitacoraController {&#10;&#10;    private final IServicioBitacora servicioBitacora;&#10;&#10;    @Autowired&#10;    public BitacoraController(IServicioBitacora servicioBitacora) {&#10;        this.servicioBitacora = servicioBitacora;&#10;    }&#10;&#10;    /**&#10;     * Registra una nueva entrada en la bitácora.&#10;     */&#10;    @PostMapping&#10;    public ResponseEntity&lt;Bitacora&gt; registrarEntrada(@RequestBody RegistrarBitacoraRequest request) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.registrarEntrada(&#10;                request.getDescripcion(),&#10;                request.getFoto(),&#10;                request.getPlantaId(),&#10;                request.getTipoCuidado(),&#10;                request.getObservaciones()&#10;            );&#10;            return ResponseEntity.status(HttpStatus.CREATED).body(bitacora);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Obtiene una bitácora por su ID.&#10;     */&#10;    @GetMapping(&quot;/{id}&quot;)&#10;    public ResponseEntity&lt;Bitacora&gt; obtenerBitacora(@PathVariable String id) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.obtenerBitacora(id);&#10;            return ResponseEntity.ok(bitacora);&#10;        } catch (RuntimeException e) {&#10;            return ResponseEntity.notFound().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Lista todas las bitácoras del sistema.&#10;     */&#10;    @GetMapping&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; listarTodasLasBitacoras() {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarTodasLasBitacoras();&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Lista las bitácoras de una planta específica.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}&quot;)&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; obtenerPorPlanta(@PathVariable String plantaId) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarBitacorasPorPlanta(plantaId);&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Lista las bitácoras por tipo de cuidado.&#10;     */&#10;    @GetMapping(&quot;/tipo/{tipoCuidado}&quot;)&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; obtenerPorTipoCuidado(@PathVariable String tipoCuidado) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarBitacorasPorTipoCuidado(tipoCuidado);&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Lista las bitácoras en un rango de fechas.&#10;     */&#10;    @GetMapping(&quot;/fechas&quot;)&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; obtenerPorFechas(&#10;            @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) LocalDateTime fechaInicio,&#10;            @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) LocalDateTime fechaFin) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarBitacorasPorFechas(fechaInicio, fechaFin);&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Lista las bitácoras de una planta en un rango de fechas.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}/fechas&quot;)&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; obtenerPorPlantaYFechas(&#10;            @PathVariable String plantaId,&#10;            @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) LocalDateTime fechaInicio,&#10;            @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) LocalDateTime fechaFin) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarBitacorasPorPlantaYFechas(plantaId, fechaInicio, fechaFin);&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Actualiza una bitácora existente.&#10;     */&#10;    @PutMapping(&quot;/{id}&quot;)&#10;    public ResponseEntity&lt;Bitacora&gt; actualizarBitacora(@PathVariable String id, @RequestBody ActualizarBitacoraRequest request) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.actualizarBitacora(&#10;                id,&#10;                request.getDescripcion(),&#10;                request.getFoto(),&#10;                request.getTipoCuidado(),&#10;                request.getObservaciones()&#10;            );&#10;            return ResponseEntity.ok(bitacora);&#10;        } catch (RuntimeException e) {&#10;            return ResponseEntity.notFound().build();&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Elimina una bitácora.&#10;     */&#10;    @DeleteMapping(&quot;/{id}&quot;)&#10;    public ResponseEntity&lt;Void&gt; eliminarBitacora(@PathVariable String id) {&#10;        try {&#10;            servicioBitacora.eliminarBitacora(id);&#10;            return ResponseEntity.noContent().build();&#10;        } catch (RuntimeException e) {&#10;            return ResponseEntity.notFound().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Obtiene el historial reciente de una planta.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}/reciente&quot;)&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; obtenerHistorialReciente(&#10;            @PathVariable String plantaId,&#10;            @RequestParam(defaultValue = &quot;10&quot;) int limite) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.obtenerHistorialReciente(plantaId, limite);&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Obtiene estadísticas de cuidados de una planta.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}/estadisticas&quot;)&#10;    public ResponseEntity&lt;EstadisticasBitacoraResponse&gt; obtenerEstadisticas(@PathVariable String plantaId) {&#10;        try {&#10;            long totalCuidados = servicioBitacora.obtenerTotalCuidados(plantaId);&#10;            return ResponseEntity.ok(new EstadisticasBitacoraResponse(totalCuidados));&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Exporta las bitácoras de una planta.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}/exportar&quot;)&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; exportarBitacorasPlanta(@PathVariable String plantaId) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.exportarBitacorasPlanta(plantaId);&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    // DTOs internos&#10;    public static class RegistrarBitacoraRequest {&#10;        private String descripcion;&#10;        private String foto;&#10;        private String plantaId;&#10;        private String tipoCuidado;&#10;        private String observaciones;&#10;&#10;        // Getters y setters&#10;        public String getDescripcion() { return descripcion; }&#10;        public void setDescripcion(String descripcion) { this.descripcion = descripcion; }&#10;        public String getFoto() { return foto; }&#10;        public void setFoto(String foto) { this.foto = foto; }&#10;        public String getPlantaId() { return plantaId; }&#10;        public void setPlantaId(String plantaId) { this.plantaId = plantaId; }&#10;        public String getTipoCuidado() { return tipoCuidado; }&#10;        public void setTipoCuidado(String tipoCuidado) { this.tipoCuidado = tipoCuidado; }&#10;        public String getObservaciones() { return observaciones; }&#10;        public void setObservaciones(String observaciones) { this.observaciones = observaciones; }&#10;    }&#10;&#10;    public static class ActualizarBitacoraRequest {&#10;        private String descripcion;&#10;        private String foto;&#10;        private String tipoCuidado;&#10;        private String observaciones;&#10;&#10;        // Getters y setters&#10;        public String getDescripcion() { return descripcion; }&#10;        public void setDescripcion(String descripcion) { this.descripcion = descripcion; }&#10;        public String getFoto() { return foto; }&#10;        public void setFoto(String foto) { this.foto = foto; }&#10;        public String getTipoCuidado() { return tipoCuidado; }&#10;        public void setTipoCuidado(String tipoCuidado) { this.tipoCuidado = tipoCuidado; }&#10;        public String getObservaciones() { return observaciones; }&#10;        public void setObservaciones(String observaciones) { this.observaciones = observaciones; }&#10;    }&#10;&#10;    public static class EstadisticasBitacoraResponse {&#10;        private long totalCuidados;&#10;&#10;        public EstadisticasBitacoraResponse(long totalCuidados) {&#10;            this.totalCuidados = totalCuidados;&#10;        }&#10;&#10;        public long getTotalCuidados() { return totalCuidados; }&#10;        public void setTotalCuidados(long totalCuidados) { this.totalCuidados = totalCuidados; }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.planta.plantapp.presentacion.controlador;&#10;&#10;import com.planta.plantapp.aplicacion.interfaces.IServicioBitacora;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.format.annotation.DateTimeFormat;&#10;import org.springframework.http.HttpStatus;&#10;import org.springframework.http.ResponseEntity;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.List;&#10;&#10;/**&#10; * Controlador REST para manejar las operaciones relacionadas con la bitácora de las plantas.&#10; */&#10;@RestController&#10;@RequestMapping(&quot;/api/bitacoras&quot;)&#10;@CrossOrigin(origins = &quot;*&quot;)&#10;public class BitacoraController {&#10;&#10;    private final IServicioBitacora servicioBitacora;&#10;&#10;    @Autowired&#10;    public BitacoraController(IServicioBitacora servicioBitacora) {&#10;        this.servicioBitacora = servicioBitacora;&#10;    }&#10;&#10;    /**&#10;     * Registra una nueva entrada en la bitácora.&#10;     */&#10;    @PostMapping&#10;    public ResponseEntity&lt;Bitacora&gt; registrarEntrada(@RequestBody RegistrarBitacoraRequest request) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.registrarEntrada(&#10;                request.getDescripcion(),&#10;                request.getFoto(),&#10;                request.getPlantaId(),&#10;                request.getTipoCuidado(),&#10;                request.getObservaciones()&#10;            );&#10;            return ResponseEntity.status(HttpStatus.CREATED).body(bitacora);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Obtiene una bitácora por su ID.&#10;     */&#10;    @GetMapping(&quot;/{id}&quot;)&#10;    public ResponseEntity&lt;Bitacora&gt; obtenerBitacora(@PathVariable String id) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.obtenerBitacora(id);&#10;            return ResponseEntity.ok(bitacora);&#10;        } catch (RuntimeException e) {&#10;            return ResponseEntity.notFound().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Lista todas las bitácoras del sistema.&#10;     */&#10;    @GetMapping&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; listarTodasLasBitacoras() {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarTodasLasBitacoras();&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Lista las bitácoras de una planta específica.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}&quot;)&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; obtenerPorPlanta(@PathVariable String plantaId) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarBitacorasPorPlanta(plantaId);&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Lista las bitácoras por tipo de cuidado.&#10;     */&#10;    @GetMapping(&quot;/tipo/{tipoCuidado}&quot;)&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; obtenerPorTipoCuidado(@PathVariable String tipoCuidado) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarBitacorasPorTipoCuidado(tipoCuidado);&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Lista las bitácoras en un rango de fechas.&#10;     */&#10;    @GetMapping(&quot;/fechas&quot;)&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; obtenerPorFechas(&#10;            @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) LocalDateTime fechaInicio,&#10;            @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) LocalDateTime fechaFin) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarBitacorasPorFechas(fechaInicio, fechaFin);&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Lista las bitácoras de una planta en un rango de fechas.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}/fechas&quot;)&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; obtenerPorPlantaYFechas(&#10;            @PathVariable String plantaId,&#10;            @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) LocalDateTime fechaInicio,&#10;            @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) LocalDateTime fechaFin) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarBitacorasPorPlantaYFechas(plantaId, fechaInicio, fechaFin);&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Actualiza una bitácora existente.&#10;     */&#10;    @PutMapping(&quot;/{id}&quot;)&#10;    public ResponseEntity&lt;Bitacora&gt; actualizarBitacora(@PathVariable String id, @RequestBody ActualizarBitacoraRequest request) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.actualizarBitacora(&#10;                id,&#10;                request.getDescripcion(),&#10;                request.getFoto(),&#10;                request.getTipoCuidado(),&#10;                request.getObservaciones()&#10;            );&#10;            return ResponseEntity.ok(bitacora);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (RuntimeException e) {&#10;            return ResponseEntity.notFound().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Elimina una bitácora.&#10;     */&#10;    @DeleteMapping(&quot;/{id}&quot;)&#10;    public ResponseEntity&lt;Void&gt; eliminarBitacora(@PathVariable String id) {&#10;        try {&#10;            servicioBitacora.eliminarBitacora(id);&#10;            return ResponseEntity.noContent().build();&#10;        } catch (RuntimeException e) {&#10;            return ResponseEntity.notFound().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Obtiene el historial reciente de una planta.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}/reciente&quot;)&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; obtenerHistorialReciente(&#10;            @PathVariable String plantaId,&#10;            @RequestParam(defaultValue = &quot;10&quot;) int limite) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.obtenerHistorialReciente(plantaId, limite);&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Obtiene estadísticas de cuidados de una planta.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}/estadisticas&quot;)&#10;    public ResponseEntity&lt;EstadisticasBitacoraResponse&gt; obtenerEstadisticas(@PathVariable String plantaId) {&#10;        try {&#10;            long totalCuidados = servicioBitacora.obtenerTotalCuidados(plantaId);&#10;            return ResponseEntity.ok(new EstadisticasBitacoraResponse(totalCuidados));&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Exporta las bitácoras de una planta.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}/exportar&quot;)&#10;    public ResponseEntity&lt;List&lt;Bitacora&gt;&gt; exportarBitacorasPlanta(@PathVariable String plantaId) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.exportarBitacorasPlanta(plantaId);&#10;            return ResponseEntity.ok(bitacoras);&#10;        } catch (IllegalArgumentException e) {&#10;            return ResponseEntity.badRequest().build();&#10;        } catch (Exception e) {&#10;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();&#10;        }&#10;    }&#10;&#10;    // DTOs internos&#10;    public static class RegistrarBitacoraRequest {&#10;        private String descripcion;&#10;        private String foto;&#10;        private String plantaId;&#10;        private String tipoCuidado;&#10;        private String observaciones;&#10;&#10;        // Getters y setters&#10;        public String getDescripcion() { return descripcion; }&#10;        public void setDescripcion(String descripcion) { this.descripcion = descripcion; }&#10;        public String getFoto() { return foto; }&#10;        public void setFoto(String foto) { this.foto = foto; }&#10;        public String getPlantaId() { return plantaId; }&#10;        public void setPlantaId(String plantaId) { this.plantaId = plantaId; }&#10;        public String getTipoCuidado() { return tipoCuidado; }&#10;        public void setTipoCuidado(String tipoCuidado) { this.tipoCuidado = tipoCuidado; }&#10;        public String getObservaciones() { return observaciones; }&#10;        public void setObservaciones(String observaciones) { this.observaciones = observaciones; }&#10;    }&#10;&#10;    public static class ActualizarBitacoraRequest {&#10;        private String descripcion;&#10;        private String foto;&#10;        private String tipoCuidado;&#10;        private String observaciones;&#10;&#10;        // Getters y setters&#10;        public String getDescripcion() { return descripcion; }&#10;        public void setDescripcion(String descripcion) { this.descripcion = descripcion; }&#10;        public String getFoto() { return foto; }&#10;        public void setFoto(String foto) { this.foto = foto; }&#10;        public String getTipoCuidado() { return tipoCuidado; }&#10;        public void setTipoCuidado(String tipoCuidado) { this.tipoCuidado = tipoCuidado; }&#10;        public String getObservaciones() { return observaciones; }&#10;        public void setObservaciones(String observaciones) { this.observaciones = observaciones; }&#10;    }&#10;&#10;    public static class EstadisticasBitacoraResponse {&#10;        private long totalCuidados;&#10;&#10;        public EstadisticasBitacoraResponse(long totalCuidados) {&#10;            this.totalCuidados = totalCuidados;&#10;        }&#10;&#10;        public long getTotalCuidados() { return totalCuidados; }&#10;        public void setTotalCuidados(long totalCuidados) { this.totalCuidados = totalCuidados; }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/presentacion/controlador/BitacoraWebController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/java/com/planta/plantapp/presentacion/controlador/BitacoraWebController.java" />
              <option name="originalContent" value="package com.planta.plantapp.presentacion.controlador;&#10;&#10;import com.planta.plantapp.aplicacion.interfaces.IServicioBitacora;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.stereotype.Controller;&#10;import org.springframework.ui.Model;&#10;import org.springframework.web.bind.annotation.*;&#10;import org.springframework.web.servlet.mvc.support.RedirectAttributes;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.List;&#10;&#10;/**&#10; * Controlador web para manejar las vistas HTML de la bitácora.&#10; */&#10;@Controller&#10;@RequestMapping(&quot;/bitacora&quot;)&#10;public class BitacoraWebController {&#10;&#10;    private final IServicioBitacora servicioBitacora;&#10;&#10;    @Autowired&#10;    public BitacoraWebController(IServicioBitacora servicioBitacora) {&#10;        this.servicioBitacora = servicioBitacora;&#10;    }&#10;&#10;    /**&#10;     * Muestra la lista de todas las bitácoras.&#10;     */&#10;    @GetMapping&#10;    public String listarBitacoras(Model model) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarTodasLasBitacoras();&#10;            model.addAttribute(&quot;bitacoras&quot;, bitacoras);&#10;            return &quot;bitacora/lista&quot;;&#10;        } catch (Exception e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Error al cargar las bitácoras: &quot; + e.getMessage());&#10;            return &quot;error&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Muestra las bitácoras de una planta específica.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}&quot;)&#10;    public String listarBitacorasPorPlanta(@PathVariable String plantaId, Model model) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarBitacorasPorPlanta(plantaId);&#10;            model.addAttribute(&quot;bitacoras&quot;, bitacoras);&#10;            model.addAttribute(&quot;plantaId&quot;, plantaId);&#10;            return &quot;bitacora/por-planta&quot;;&#10;        } catch (Exception e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Error al cargar las bitácoras de la planta: &quot; + e.getMessage());&#10;            return &quot;error&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Muestra el formulario para crear una nueva entrada en la bitácora.&#10;     */&#10;    @GetMapping(&quot;/nueva&quot;)&#10;    public String mostrarFormularioNueva(@RequestParam(required = false) String plantaId, Model model) {&#10;        model.addAttribute(&quot;bitacora&quot;, new Bitacora());&#10;        if (plantaId != null) {&#10;            model.addAttribute(&quot;plantaId&quot;, plantaId);&#10;        }&#10;        return &quot;bitacora/nueva&quot;;&#10;    }&#10;&#10;    /**&#10;     * Procesa el formulario para crear una nueva entrada en la bitácora.&#10;     */&#10;    @PostMapping(&quot;/nueva&quot;)&#10;    public String crearBitacora(@RequestParam String descripcion,&#10;                               @RequestParam(required = false) String foto,&#10;                               @RequestParam String plantaId,&#10;                               @RequestParam(required = false) String tipoCuidado,&#10;                               @RequestParam(required = false) String observaciones,&#10;                               RedirectAttributes redirectAttributes) {&#10;        try {&#10;            servicioBitacora.registrarEntrada(descripcion, foto, plantaId, tipoCuidado, observaciones);&#10;            redirectAttributes.addFlashAttribute(&quot;mensaje&quot;, &quot;Entrada de bitácora registrada exitosamente&quot;);&#10;            return &quot;redirect:/bitacora/planta/&quot; + plantaId;&#10;        } catch (IllegalArgumentException e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Error en los datos: &quot; + e.getMessage());&#10;            return &quot;redirect:/bitacora/nueva?plantaId=&quot; + plantaId;&#10;        } catch (Exception e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Error al registrar la entrada: &quot; + e.getMessage());&#10;            return &quot;redirect:/bitacora/nueva?plantaId=&quot; + plantaId;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Muestra los detalles de una bitácora específica.&#10;     */&#10;    @GetMapping(&quot;/{id}&quot;)&#10;    public String verDetalle(@PathVariable String id, Model model) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.obtenerBitacora(id);&#10;            model.addAttribute(&quot;bitacora&quot;, bitacora);&#10;            return &quot;bitacora/detalle&quot;;&#10;        } catch (RuntimeException e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Bitácora no encontrada&quot;);&#10;            return &quot;error&quot;;&#10;        } catch (Exception e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Error al cargar la bitácora: &quot; + e.getMessage());&#10;            return &quot;error&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Muestra el formulario para editar una bitácora.&#10;     */&#10;    @GetMapping(&quot;/{id}/editar&quot;)&#10;    public String mostrarFormularioEditar(@PathVariable String id, Model model) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.obtenerBitacora(id);&#10;            model.addAttribute(&quot;bitacora&quot;, bitacora);&#10;            return &quot;bitacora/editar&quot;;&#10;        } catch (RuntimeException e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Bitácora no encontrada&quot;);&#10;            return &quot;error&quot;;&#10;        } catch (Exception e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Error al cargar la bitácora: &quot; + e.getMessage());&#10;            return &quot;error&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Procesa el formulario para actualizar una bitácora.&#10;     */&#10;    @PostMapping(&quot;/{id}/editar&quot;)&#10;    public String actualizarBitacora(@PathVariable String id,&#10;                                   @RequestParam String descripcion,&#10;                                   @RequestParam(required = false) String foto,&#10;                                   @RequestParam(required = false) String tipoCuidado,&#10;                                   @RequestParam(required = false) String observaciones,&#10;                                   RedirectAttributes redirectAttributes) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.actualizarBitacora(id, descripcion, foto, tipoCuidado, observaciones);&#10;            redirectAttributes.addFlashAttribute(&quot;mensaje&quot;, &quot;Bitácora actualizada exitosamente&quot;);&#10;            return &quot;redirect:/bitacora/&quot; + id;&#10;        } catch (RuntimeException e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Bitácora no encontrada&quot;);&#10;            return &quot;redirect:/bitacora&quot;;&#10;        } catch (IllegalArgumentException e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Error en los datos: &quot; + e.getMessage());&#10;            return &quot;redirect:/bitacora/&quot; + id + &quot;/editar&quot;;&#10;        } catch (Exception e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Error al actualizar la bitácora: &quot; + e.getMessage());&#10;            return &quot;redirect:/bitacora/&quot; + id + &quot;/editar&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Elimina una bitácora.&#10;     */&#10;    @PostMapping(&quot;/{id}/eliminar&quot;)&#10;    public String eliminarBitacora(@PathVariable String id, RedirectAttributes redirectAttributes) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.obtenerBitacora(id);&#10;            String plantaId = bitacora.getPlantaId();&#10;            servicioBitacora.eliminarBitacora(id);&#10;            redirectAttributes.addFlashAttribute(&quot;mensaje&quot;, &quot;Bitácora eliminada exitosamente&quot;);&#10;            return &quot;redirect:/bitacora/planta/&quot; + plantaId;&#10;        } catch (RuntimeException e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Bitácora no encontrada&quot;);&#10;            return &quot;redirect:/bitacora&quot;;&#10;        } catch (Exception e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Error al eliminar la bitácora: &quot; + e.getMessage());&#10;            return &quot;redirect:/bitacora&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Muestra el historial reciente de una planta.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}/historial&quot;)&#10;    public String mostrarHistorialReciente(@PathVariable String plantaId,&#10;                                         @RequestParam(defaultValue = &quot;10&quot;) int limite,&#10;                                         Model model) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.obtenerHistorialReciente(plantaId, limite);&#10;            long totalCuidados = servicioBitacora.obtenerTotalCuidados(plantaId);&#10;&#10;            model.addAttribute(&quot;bitacoras&quot;, bitacoras);&#10;            model.addAttribute(&quot;plantaId&quot;, plantaId);&#10;            model.addAttribute(&quot;totalCuidados&quot;, totalCuidados);&#10;            model.addAttribute(&quot;limite&quot;, limite);&#10;&#10;            return &quot;bitacora/historial&quot;;&#10;        } catch (Exception e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Error al cargar el historial: &quot; + e.getMessage());&#10;            return &quot;error&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Exporta las bitácoras de una planta (vista de impresión).&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}/exportar&quot;)&#10;    public String exportarBitacoras(@PathVariable String plantaId, Model model) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.exportarBitacorasPlanta(plantaId);&#10;            model.addAttribute(&quot;bitacoras&quot;, bitacoras);&#10;            model.addAttribute(&quot;plantaId&quot;, plantaId);&#10;            model.addAttribute(&quot;fechaExportacion&quot;, LocalDateTime.now());&#10;            return &quot;bitacora/exportar&quot;;&#10;        } catch (Exception e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Error al exportar las bitácoras: &quot; + e.getMessage());&#10;            return &quot;error&quot;;&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.planta.plantapp.presentacion.controlador;&#10;&#10;import com.planta.plantapp.aplicacion.interfaces.IServicioBitacora;&#10;import com.planta.plantapp.dominio.modelo.bitacora.Bitacora;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.stereotype.Controller;&#10;import org.springframework.ui.Model;&#10;import org.springframework.web.bind.annotation.*;&#10;import org.springframework.web.servlet.mvc.support.RedirectAttributes;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.List;&#10;&#10;/**&#10; * Controlador web para manejar las vistas HTML de la bitácora.&#10; */&#10;@Controller&#10;@RequestMapping(&quot;/bitacora&quot;)&#10;public class BitacoraWebController {&#10;&#10;    private final IServicioBitacora servicioBitacora;&#10;&#10;    @Autowired&#10;    public BitacoraWebController(IServicioBitacora servicioBitacora) {&#10;        this.servicioBitacora = servicioBitacora;&#10;    }&#10;&#10;    /**&#10;     * Muestra la lista de todas las bitácoras.&#10;     */&#10;    @GetMapping&#10;    public String listarBitacoras(Model model) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarTodasLasBitacoras();&#10;            model.addAttribute(&quot;bitacoras&quot;, bitacoras);&#10;            return &quot;bitacora/lista&quot;;&#10;        } catch (Exception e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Error al cargar las bitácoras: &quot; + e.getMessage());&#10;            return &quot;error&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Muestra las bitácoras de una planta específica.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}&quot;)&#10;    public String listarBitacorasPorPlanta(@PathVariable String plantaId, Model model) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.listarBitacorasPorPlanta(plantaId);&#10;            model.addAttribute(&quot;bitacoras&quot;, bitacoras);&#10;            model.addAttribute(&quot;plantaId&quot;, plantaId);&#10;            return &quot;bitacora/por-planta&quot;;&#10;        } catch (Exception e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Error al cargar las bitácoras de la planta: &quot; + e.getMessage());&#10;            return &quot;error&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Muestra el formulario para crear una nueva entrada en la bitácora.&#10;     */&#10;    @GetMapping(&quot;/nueva&quot;)&#10;    public String mostrarFormularioNueva(@RequestParam(required = false) String plantaId, Model model) {&#10;        model.addAttribute(&quot;bitacora&quot;, new Bitacora());&#10;        if (plantaId != null) {&#10;            model.addAttribute(&quot;plantaId&quot;, plantaId);&#10;        }&#10;        return &quot;bitacora/nueva&quot;;&#10;    }&#10;&#10;    /**&#10;     * Procesa el formulario para crear una nueva entrada en la bitácora.&#10;     */&#10;    @PostMapping(&quot;/nueva&quot;)&#10;    public String crearBitacora(@RequestParam String descripcion,&#10;                               @RequestParam(required = false) String foto,&#10;                               @RequestParam String plantaId,&#10;                               @RequestParam(required = false) String tipoCuidado,&#10;                               @RequestParam(required = false) String observaciones,&#10;                               RedirectAttributes redirectAttributes) {&#10;        try {&#10;            servicioBitacora.registrarEntrada(descripcion, foto, plantaId, tipoCuidado, observaciones);&#10;            redirectAttributes.addFlashAttribute(&quot;mensaje&quot;, &quot;Entrada de bitácora registrada exitosamente&quot;);&#10;            return &quot;redirect:/bitacora/planta/&quot; + plantaId;&#10;        } catch (IllegalArgumentException e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Error en los datos: &quot; + e.getMessage());&#10;            return &quot;redirect:/bitacora/nueva?plantaId=&quot; + plantaId;&#10;        } catch (Exception e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Error al registrar la entrada: &quot; + e.getMessage());&#10;            return &quot;redirect:/bitacora/nueva?plantaId=&quot; + plantaId;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Muestra los detalles de una bitácora específica.&#10;     */&#10;    @GetMapping(&quot;/{id}&quot;)&#10;    public String verDetalle(@PathVariable String id, Model model) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.obtenerBitacora(id);&#10;            model.addAttribute(&quot;bitacora&quot;, bitacora);&#10;            return &quot;bitacora/detalle&quot;;&#10;        } catch (RuntimeException e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Bitácora no encontrada&quot;);&#10;            return &quot;error&quot;;&#10;        } catch (Exception e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Error al cargar la bitácora: &quot; + e.getMessage());&#10;            return &quot;error&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Muestra el formulario para editar una bitácora.&#10;     */&#10;    @GetMapping(&quot;/{id}/editar&quot;)&#10;    public String mostrarFormularioEditar(@PathVariable String id, Model model) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.obtenerBitacora(id);&#10;            model.addAttribute(&quot;bitacora&quot;, bitacora);&#10;            return &quot;bitacora/editar&quot;;&#10;        } catch (RuntimeException e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Bitácora no encontrada&quot;);&#10;            return &quot;error&quot;;&#10;        } catch (Exception e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Error al cargar la bitácora: &quot; + e.getMessage());&#10;            return &quot;error&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Procesa el formulario para actualizar una bitácora.&#10;     */&#10;    @PostMapping(&quot;/{id}/editar&quot;)&#10;    public String actualizarBitacora(@PathVariable String id,&#10;                                   @RequestParam String descripcion,&#10;                                   @RequestParam(required = false) String foto,&#10;                                   @RequestParam(required = false) String tipoCuidado,&#10;                                   @RequestParam(required = false) String observaciones,&#10;                                   RedirectAttributes redirectAttributes) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.actualizarBitacora(id, descripcion, foto, tipoCuidado, observaciones);&#10;            redirectAttributes.addFlashAttribute(&quot;mensaje&quot;, &quot;Bitácora actualizada exitosamente&quot;);&#10;            return &quot;redirect:/bitacora/&quot; + id;&#10;        } catch (IllegalArgumentException e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Error en los datos: &quot; + e.getMessage());&#10;            return &quot;redirect:/bitacora/&quot; + id + &quot;/editar&quot;;&#10;        } catch (RuntimeException e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Bitácora no encontrada&quot;);&#10;            return &quot;redirect:/bitacora&quot;;&#10;        } catch (Exception e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Error al actualizar la bitácora: &quot; + e.getMessage());&#10;            return &quot;redirect:/bitacora/&quot; + id + &quot;/editar&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Elimina una bitácora.&#10;     */&#10;    @PostMapping(&quot;/{id}/eliminar&quot;)&#10;    public String eliminarBitacora(@PathVariable String id, RedirectAttributes redirectAttributes) {&#10;        try {&#10;            Bitacora bitacora = servicioBitacora.obtenerBitacora(id);&#10;            String plantaId = bitacora.getPlantaId();&#10;            servicioBitacora.eliminarBitacora(id);&#10;            redirectAttributes.addFlashAttribute(&quot;mensaje&quot;, &quot;Bitácora eliminada exitosamente&quot;);&#10;            return &quot;redirect:/bitacora/planta/&quot; + plantaId;&#10;        } catch (RuntimeException e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Bitácora no encontrada&quot;);&#10;            return &quot;redirect:/bitacora&quot;;&#10;        } catch (Exception e) {&#10;            redirectAttributes.addFlashAttribute(&quot;error&quot;, &quot;Error al eliminar la bitácora: &quot; + e.getMessage());&#10;            return &quot;redirect:/bitacora&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Muestra el historial reciente de una planta.&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}/historial&quot;)&#10;    public String mostrarHistorialReciente(@PathVariable String plantaId,&#10;                                         @RequestParam(defaultValue = &quot;10&quot;) int limite,&#10;                                         Model model) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.obtenerHistorialReciente(plantaId, limite);&#10;            long totalCuidados = servicioBitacora.obtenerTotalCuidados(plantaId);&#10;&#10;            model.addAttribute(&quot;bitacoras&quot;, bitacoras);&#10;            model.addAttribute(&quot;plantaId&quot;, plantaId);&#10;            model.addAttribute(&quot;totalCuidados&quot;, totalCuidados);&#10;            model.addAttribute(&quot;limite&quot;, limite);&#10;&#10;            return &quot;bitacora/historial&quot;;&#10;        } catch (Exception e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Error al cargar el historial: &quot; + e.getMessage());&#10;            return &quot;error&quot;;&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Exporta las bitácoras de una planta (vista de impresión).&#10;     */&#10;    @GetMapping(&quot;/planta/{plantaId}/exportar&quot;)&#10;    public String exportarBitacoras(@PathVariable String plantaId, Model model) {&#10;        try {&#10;            List&lt;Bitacora&gt; bitacoras = servicioBitacora.exportarBitacorasPlanta(plantaId);&#10;            model.addAttribute(&quot;bitacoras&quot;, bitacoras);&#10;            model.addAttribute(&quot;plantaId&quot;, plantaId);&#10;            model.addAttribute(&quot;fechaExportacion&quot;, LocalDateTime.now());&#10;            return &quot;bitacora/exportar&quot;;&#10;        } catch (Exception e) {&#10;            model.addAttribute(&quot;error&quot;, &quot;Error al exportar las bitácoras: &quot; + e.getMessage());&#10;            return &quot;error&quot;;&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/resources/static/login/css/index.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/resources/static/login/css/index.css" />
              <option name="originalContent" value="/* index.css - Estilos para la aplicación &quot;Plantee&quot;&#10; * Este archivo define la apariencia visual de la interfaz de usuario.&#10; * Se aplican principios de Clean Code para mejorar la legibilidad y mantenibilidad.&#10; */&#10;&#10;/* --- 1. Variables CSS (Paleta de Colores y Tipografía Global) --- */&#10;/* Uso de variables para una gestión centralizada y consistente de colores. */&#10;:root {&#10;    --color-cream-light: #FDF9F3;&#10;    --color-cream-medium: #F5EFE6;&#10;    --color-green-light: #C8E6C9;&#10;    --color-green-medium: #81C784;&#10;    --color-green-dark: #388E3C;&#10;    --color-gray-text: #555555;&#10;    --color-border-light: #E0E0E0;&#10;    --color-error-red: #D32F2F; /* Añadido para mensajes de error */&#10;    --color-accent-blue: #5B8C85; /* Un toque de azul verdoso para contrastes */&#10;&#10;&#10;    /* Fuentes */&#10;    --font-primary: 'Poppins', sans-serif;&#10;    --font-secondary: 'Lora', serif; /* Para títulos y logo */&#10;}&#10;&#10;/* --- 2. Estilos Globales y Resets --- */&#10;body {&#10;    margin: 0;&#10;    font-family: var(--font-primary);&#10;    background-color: var(--color-cream-light);&#10;    color: var(--color-gray-text);&#10;    overflow-x: hidden; /* Evitar scroll horizontal */&#10;    scrollbar-width: thin;&#10;    scrollbar-color: var(--color-green-medium) var(--color-cream-light);&#10;}&#10;&#10;/* Oculta la barra de desplazamiento en navegadores WebKit (Chrome, Safari) */&#10;body::-webkit-scrollbar {&#10;    width: 8px;&#10;}&#10;body::-webkit-scrollbar-track {&#10;    background: var(--color-cream-light);&#10;}&#10;body::-webkit-scrollbar-thumb {&#10;    background-color: var(--color-green-medium);&#10;    border-radius: 10px;&#10;    border: 2px solid var(--color-cream-light);&#10;}&#10;&#10;/* Estilos generales para contenedores de sección */&#10;.content-section {&#10;    width: 90%;&#10;    max-width: 950px; /* Más ancho */&#10;    margin: 2.5em auto; /* Más margen vertical */&#10;    padding: 3em; /* Más padding */&#10;    background-color: white; /* Fondo blanco para contraste */&#10;    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1); /* Sombra más suave y extendida */&#10;    border-radius: 12px; /* Más redondeado */&#10;    box-sizing: border-box;&#10;}&#10;&#10;.section-title {&#10;    color: var(--color-green-dark);&#10;    text-align: center;&#10;    margin-bottom: 2em; /* Más margen */&#10;    font-weight: 700; /* Más audaz */&#10;    font-size: 2.2em; /* Título más grande */&#10;}&#10;&#10;.section-description {&#10;    text-align: center;&#10;    line-height: 1.6;&#10;    margin-bottom: 2em;&#10;}&#10;&#10;/* Clases de utilidad */&#10;.hidden {&#10;    display: none !important; /* Fuerza la ocultación */&#10;}&#10;&#10;.text-center {&#10;    text-align: center;&#10;}&#10;&#10;.mt-8 {&#10;    margin-top: 2rem; /* 32px */&#10;}&#10;&#10;/* --- 3. Encabezado (Header) --- */&#10;.app-header {&#10;    background: var(--color-cream-medium);&#10;    padding: 15px 30px;&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    height: 8vh;&#10;    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08); /* Sombra más pronunciada */&#10;    position: fixed; /* Fixed header */&#10;    width: 100%;&#10;    top: 0;&#10;    left: 0;&#10;    z-index: 1000; /* Asegura que esté por encima de todo */&#10;    box-sizing: border-box;&#10;}&#10;&#10;.header-brand .brand-name {&#10;    color: var(--color-green-dark);&#10;    font-family: var(--font-secondary); /* Fuente distintiva para el logo */&#10;    font-size: 2.2em; /* Tamaño más grande */&#10;    font-weight: 700;&#10;}&#10;&#10;.header-actions .header-icon {&#10;    color: var(--color-gray-text);&#10;    font-size: 1.5em; /* Icono más grande */&#10;    cursor: pointer;&#10;    transition: color 0.3s ease;&#10;    margin-right: 15px; /* Espacio antes de los botones */&#10;}&#10;&#10;.header-actions .header-icon:hover {&#10;    color: var(--color-green-dark);&#10;}&#10;&#10;/* Estilos de botones generales para el header y otras secciones */&#10;.btn {&#10;    border: none;&#10;    padding: 10px 20px; /* Más padding */&#10;    border-radius: 8px; /* Bordes más redondeados */&#10;    cursor: pointer;&#10;    transition: background-color 0.3s ease, transform 0.2s ease;&#10;    font-size: 1em;&#10;    font-weight: 600;&#10;}&#10;&#10;.btn-primary {&#10;    background-color: var(--color-green-medium);&#10;    color: white;&#10;    margin-left: 15px; /* Más margen */&#10;}&#10;&#10;.btn-primary:hover {&#10;    background-color: var(--color-green-dark);&#10;    transform: translateY(-2px); /* Pequeño efecto 3D */&#10;}&#10;&#10;.btn-secondary {&#10;    background-color: transparent;&#10;    color: var(--color-green-dark);&#10;    border: 1px solid var(--color-green-medium);&#10;    margin-left: 15px;&#10;}&#10;&#10;.btn-secondary:hover {&#10;    background-color: var(--color-green-light);&#10;    color: var(--color-green-dark);&#10;    transform: translateY(-2px);&#10;}&#10;&#10;/* --- 4. Barra de Búsqueda Desplegable --- */&#10;.search-bar {&#10;    position: fixed; /* Fixed position */&#10;    top: 8vh; /* Just below header */&#10;    left: 0;&#10;    width: 100%;&#10;    background: var(--color-cream-light);&#10;    padding: 20px;&#10;    text-align: center;&#10;    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15); /* Sombra más profunda */&#10;    display: none; /* Oculto por defecto, JS lo controla */&#10;    box-sizing: border-box;&#10;    z-index: 999; /* Just below header */&#10;    transform: translateY(-100%); /* Start off-screen */&#10;    transition: transform 0.4s ease-out; /* Smooth slide down */&#10;}&#10;/*.search-bar.active {&#10;    transform: translateY(0);  Slide into view&#10;    display: block;  Asegura que se muestre&#10;}*/&#10;&#10;.search-bar.active {&#10;    display: block !important;&#10;    opacity: 1;&#10;    visibility: visible;&#10;    z-index: 1000;&#10;}&#10;&#10;.search-bar.hidden {&#10;    display: none;&#10;}&#10;&#10;.search-input {&#10;    width: 80%; /* Más ancho */&#10;    max-width: 600px;&#10;    padding: 12px 20px;&#10;    border: 1px solid var(--color-border-light);&#10;    border-radius: 10px; /* Más redondeado */&#10;    font-size: 1.1em;&#10;    outline: none;&#10;    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05); /* Sutil sombra interna */&#10;}&#10;.search-input:focus {&#10;    border-color: var(--color-green-medium);&#10;    box-shadow: 0 0 0 3px rgba(111, 168, 120, 0.2);&#10;}&#10;&#10;.search-suggestions {&#10;    position: absolute;&#10;    width: 80%;&#10;    max-width: 600px;&#10;    left: 50%;&#10;    transform: translateX(-50%);&#10;    background-color: white;&#10;    border: 1px solid var(--color-border-light);&#10;    border-top: none;&#10;    border-radius: 0 0 10px 10px;&#10;    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);&#10;    max-height: 250px; /* Un poco más alto */&#10;    overflow-y: auto;&#10;    text-align: left;&#10;    display: none;&#10;    z-index: 998;&#10;}&#10;.search-suggestions div {&#10;    padding: 12px 20px; /* Más padding */&#10;    cursor: pointer;&#10;    border-bottom: 1px solid #eee;&#10;    font-size: 1.05em;&#10;}&#10;.search-suggestions div:last-child {&#10;    border-bottom: none;&#10;}&#10;.search-suggestions div:hover {&#10;    background-color: var(--color-green-light);&#10;    color: var(--color-green-dark);&#10;}&#10;&#10;/* --- 5. Barra Lateral de Navegación (Sidebar) --- */&#10;.menu-toggle {&#10;    position: fixed;&#10;    top: 50%;&#10;    left: 40px; /* Más a la derecha para no chocar con el header */&#10;    transform: translateY(-50%);&#10;    cursor: pointer;&#10;    height: 65px; /* Más grande */&#10;    width: 65px; /* Más grande */&#10;    background-color: var(--color-green-dark);&#10;    color: white;&#10;    font-size: 2.2em; /* Más grande */&#10;    display: flex;&#10;    justify-content: center;&#10;    align-items: center;&#10;    border-radius: 50%;&#10;    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3); /* Sombra más fuerte */&#10;    z-index: 1001; /* Siempre visible y encima */&#10;    transition: background-color 0.3s ease, transform 0.3s ease, opacity 0.3s ease;&#10;}&#10;.menu-toggle:hover {&#10;    background-color: var(--color-green-medium);&#10;    transform: translateY(-50%) scale(1.05);&#10;}&#10;.menu-toggle.hidden {&#10;    opacity: 0;&#10;    pointer-events: none; /* Desactiva clics cuando oculto */&#10;}&#10;&#10;.sidebar {&#10;    width: 0; /* Empieza colapsado */&#10;    background: linear-gradient(to bottom, var(--color-green-medium), var(--color-green-dark)); /* Gradiente */&#10;    height: 100vh;&#10;    position: fixed;&#10;    top: 0;&#10;    left: 0;&#10;    display: flex;&#10;    flex-direction: column;&#10;    align-items: center;&#10;    padding-top: 100px;&#10;    box-shadow: 3px 0 8px rgba(0, 0, 0, 0.15); /* Sombra más marcada */&#10;    z-index: 1000;&#10;    overflow-x: hidden; /* Evita desbordamiento de texto */&#10;    transition: width 0.4s ease-in-out; /* Transición suave */&#10;}&#10;.sidebar.active {&#10;    width: 250px; /* Ancho extendido */&#10;}&#10;.sidebar .nav-link { /* Renombrado de .menu-btn a .nav-link */&#10;    margin: 15px 0;&#10;    text-decoration: none;&#10;    color: white;&#10;    font-size: 1.2em; /* Más grande */&#10;    display: flex;&#10;    align-items: center;&#10;    padding: 12px 20px; /* Más padding */&#10;    border-radius: 8px;&#10;    transition: background-color 0.3s ease, transform 0.2s ease;&#10;    width: calc(100% - 40px); /* Ajustar ancho para padding */&#10;    box-sizing: border-box;&#10;    white-space: nowrap; /* Evita que el texto se rompa */&#10;}&#10;.sidebar .nav-link .nav-icon { /* Renombrado de i a .nav-icon */&#10;    margin-right: 20px; /* Más margen para el icono */&#10;    font-size: 1.4em; /* Icono más grande */&#10;}&#10;.sidebar .nav-link .nav-text { /* Renombrado de span a .nav-text */&#10;    opacity: 0; /* Oculto por defecto */&#10;    transition: opacity 0.3s ease;&#10;}&#10;.sidebar.active .nav-link .nav-text {&#10;    opacity: 1; /* Mostrar texto cuando activo */&#10;}&#10;.sidebar .nav-link:hover {&#10;    background-color: rgba(255, 255, 255, 0.2); /* Fondo semitransparente al hover */&#10;    transform: translateX(8px); /* Deslizamiento al hover */&#10;}&#10;&#10;/* --- Main Content --- */&#10;main {&#10;    margin-left: 0;&#10;    padding: 100px 20px 20px; /* Padding superior para el header fijo */&#10;    transition: margin-left 0.4s ease-in-out;&#10;    min-height: calc(100vh - 8vh); /* Asegura que ocupe al menos la altura de la vista */&#10;}&#10;body.sidebar-active main {&#10;    margin-left: 250px; /* Margen cuando el sidebar está activo */&#10;}&#10;&#10;/* --- 6. Estilos Específicos para la Sección de Inicio (Home) --- */&#10;.hero-section {&#10;    background: linear-gradient(to bottom right, var(--color-green-light), var(--color-cream-medium));&#10;    padding: 5em 3em;&#10;    border-radius: 15px;&#10;    margin-top: 3em;&#10;    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);&#10;}&#10;&#10;.hero-section .section-title {&#10;    font-size: 3em;&#10;    color: var(--color-green-dark);&#10;    margin-bottom: 0.5em;&#10;    font-family: var(--font-secondary);&#10;}&#10;&#10;.hero-section .section-description {&#10;    max-width: 700px;&#10;    margin: 0 auto 2em;&#10;    font-size: 1.2em;&#10;    color: var(--color-gray-text);&#10;}&#10;&#10;.hero-actions {&#10;    display: flex;&#10;    justify-content: center;&#10;    gap: 20px;&#10;    margin-top: 2em;&#10;}&#10;&#10;/* Estilos para las tarjetas de servicio simplificadas en Home */&#10;.service-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));&#10;    gap: 30px;&#10;    margin-top: 3em;&#10;}&#10;&#10;.service-card {&#10;    background-color: var(--color-cream-light);&#10;    padding: 25px;&#10;    border-radius: 10px;&#10;    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);&#10;    text-align: center;&#10;    transition: transform 0.3s ease, box-shadow 0.3s ease;&#10;}&#10;&#10;.service-card:hover {&#10;    transform: translateY(-8px);&#10;    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);&#10;}&#10;&#10;.service-card .service-icon {&#10;    font-size: 3em;&#10;    color: var(--color-green-medium);&#10;    margin-bottom: 15px;&#10;}&#10;&#10;.service-card-title {&#10;    font-size: 1.5em;&#10;    color: var(--color-green-dark);&#10;    margin-bottom: 10px;&#10;    font-weight: 600;&#10;}&#10;&#10;.service-card-description {&#10;    font-size: 0.95em;&#10;    color: var(--color-gray-text);&#10;    line-height: 1.5;&#10;}&#10;&#10;&#10;/* --- 7. Sección de Eventos (Dashboard) --- */&#10;.event-controls {&#10;    display: flex;&#10;    flex-wrap: wrap; /* Permite que los elementos se envuelvan en pantallas pequeñas */&#10;    justify-content: center;&#10;    gap: 10px; /* Espacio entre elementos */&#10;    margin-bottom: 20px;&#10;}&#10;&#10;.btn-toggle {&#10;    background-color: var(--color-green-light);&#10;    color: var(--color-gray-text);&#10;}&#10;&#10;.btn-toggle:hover, .btn-toggle.active {&#10;    background-color: var(--color-green-medium);&#10;    color: white;&#10;}&#10;&#10;.date-filter-group {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 5px; /* Espacio entre elementos del filtro de fecha */&#10;}&#10;&#10;.filter-label {&#10;    color: var(--color-gray-text);&#10;    font-size: 0.9em;&#10;}&#10;&#10;.filter-input {&#10;    padding: 9px 12px;&#10;    border: 1px solid var(--color-border-light);&#10;    border-radius: 8px;&#10;    font-size: 1em;&#10;    color: var(--color-gray-text);&#10;    outline: none;&#10;}&#10;.filter-input:focus {&#10;    border-color: var(--color-green-medium);&#10;    box-shadow: 0 0 0 3px rgba(111, 168, 120, 0.2);&#10;}&#10;&#10;.btn-filter {&#10;    background-color: var(--color-green-dark);&#10;    color: white;&#10;}&#10;&#10;.btn-filter:hover {&#10;    background-color: var(--color-green-medium);&#10;}&#10;&#10;.event-list-view .event-item {&#10;    border-bottom: 1px dashed var(--color-border-light); /* Línea punteada */&#10;    padding: 20px 0; /* Más padding */&#10;    margin-bottom: 15px;&#10;    transition: background-color 0.3s ease;&#10;    border-radius: 5px; /* Para el hover */&#10;    padding-left: 10px; /* Para el hover */&#10;}&#10;.event-list-view .event-item:last-child {&#10;    border-bottom: none;&#10;    margin-bottom: 0;&#10;}&#10;.event-list-view .event-item:hover {&#10;    background-color: var(--color-cream-light);&#10;}&#10;.event-list-view .event-item h3 {&#10;    margin: 0 0 8px 0;&#10;    color: var(--color-green-dark);&#10;    font-size: 1.4em; /* Más grande */&#10;    font-weight: 600;&#10;}&#10;.event-list-view .event-item p {&#10;    margin: 6px 0;&#10;    line-height: 1.6;&#10;}&#10;.event-list-view .event-item .event-meta {&#10;    font-size: 0.95em;&#10;    color: #777;&#10;    font-style: italic;&#10;}&#10;&#10;/* Estilos del calendario */&#10;table.calendar {&#10;    border-collapse: collapse;&#10;    width: 100%;&#10;    margin-top: 25px; /* Más margen */&#10;    table-layout: fixed; /* Ancho de columna fijo */&#10;}&#10;table.calendar th, table.calendar td {&#10;    border: 1px solid var(--color-border-light);&#10;    padding: 12px 8px; /* Más padding */&#10;    text-align: center;&#10;    height: 90px; /* Ajustado para más espacio */&#10;    vertical-align: top;&#10;    font-size: 0.9em;&#10;    position: relative; /* Para el contenido del día */&#10;}&#10;table.calendar th {&#10;    background-color: var(--color-green-light);&#10;    color: var(--color-green-dark);&#10;    font-weight: 700;&#10;}&#10;table.calendar td {&#10;    background-color: white;&#10;    cursor: pointer;&#10;    transition: background-color 0.2s ease;&#10;}&#10;table.calendar td:hover {&#10;    background-color: var(--color-cream-light);&#10;}&#10;table.calendar td.today {&#10;    background-color: var(--color-green-light);&#10;    border: 2px solid var(--color-green-medium);&#10;}&#10;table.calendar td strong {&#10;    display: block; /* Para que el evento esté en una nueva línea */&#10;    color: var(--color-green-dark);&#10;    font-weight: 600;&#10;    margin-top: 5px;&#10;    font-size: 0.85em;&#10;}&#10;table.calendar td .event-badge {&#10;    background-color: var(--color-accent-blue);&#10;    color: white;&#10;    font-size: 0.7em;&#10;    padding: 3px 6px;&#10;    border-radius: 5px;&#10;    position: absolute;&#10;    bottom: 5px;&#10;    left: 5px;&#10;    right: 5px;&#10;    white-space: nowrap;&#10;    overflow: hidden;&#10;    text-overflow: ellipsis;&#10;}&#10;table.calendar td.has-event {&#10;    border: 2px solid var(--color-green-medium);&#10;}&#10;&#10;/* --- 8. Sección de Foro (Dashboard) --- */&#10;.chat-history {&#10;    height: 350px; /* Más alto */&#10;    border: 1px solid var(--color-border-light);&#10;    background-color: var(--color-cream-light); /* Fondo más suave */&#10;    padding: 20px; /* Más padding */&#10;    overflow-y: auto;&#10;    margin-bottom: 20px;&#10;    border-radius: 10px;&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: 15px; /* Espacio entre mensajes */&#10;}&#10;.chat-message {&#10;    padding: 10px 15px;&#10;    border-radius: 20px; /* Más redondeado */&#10;    background-color: #E6F0E6; /* Verde muy claro */&#10;    align-self: flex-start;&#10;    max-width: 75%; /* Ligeramente más ancho */&#10;    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);&#10;    line-height: 1.5;&#10;}&#10;.chat-message.user-message {&#10;     background-color: var(--color-green-medium);&#10;     color: white;&#10;     align-self: flex-end;&#10;}&#10;.chat-message .message-author {&#10;    color: var(--color-green-dark);&#10;    font-weight: 600;&#10;    display: block; /* Nombre de usuario en nueva línea */&#10;    margin-bottom: 3px;&#10;}&#10;.chat-message.user-message .message-author {&#10;    color: var(--color-cream-light);&#10;}&#10;.chat-message p {&#10;    margin: 0;&#10;}&#10;.forum-input-container {&#10;    position: relative;&#10;}&#10;.forum-textarea {&#10;    width: calc(100% - 22px); /* Ajustar por padding */&#10;    padding: 15px; /* Más padding */&#10;    border: 1px solid var(--color-border-light);&#10;    border-radius: 10px;&#10;    font-size: 1.05em;&#10;    outline: none;&#10;    resize: vertical;&#10;    min-height: 60px; /* Altura mínima */&#10;    box-sizing: border-box;&#10;}&#10;.forum-textarea:focus {&#10;    border-color: var(--color-green-medium);&#10;    box-shadow: 0 0 0 3px rgba(111, 168, 120, 0.2); /* Sombra al enfocar */&#10;}&#10;.login-message {&#10;    position: absolute;&#10;    bottom: 10px;&#10;    left: 50%;&#10;    transform: translateX(-50%);&#10;    background-color: var(--color-error-red); /* Color de error */&#10;    color: white;&#10;    padding: 10px 20px;&#10;    border-radius: 5px;&#10;    font-size: 0.9em;&#10;    opacity: 0;&#10;    transition: opacity 0.5s ease-in-out;&#10;    pointer-events: none;&#10;    white-space: nowrap;&#10;    z-index: 10; /* Encima del input */&#10;}&#10;.login-message.show {&#10;    opacity: 1;&#10;}&#10;&#10;/* --- 9. Sección de Servicios (Dashboard - Flor Dinámica) --- */&#10;.service-section {&#10;    /* Altura ajustada para la flor en el dashboard */&#10;    min-height: 70vh; /* Permite que el contenido se expanda si es necesario */&#10;    display: flex;&#10;    flex-direction: column;&#10;    justify-content: center;&#10;    align-items: center;&#10;}&#10;&#10;.flor-container {&#10;    display: flex;&#10;    flex-direction: column;&#10;    justify-content: center;&#10;    align-items: center;&#10;    position: relative;&#10;    height: 400px; /* Mayor altura para más espacio */&#10;    width: 100%;&#10;    max-width: 600px; /* Limitar el ancho para mejor control */&#10;    margin-top: 20px;&#10;}&#10;&#10;.flor {&#10;    display: flex;&#10;    justify-content: center;&#10;    align-items: center;&#10;    position: relative;&#10;    height: 350px; /* Altura ajustada para la flor */&#10;    width: 350px;&#10;    margin: 2em auto;&#10;    transition: transform 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55); /* Rebote */&#10;}&#10;.flor.petal-selected {&#10;    transform: scale(0.9); /* Ligeramente más pequeño cuando se selecciona un pétalo */&#10;}&#10;.petalo {&#10;    position: absolute;&#10;    width: 80px; /* Tamaño del pétalo */&#10;    height: 80px; /* Tamaño del pétalo */&#10;    background: var(--color-green-light);&#10;    border-radius: 50%;&#10;    display: flex;&#10;    justify-content: center;&#10;    align-items: center;&#10;    font-weight: bold;&#10;    color: var(--color-green-dark);&#10;    cursor: pointer;&#10;    transition: background-color 0.3s ease, transform 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55), width 0.5s ease, height 0.5s ease;&#10;    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);&#10;    font-size: 1.1em;&#10;    border: 2px solid transparent;&#10;}&#10;.petalo:hover {&#10;    background-color: var(--color-green-medium);&#10;    transform: scale(1.1);&#10;    color: white;&#10;}&#10;.petalo.selected {&#10;    background-color: var(--color-green-dark);&#10;    color: white;&#10;    border: 2px solid var(--color-accent-blue);&#10;    transform: scale(1.2); /* Más grande si está seleccionado */&#10;    z-index: 10;&#10;}&#10;&#10;/* Posicionamiento de los 6 pétalos alrededor de un centro de 120px */&#10;/* Radios de 100px desde el centro de la flor para el centro de los pétalos */&#10;.petalo:nth-child(2) { top: 25px; left: calc(50% - 40px); transform: translateX(-50%) translateY(-70px); } /* Arriba */&#10;.petalo:nth-child(3) { top: 75px; right: 0px; transform: translateX(70px) translateY(-50%); } /* Derecha-Arriba */&#10;.petalo:nth-child(4) { bottom: 75px; right: 0px; transform: translateX(70px) translateY(50%); } /* Derecha-Abajo */&#10;.petalo:nth-child(5) { bottom: 25px; left: calc(50% - 40px); transform: translateX(-50%) translateY(70px); } /* Abajo */&#10;.petalo:nth-child(6) { bottom: 75px; left: 0px; transform: translateX(-70px) translateY(50%); } /* Izquierda-Abajo */&#10;.petalo:nth-child(7) { top: 75px; left: 0px; transform: translateX(-70px) translateY(-50%); } /* Izquierda-Arriba */&#10;&#10;&#10;.petalo .info-general {&#10;    display: none;&#10;    position: absolute;&#10;    bottom: -35px; /* Debajo del pétalo */&#10;    background: white;&#10;    padding: 6px 12px;&#10;    border: 1px solid var(--color-border-light);&#10;    border-radius: 6px;&#10;    white-space: nowrap;&#10;    font-size: 0.85em;&#10;    color: var(--color-gray-text);&#10;    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1);&#10;    z-index: 100; /* Asegura que se vea por encima de otros pétalos */&#10;    transform: translateX(-50%);&#10;    left: 50%;&#10;}&#10;.petalo:hover .info-general {&#10;    display: block;&#10;}&#10;&#10;.flor-center-btn {&#10;    position: absolute;&#10;    width: 120px; /* Centro más grande */&#10;    height: 120px;&#10;    background: var(--color-green-dark);&#10;    border-radius: 50%;&#10;    z-index: 5;&#10;    cursor: pointer;&#10;    display: flex;&#10;    justify-content: center;&#10;    align-items: center;&#10;    color: white;&#10;    font-weight: 700;&#10;    font-size: 1.3em;&#10;    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);&#10;    transition: background-color 0.3s ease, transform 0.3s ease;&#10;}&#10;.flor-center-btn:hover {&#10;    background-color: var(--color-green-medium);&#10;    transform: scale(1.05);&#10;}&#10;&#10;.full-service-info {&#10;    background-color: var(--color-cream-medium);&#10;    border: 1px solid var(--color-border-light);&#10;    border-radius: 10px;&#10;    padding: 25px;&#10;    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);&#10;    text-align: center;&#10;    margin-top: 30px; /* Separación de la flor */&#10;    display: none; /* Oculto por defecto */&#10;}&#10;.full-service-info .service-detail-title {&#10;    color: var(--color-green-dark);&#10;    margin-top: 0;&#10;    font-size: 1.8em;&#10;    margin-bottom: 15px;&#10;}&#10;.full-service-info .service-detail-description {&#10;    color: var(--color-gray-text);&#10;    line-height: 1.7;&#10;    font-size: 1.1em;&#10;}&#10;&#10;/* --- 10. Sección de Catálogo (Común para ambas, pero con formularios solo en Dashboard) --- */&#10;.carousel-wrapper {&#10;    position: relative;&#10;    width: 100%;&#10;    overflow: hidden;&#10;    padding-bottom: 30px; /* Espacio para nombre y fecha */&#10;    margin-top: 20px;&#10;}&#10;.carousel-track {&#10;    display: flex;&#10;    transition: transform 0.5s ease-out;&#10;    cursor: grab;&#10;    user-select: none;&#10;    padding: 10px 0; /* Padding vertical para sombra y borde */&#10;    scroll-behavior: smooth; /* Smooth scroll para botones */&#10;    overflow-x: auto; /* Permitir scroll manual */&#10;    -webkit-overflow-scrolling: touch; /* iOS smooth scrolling */&#10;    scrollbar-width: none; /* Ocultar scrollbar */&#10;    -ms-overflow-style: none;&#10;}&#10;.carousel-track::-webkit-scrollbar {&#10;    display: none;&#10;}&#10;.carousel-track.dragging {&#10;    cursor: grabbing;&#10;}&#10;.carousel-item {&#10;    min-width: 200px; /* Ancho fijo para cada ítem */&#10;    flex-shrink: 0;&#10;    box-sizing: border-box;&#10;    padding: 15px; /* Espacio entre fotos */&#10;    text-align: center;&#10;    display: flex;&#10;    flex-direction: column;&#10;    align-items: center;&#10;    background-color: white;&#10;    border-radius: 10px;&#10;    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);&#10;    transition: transform 0.3s ease, box-shadow 0.3s ease;&#10;    margin-right: 20px; /* Espacio entre ítems */&#10;}&#10;.carousel-item:hover {&#10;    transform: translateY(-5px); /* Pequeño levantamiento */&#10;    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15);&#10;}&#10;.carousel-item img {&#10;    width: 100%;&#10;    height: 180px; /* Altura fija para uniformidad */&#10;    object-fit: cover;&#10;    border-radius: 8px;&#10;    margin-bottom: 12px;&#10;    transition: transform 0.3s ease;&#10;    cursor: zoom-in; /* Cursor de zoom */&#10;}&#10;.carousel-item img:hover {&#10;    transform: scale(1.02);&#10;}&#10;.carousel-item .image-info {&#10;    font-size: 0.95em;&#10;    color: var(--color-gray-text);&#10;    text-align: center;&#10;    flex-grow: 1; /* Para que ocupe el espacio disponible */&#10;    display: flex;&#10;    flex-direction: column;&#10;    justify-content: center;&#10;}&#10;.carousel-item .image-info strong {&#10;    display: block;&#10;    color: var(--color-green-dark);&#10;    margin-bottom: 5px;&#10;    font-size: 1.1em;&#10;    font-weight: 600;&#10;}&#10;.carousel-nav-btn {&#10;    position: absolute;&#10;    top: 50%;&#10;    transform: translateY(-50%);&#10;    background-color: rgba(0, 0, 0, 0.5);&#10;    color: white;&#10;    border: none;&#10;    padding: 15px 10px;&#10;    border-radius: 5px;&#10;    cursor: pointer;&#10;    font-size: 1.5em;&#10;    z-index: 10;&#10;    transition: background-color 0.3s ease, transform 0.3s ease;&#10;}&#10;.carousel-nav-btn:hover {&#10;    background-color: rgba(0, 0, 0, 0.7);&#10;    transform: translateY(-50%) scale(1.1);&#10;}&#10;.carousel-nav-btn.left {&#10;    left: 0;&#10;    border-top-left-radius: 0;&#10;    border-bottom-left-radius: 0;&#10;}&#10;.carousel-nav-btn.right {&#10;    right: 0;&#10;    border-top-right-radius: 0;&#10;    border-bottom-right-radius: 0;&#10;}&#10;&#10;/* --- 11. Modal de Información de Fotos (Común) --- */&#10;.photo-modal-overlay {&#10;    position: fixed;&#10;    top: 0;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;    background-color: rgba(0, 0, 0, 0.7); /* Fondo más oscuro */&#10;    display: flex;&#10;    justify-content: center;&#10;    align-items: center;&#10;    z-index: 2000; /* Alto z-index para estar por encima de todo */&#10;    opacity: 0;&#10;    visibility: hidden;&#10;    transition: opacity 0.4s ease, visibility 0.4s ease;&#10;}&#10;.photo-modal-overlay.visible {&#10;    opacity: 1;&#10;    visibility: visible;&#10;}&#10;.photo-modal-content {&#10;    background-color: var(--color-cream-light);&#10;    padding: 35px; /* Más padding */&#10;    border-radius: 15px; /* Más redondeado */&#10;    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4); /* Sombra más prominente */&#10;    max-width: 700px; /* Más ancho */&#10;    width: 90%;&#10;    text-align: center;&#10;    position: relative;&#10;    transform: scale(0.9); /* Empieza un poco pequeño */&#10;    transition: transform 0.3s ease;&#10;}&#10;.photo-modal-overlay.visible .photo-modal-content {&#10;    transform: scale(1); /* Escala normal al aparecer */&#10;}&#10;.photo-modal-content .modal-image {&#10;    max-width: 100%;&#10;    height: auto;&#10;    border-radius: 10px;&#10;    margin-bottom: 20px;&#10;    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);&#10;}&#10;.photo-modal-content .modal-title {&#10;    color: var(--color-green-dark);&#10;    margin-bottom: 12px;&#10;    font-size: 2em;&#10;    font-weight: 700;&#10;}&#10;.photo-modal-content .modal-description {&#10;    color: var(--color-gray-text);&#10;    line-height: 1.7;&#10;    font-size: 1.1em;&#10;}&#10;.photo-modal-close {&#10;    position: absolute;&#10;    top: 15px;&#10;    right: 15px;&#10;    font-size: 1.8em;&#10;    color: var(--color-gray-text);&#10;    cursor: pointer;&#10;    transition: color 0.3s ease;&#10;    background: none; /* Eliminar fondo de botón por defecto */&#10;    border: none; /* Eliminar borde de botón por defecto */&#10;    padding: 0; /* Eliminar padding de botón por defecto */&#10;}&#10;.photo-modal-close:hover {&#10;    color: var(--color-error-red);&#10;}&#10;&#10;/* --- 12. Formularios (Add Plant/Event - Específicos del Dashboard) --- */&#10;.add-form-section {&#10;    margin-top: 3em;&#10;    padding-top: 2em;&#10;    border-top: 1px dashed var(--color-border-light);&#10;}&#10;.add-form-section h3 {&#10;    color: var(--color-green-dark);&#10;    text-align: center;&#10;    margin-bottom: 1.5em;&#10;    font-weight: 600;&#10;    font-size: 1.8em;&#10;}&#10;.add-form-section form {&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: 15px;&#10;    max-width: 500px;&#10;    margin: 0 auto;&#10;}&#10;.add-form-section label {&#10;    font-weight: 600;&#10;    color: var(--color-green-dark);&#10;    margin-bottom: 5px;&#10;    display: block;&#10;}&#10;.add-form-section input[type=&quot;text&quot;],&#10;.add-form-section input[type=&quot;date&quot;],&#10;.add-form-section input[type=&quot;file&quot;],&#10;.add-form-section textarea {&#10;    padding: 12px 15px;&#10;    border: 1px solid var(--color-border-light);&#10;    border-radius: 8px;&#10;    font-size: 1em;&#10;    color: var(--color-gray-text);&#10;    width: 100%;&#10;    box-sizing: border-box;&#10;    transition: border-color 0.3s ease, box-shadow 0.3s ease;&#10;}&#10;.add-form-section input[type=&quot;file&quot;] {&#10;    padding: 8px 0; /* Menos padding para el input file */&#10;}&#10;.add-form-section input[type=&quot;text&quot;]:focus,&#10;.add-form-section input[type=&quot;date&quot;]:focus,&#10;.add-form-section textarea:focus {&#10;    border-color: var(--color-green-medium);&#10;    box-shadow: 0 0 0 3px rgba(111, 168, 120, 0.2);&#10;    outline: none;&#10;}&#10;.add-form-section textarea {&#10;    resize: vertical;&#10;    min-height: 100px;&#10;}&#10;.add-form-section button { /* Estilo general para botones de formulario */&#10;    background-color: var(--color-green-dark);&#10;    color: white;&#10;    border: none;&#10;    padding: 15px 25px;&#10;    border-radius: 8px;&#10;    cursor: pointer;&#10;    font-size: 1.1em;&#10;    font-weight: 700;&#10;    transition: background-color 0.3s ease, transform 0.2s ease;&#10;    margin-top: 15px;&#10;}&#10;.add-form-section button:hover {&#10;    background-color: var(--color-green-medium);&#10;    transform: translateY(-2px);&#10;}&#10;.form-message {&#10;    text-align: center;&#10;    margin-top: 15px;&#10;    padding: 10px;&#10;    border-radius: 5px;&#10;    font-weight: 600;&#10;    display: none; /* Oculto por defecto */&#10;}&#10;.form-message.success {&#10;    background-color: #d4edda;&#10;    color: #155724;&#10;}&#10;.form-message.error {&#10;    background-color: #f8d7da;&#10;    color: #721c24;&#10;}&#10;&#10;/* --- 13. Sección Mis Registros (Dashboard) --- */&#10;.profile-info {&#10;    background-color: var(--color-cream-light);&#10;    padding: 2em;&#10;    border-radius: 10px;&#10;    box-shadow: 0 2px 10px rgba(0,0,0,0.05);&#10;    max-width: 600px;&#10;    margin: 2em auto;&#10;    text-align: center;&#10;}&#10;.profile-info p {&#10;    font-size: 1.1em;&#10;    margin-bottom: 10px;&#10;    color: var(--color-gray-text);&#10;}&#10;.profile-info strong {&#10;    color: var(--color-green-dark);&#10;}&#10;&#10;.user-record-list {&#10;    list-style: none;&#10;    padding: 0;&#10;    margin-top: 20px;&#10;}&#10;.user-record-list li {&#10;    background-color: var(--color-cream-light);&#10;    border: 1px solid var(--color-border-light);&#10;    padding: 12px 15px;&#10;    margin-bottom: 10px;&#10;    border-radius: 8px;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 10px;&#10;}&#10;.user-record-list li strong {&#10;    color: var(--color-green-dark);&#10;    font-size: 1.1em;&#10;}&#10;&#10;.user-record-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));&#10;    gap: 20px;&#10;    margin-top: 20px;&#10;}&#10;/* Reutiliza .carousel-item para las tarjetas de plantas en la grid */&#10;.user-record-grid .carousel-item {&#10;    margin-right: 0; /* Anular margen del carrusel */&#10;    margin-bottom: 0; /* Anular margen del carrusel */&#10;    width: auto; /* Permitir que la grid controle el ancho */&#10;}&#10;&#10;&#10;/* --- 14. Sección de Contacto (Común) --- */&#10;#contactanos p {&#10;    text-align: center;&#10;    font-size: 1.15em;&#10;    margin: 12px 0;&#10;    color: var(--color-gray-text); /* Cambiado a gris para consistencia */&#10;}&#10;#contactanos p strong {&#10;    color: var(--color-green-dark);&#10;    font-weight: 700;&#10;}&#10;#contactanos .social-links { /* Clase añadida para agrupar iconos */&#10;    display: flex;&#10;    justify-content: center;&#10;    gap: 25px;&#10;    margin-top: 25px;&#10;}&#10;#contactanos .social-links .social-icon { /* Clase añadida para iconos */&#10;    font-size: 2.8em; /* Iconos más grandes */&#10;    transition: transform 0.3s ease, color 0.3s ease;&#10;}&#10;#contactanos .social-links .social-icon:hover {&#10;    transform: translateY(-5px) scale(1.1);&#10;}&#10;/* Colores específicos de redes para un toque más profesional */&#10;.facebook-color { color: #3b5998; }&#10;.instagram-color { color: #C13584; } /* Instagram más vibrante */&#10;/* Añadir colores para otros iconos si se usan en el HTML */&#10;/* .twitter-color { color: #1DA1F2; } */&#10;/* .linkedin-color { color: #0A66C2; } */&#10;&#10;&#10;/* --- 15. Responsive Design (Media Queries) --- */&#10;/* Estilos para pantallas más pequeñas (ej. móviles) */&#10;@media (max-width: 768px) {&#10;    .app-header {&#10;        flex-direction: column;&#10;        height: auto;&#10;        padding: 10px 15px;&#10;    }&#10;    .header-brand {&#10;        margin-bottom: 10px;&#10;    }&#10;    .header-actions {&#10;        display: flex;&#10;        flex-wrap: wrap;&#10;        justify-content: center;&#10;        gap: 10px;&#10;    }&#10;    .header-actions .btn {&#10;        padding: 8px 12px;&#10;        margin: 0;&#10;    }&#10;    .header-actions .header-icon {&#10;        margin-right: 10px;&#10;    }&#10;&#10;    /*.search-bar {&#10;        top: auto;  Allow header to collapse&#10;        padding: 15px;&#10;    }*/&#10;&#10;    .search-bar {&#10;        position: relative;&#10;        z-index: 1000; /* Número alto para que esté encima */&#10;    }&#10;&#10;    .search-input {&#10;        width: 90%;&#10;    }&#10;    .search-suggestions {&#10;        width: 90%;&#10;    }&#10;&#10;    .menu-toggle {&#10;        left: 20px;&#10;        height: 55px;&#10;        width: 55px;&#10;        font-size: 1.8em;&#10;    }&#10;&#10;    .sidebar.active {&#10;        width: 200px;&#10;    }&#10;    body.sidebar-active main {&#10;        margin-left: 0; /* No mover el contenido en móviles, solo superponer */&#10;        padding-top: 150px; /* Ajustar padding superior */&#10;    }&#10;    main {&#10;         padding-top: 120px; /* Ajustar padding superior para header colapsado */&#10;    }&#10;&#10;    .content-section {&#10;        width: 95%;&#10;        padding: 2em;&#10;        margin: 2em auto;&#10;    }&#10;    .section-title {&#10;        font-size: 1.8em;&#10;    }&#10;&#10;    /* Home specific */&#10;    .hero-section {&#10;        padding: 3em 1.5em;&#10;    }&#10;    .hero-section .section-title {&#10;        font-size: 2.2em;&#10;    }&#10;    .hero-actions {&#10;        flex-direction: column;&#10;        gap: 15px;&#10;    }&#10;    .hero-actions .btn {&#10;        width: 100%;&#10;    }&#10;    .service-grid {&#10;        grid-template-columns: 1fr; /* Una columna en móvil */&#10;    }&#10;&#10;    /* Eventos */&#10;    .event-controls {&#10;        flex-direction: column;&#10;        gap: 10px;&#10;    }&#10;    .event-controls .btn-toggle, .event-controls .filter-input, .event-controls .btn-filter {&#10;        width: 100%;&#10;        box-sizing: border-box;&#10;    }&#10;&#10;    table.calendar th, table.calendar td {&#10;        font-size: 0.8em;&#10;        height: 70px;&#10;        padding: 8px 5px;&#10;    }&#10;&#10;    /* Foro */&#10;    .chat-message {&#10;        max-width: 95%;&#10;    }&#10;&#10;    /* Servicios (Flor) */&#10;    .flor {&#10;        transform: scale(0.8);&#10;        margin: 0 auto 1em;&#10;        height: 300px;&#10;        width: 300px;&#10;    }&#10;    .petalo {&#10;        width: 60px;&#10;        height: 60px;&#10;        font-size: 0.9em;&#10;    }&#10;    .flor-center-btn {&#10;        width: 100px;&#10;        height: 100px;&#10;        font-size: 1.1em;&#10;    }&#10;    .petalo .info-general {&#10;        font-size: 0.75em;&#10;        bottom: -25px;&#10;    }&#10;    /* Reajustar posiciones de pétalos para flor más pequeña */&#10;    .petalo:nth-child(2) { top: 20px; left: calc(50% - 30px); transform: translateX(-50%) translateY(-60px); }&#10;    .petalo:nth-child(3) { top: 60px; right: 0px; transform: translateX(60px) translateY(-50%); }&#10;    .petalo:nth-child(4) { bottom: 60px; right: 0px; transform: translateX(60px) translateY(50%); }&#10;    .petalo:nth-child(5) { bottom: 20px; left: calc(50% - 30px); transform: translateX(-50%) translateY(60px); }&#10;    .petalo:nth-child(6) { bottom: 60px; left: 0px; transform: translateX(-60px) translateY(50%); }&#10;    .petalo:nth-child(7) { top: 60px; left: 0px; transform: translateX(-60px) translateY(-50%); }&#10;&#10;&#10;    /* Catálogo */&#10;    .carousel-item {&#10;        min-width: 150px;&#10;        padding: 10px;&#10;    }&#10;    .carousel-item img {&#10;        height: 120px;&#10;    }&#10;    .carousel-nav-btn {&#10;        padding: 10px 5px;&#10;        font-size: 1.2em;&#10;    }&#10;&#10;    /* Modal de fotos */&#10;    .photo-modal-content {&#10;        padding: 20px;&#10;    }&#10;    .photo-modal-content .modal-title {&#10;        font-size: 1.5em;&#10;    }&#10;    .photo-modal-close {&#10;        font-size: 1.5em;&#10;    }&#10;&#10;    /* Formularios */&#10;    .add-form-section form {&#10;        max-width: 100%;&#10;    }&#10;&#10;    /* Mis Registros */&#10;    .user-record-grid {&#10;        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); /* Más pequeñas en móvil */&#10;    }&#10;    .user-record-grid .carousel-item {&#10;        min-width: unset; /* Permitir que la grid controle el tamaño */&#10;    }&#10;}" />
              <option name="updatedContent" value="/* index.css - Estilos para la aplicación &quot;Plantee&quot;&#13;&#10; * Este archivo define la apariencia visual de la interfaz de usuario.&#13;&#10; * Se aplican principios de Clean Code para mejorar la legibilidad y mantenibilidad.&#13;&#10; */&#13;&#10;&#13;&#10;/* --- 1. Variables CSS (Paleta de Colores y Tipografía Global) --- */&#13;&#10;/* Uso de variables para una gestión centralizada y consistente de colores. */&#13;&#10;:root {&#13;&#10;    --color-cream-light: #FDF9F3;&#13;&#10;    --color-cream-medium: #F5EFE6;&#13;&#10;    --color-green-light: #C8E6C9;&#13;&#10;    --color-green-medium: #81C784;&#13;&#10;    --color-green-dark: #388E3C;&#13;&#10;    --color-gray-text: #555555;&#13;&#10;    --color-border-light: #E0E0E0;&#13;&#10;    --color-error-red: #D32F2F; /* Añadido para mensajes de error */&#13;&#10;    --color-accent-blue: #5B8C85; /* Un toque de azul verdoso para contrastes */&#13;&#10;&#13;&#10;&#13;&#10;    /* Fuentes */&#13;&#10;    --font-primary: 'Poppins', sans-serif;&#13;&#10;    --font-secondary: 'Lora', serif; /* Para títulos y logo */&#13;&#10;}&#13;&#10;&#13;&#10;/* --- 2. Estilos Globales y Resets --- */&#13;&#10;body {&#13;&#10;    margin: 0;&#13;&#10;    font-family: var(--font-primary);&#13;&#10;    background-color: var(--color-cream-light);&#13;&#10;    color: var(--color-gray-text);&#13;&#10;    overflow-x: hidden; /* Evitar scroll horizontal */&#13;&#10;    scrollbar-width: thin;&#13;&#10;    scrollbar-color: var(--color-green-medium) var(--color-cream-light);&#13;&#10;}&#13;&#10;&#13;&#10;/* Oculta la barra de desplazamiento en navegadores WebKit (Chrome, Safari) */&#13;&#10;body::-webkit-scrollbar {&#13;&#10;    width: 8px;&#13;&#10;}&#13;&#10;body::-webkit-scrollbar-track {&#13;&#10;    background: var(--color-cream-light);&#13;&#10;}&#13;&#10;body::-webkit-scrollbar-thumb {&#13;&#10;    background-color: var(--color-green-medium);&#13;&#10;    border-radius: 10px;&#13;&#10;    border: 2px solid var(--color-cream-light);&#13;&#10;}&#13;&#10;&#13;&#10;/* Estilos generales para contenedores de sección */&#13;&#10;.content-section {&#13;&#10;    width: 90%;&#13;&#10;    max-width: 950px; /* Más ancho */&#13;&#10;    margin: 2.5em auto; /* Más margen vertical */&#13;&#10;    padding: 3em; /* Más padding */&#13;&#10;    background-color: white; /* Fondo blanco para contraste */&#13;&#10;    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1); /* Sombra más suave y extendida */&#13;&#10;    border-radius: 12px; /* Más redondeado */&#13;&#10;    box-sizing: border-box;&#13;&#10;}&#13;&#10;&#13;&#10;.section-title {&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    text-align: center;&#13;&#10;    margin-bottom: 2em; /* Más margen */&#13;&#10;    font-weight: 700; /* Más audaz */&#13;&#10;    font-size: 2.2em; /* Título más grande */&#13;&#10;}&#13;&#10;&#13;&#10;.section-description {&#13;&#10;    text-align: center;&#13;&#10;    line-height: 1.6;&#13;&#10;    margin-bottom: 2em;&#13;&#10;}&#13;&#10;&#13;&#10;/* Clases de utilidad */&#13;&#10;.hidden {&#13;&#10;    display: none !important; /* Fuerza la ocultación */&#13;&#10;}&#13;&#10;&#13;&#10;.text-center {&#13;&#10;    text-align: center;&#13;&#10;}&#13;&#10;&#13;&#10;.mt-8 {&#13;&#10;    margin-top: 2rem; /* 32px */&#13;&#10;}&#13;&#10;&#13;&#10;/* --- 3. Encabezado (Header) --- */&#13;&#10;.app-header {&#13;&#10;    background: var(--color-cream-medium);&#13;&#10;    padding: 15px 30px;&#13;&#10;    display: flex;&#13;&#10;    justify-content: space-between;&#13;&#10;    align-items: center;&#13;&#10;    height: 8vh;&#13;&#10;    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08); /* Sombra más pronunciada */&#13;&#10;    position: fixed; /* Fixed header */&#13;&#10;    width: 100%;&#13;&#10;    top: 0;&#13;&#10;    left: 0;&#13;&#10;    z-index: 1000; /* Asegura que esté por encima de todo */&#13;&#10;    box-sizing: border-box;&#13;&#10;}&#13;&#10;&#13;&#10;.header-brand .brand-name {&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    font-family: var(--font-secondary); /* Fuente distintiva para el logo */&#13;&#10;    font-size: 2.2em; /* Tamaño más grande */&#13;&#10;    font-weight: 700;&#13;&#10;}&#13;&#10;&#13;&#10;.header-actions .header-icon {&#13;&#10;    color: var(--color-gray-text);&#13;&#10;    font-size: 1.5em; /* Icono más grande */&#13;&#10;    cursor: pointer;&#13;&#10;    transition: color 0.3s ease;&#13;&#10;    margin-right: 15px; /* Espacio antes de los botones */&#13;&#10;}&#13;&#10;&#13;&#10;.header-actions .header-icon:hover {&#13;&#10;    color: var(--color-green-dark);&#13;&#10;}&#13;&#10;&#13;&#10;/* Estilos de botones generales para el header y otras secciones */&#13;&#10;.btn {&#13;&#10;    border: none;&#13;&#10;    padding: 10px 20px; /* Más padding */&#13;&#10;    border-radius: 8px; /* Bordes más redondeados */&#13;&#10;    cursor: pointer;&#13;&#10;    transition: background-color 0.3s ease, transform 0.2s ease;&#13;&#10;    font-size: 1em;&#13;&#10;    font-weight: 600;&#13;&#10;}&#13;&#10;&#13;&#10;.btn-primary {&#13;&#10;    background-color: var(--color-green-medium);&#13;&#10;    color: white;&#13;&#10;    margin-left: 15px; /* Más margen */&#13;&#10;}&#13;&#10;&#13;&#10;.btn-primary:hover {&#13;&#10;    background-color: var(--color-green-dark);&#13;&#10;    transform: translateY(-2px); /* Pequeño efecto 3D */&#13;&#10;}&#13;&#10;&#13;&#10;.btn-secondary {&#13;&#10;    background-color: transparent;&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    border: 1px solid var(--color-green-medium);&#13;&#10;    margin-left: 15px;&#13;&#10;}&#13;&#10;&#13;&#10;.btn-secondary:hover {&#13;&#10;    background-color: var(--color-green-light);&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    transform: translateY(-2px);&#13;&#10;}&#13;&#10;&#13;&#10;/* --- 4. Barra de Búsqueda Desplegable --- */&#13;&#10;.search-bar {&#13;&#10;    position: fixed; /* Fixed position */&#13;&#10;    top: 8vh; /* Just below header */&#13;&#10;    left: 0;&#13;&#10;    width: 100%;&#13;&#10;    background: var(--color-cream-light);&#13;&#10;    padding: 20px;&#13;&#10;    text-align: center;&#13;&#10;    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15); /* Sombra más profunda */&#13;&#10;    display: none; /* Oculto por defecto, JS lo controla */&#13;&#10;    box-sizing: border-box;&#13;&#10;    z-index: 999; /* Just below header */&#13;&#10;    transform: translateY(-100%); /* Start off-screen */&#13;&#10;    transition: transform 0.4s ease-out; /* Smooth slide down */&#13;&#10;}&#13;&#10;/*.search-bar.active {&#13;&#10;    transform: translateY(0);  Slide into view&#13;&#10;    display: block;  Asegura que se muestre&#13;&#10;}*/&#13;&#10;&#13;&#10;.search-bar.active {&#13;&#10;    display: block !important;&#13;&#10;    opacity: 1;&#13;&#10;    visibility: visible;&#13;&#10;    z-index: 1000;&#13;&#10;}&#13;&#10;&#13;&#10;.search-bar.hidden {&#13;&#10;    display: none;&#13;&#10;}&#13;&#10;&#13;&#10;.search-input {&#13;&#10;    width: 80%; /* Más ancho */&#13;&#10;    max-width: 600px;&#13;&#10;    padding: 12px 20px;&#13;&#10;    border: 1px solid var(--color-border-light);&#13;&#10;    border-radius: 10px; /* Más redondeado */&#13;&#10;    font-size: 1.1em;&#13;&#10;    outline: none;&#13;&#10;    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05); /* Sutil sombra interna */&#13;&#10;}&#13;&#10;.search-input:focus {&#13;&#10;    border-color: var(--color-green-medium);&#13;&#10;    box-shadow: 0 0 0 3px rgba(111, 168, 120, 0.2);&#13;&#10;}&#13;&#10;&#13;&#10;.search-suggestions {&#13;&#10;    position: absolute;&#13;&#10;    width: 80%;&#13;&#10;    max-width: 600px;&#13;&#10;    left: 50%;&#13;&#10;    transform: translateX(-50%);&#13;&#10;    background-color: white;&#13;&#10;    border: 1px solid var(--color-border-light);&#13;&#10;    border-top: none;&#13;&#10;    border-radius: 0 0 10px 10px;&#13;&#10;    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);&#13;&#10;    max-height: 250px; /* Un poco más alto */&#13;&#10;    overflow-y: auto;&#13;&#10;    text-align: left;&#13;&#10;    display: none;&#13;&#10;    z-index: 998;&#13;&#10;}&#13;&#10;.search-suggestions div {&#13;&#10;    padding: 12px 20px; /* Más padding */&#13;&#10;    cursor: pointer;&#13;&#10;    border-bottom: 1px solid #eee;&#13;&#10;    font-size: 1.05em;&#13;&#10;}&#13;&#10;.search-suggestions div:last-child {&#13;&#10;    border-bottom: none;&#13;&#10;}&#13;&#10;.search-suggestions div:hover {&#13;&#10;    background-color: var(--color-green-light);&#13;&#10;    color: var(--color-green-dark);&#13;&#10;}&#13;&#10;&#13;&#10;/* --- 5. Barra Lateral de Navegación (Sidebar) --- */&#13;&#10;.menu-toggle {&#13;&#10;    position: fixed;&#13;&#10;    top: 50%;&#13;&#10;    left: 40px; /* Más a la derecha para no chocar con el header */&#13;&#10;    transform: translateY(-50%);&#13;&#10;    cursor: pointer;&#13;&#10;    height: 65px; /* Más grande */&#13;&#10;    width: 65px; /* Más grande */&#13;&#10;    background-color: var(--color-green-dark);&#13;&#10;    color: white;&#13;&#10;    font-size: 2.2em; /* Más grande */&#13;&#10;    display: flex;&#13;&#10;    justify-content: center;&#13;&#10;    align-items: center;&#13;&#10;    border-radius: 50%;&#13;&#10;    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3); /* Sombra más fuerte */&#13;&#10;    z-index: 1001; /* Siempre visible y encima */&#13;&#10;    transition: background-color 0.3s ease, transform 0.3s ease, opacity 0.3s ease;&#13;&#10;}&#13;&#10;.menu-toggle:hover {&#13;&#10;    background-color: var(--color-green-medium);&#13;&#10;    transform: translateY(-50%) scale(1.05);&#13;&#10;}&#13;&#10;.menu-toggle.hidden {&#13;&#10;    opacity: 0;&#13;&#10;    pointer-events: none; /* Desactiva clics cuando oculto */&#13;&#10;}&#13;&#10;&#13;&#10;.sidebar {&#13;&#10;    width: 0; /* Empieza colapsado */&#13;&#10;    background: linear-gradient(to bottom, var(--color-green-medium), var(--color-green-dark)); /* Gradiente */&#13;&#10;    height: 100vh;&#13;&#10;    position: fixed;&#13;&#10;    top: 0;&#13;&#10;    left: 0;&#13;&#10;    display: flex;&#13;&#10;    flex-direction: column;&#13;&#10;    align-items: center;&#13;&#10;    padding-top: 100px;&#13;&#10;    box-shadow: 3px 0 8px rgba(0, 0, 0, 0.15); /* Sombra más marcada */&#13;&#10;    z-index: 1000;&#13;&#10;    overflow-x: hidden; /* Evita desbordamiento de texto */&#13;&#10;    transition: width 0.4s ease-in-out; /* Transición suave */&#13;&#10;}&#13;&#10;.sidebar.active {&#13;&#10;    width: 250px; /* Ancho extendido */&#13;&#10;}&#13;&#10;.sidebar .nav-link { /* Renombrado de .menu-btn a .nav-link */&#13;&#10;    margin: 15px 0;&#13;&#10;    text-decoration: none;&#13;&#10;    color: white;&#13;&#10;    font-size: 1.2em; /* Más grande */&#13;&#10;    display: flex;&#13;&#10;    align-items: center;&#13;&#10;    padding: 12px 20px; /* Más padding */&#13;&#10;    border-radius: 8px;&#13;&#10;    transition: background-color 0.3s ease, transform 0.2s ease;&#13;&#10;    width: calc(100% - 40px); /* Ajustar ancho para padding */&#13;&#10;    box-sizing: border-box;&#13;&#10;    white-space: nowrap; /* Evita que el texto se rompa */&#13;&#10;}&#13;&#10;.sidebar .nav-link .nav-icon { /* Renombrado de i a .nav-icon */&#13;&#10;    margin-right: 20px; /* Más margen para el icono */&#13;&#10;    font-size: 1.4em; /* Icono más grande */&#13;&#10;}&#13;&#10;.sidebar .nav-link .nav-text { /* Renombrado de span a .nav-text */&#13;&#10;    opacity: 0; /* Oculto por defecto */&#13;&#10;    transition: opacity 0.3s ease;&#13;&#10;}&#13;&#10;.sidebar.active .nav-link .nav-text {&#13;&#10;    opacity: 1; /* Mostrar texto cuando activo */&#13;&#10;}&#13;&#10;.sidebar .nav-link:hover {&#13;&#10;    background-color: rgba(255, 255, 255, 0.2); /* Fondo semitransparente al hover */&#13;&#10;    transform: translateX(8px); /* Deslizamiento al hover */&#13;&#10;}&#13;&#10;&#13;&#10;/* --- Main Content --- */&#13;&#10;main {&#13;&#10;    margin-left: 0;&#13;&#10;    padding: 100px 20px 20px; /* Padding superior para el header fijo */&#13;&#10;    transition: margin-left 0.4s ease-in-out;&#13;&#10;    min-height: calc(100vh - 8vh); /* Asegura que ocupe al menos la altura de la vista */&#13;&#10;}&#13;&#10;body.sidebar-active main {&#13;&#10;    margin-left: 250px; /* Margen cuando el sidebar está activo */&#13;&#10;}&#13;&#10;&#13;&#10;/* --- 6. Estilos Específicos para la Sección de Inicio (Home) --- */&#13;&#10;.hero-section {&#13;&#10;    background: linear-gradient(to bottom right, var(--color-green-light), var(--color-cream-medium));&#13;&#10;    padding: 5em 3em;&#13;&#10;    border-radius: 15px;&#13;&#10;    margin-top: 3em;&#13;&#10;    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);&#13;&#10;}&#13;&#10;&#13;&#10;.hero-section .section-title {&#13;&#10;    font-size: 3em;&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    margin-bottom: 0.5em;&#13;&#10;    font-family: var(--font-secondary);&#13;&#10;}&#13;&#10;&#13;&#10;.hero-section .section-description {&#13;&#10;    max-width: 700px;&#13;&#10;    margin: 0 auto 2em;&#13;&#10;    font-size: 1.2em;&#13;&#10;    color: var(--color-gray-text);&#13;&#10;}&#13;&#10;&#13;&#10;.hero-actions {&#13;&#10;    display: flex;&#13;&#10;    justify-content: center;&#13;&#10;    gap: 20px;&#13;&#10;    margin-top: 2em;&#13;&#10;}&#13;&#10;&#13;&#10;/* Estilos para las tarjetas de servicio simplificadas en Home */&#13;&#10;.service-grid {&#13;&#10;    display: grid;&#13;&#10;    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));&#13;&#10;    gap: 30px;&#13;&#10;    margin-top: 3em;&#13;&#10;}&#13;&#10;&#13;&#10;.service-card {&#13;&#10;    background-color: var(--color-cream-light);&#13;&#10;    padding: 25px;&#13;&#10;    border-radius: 10px;&#13;&#10;    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);&#13;&#10;    text-align: center;&#13;&#10;    transition: transform 0.3s ease, box-shadow 0.3s ease;&#13;&#10;}&#13;&#10;&#13;&#10;.service-card:hover {&#13;&#10;    transform: translateY(-8px);&#13;&#10;    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);&#13;&#10;}&#13;&#10;&#13;&#10;.service-card .service-icon {&#13;&#10;    font-size: 3em;&#13;&#10;    color: var(--color-green-medium);&#13;&#10;    margin-bottom: 15px;&#13;&#10;}&#13;&#10;&#13;&#10;.service-card-title {&#13;&#10;    font-size: 1.5em;&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    margin-bottom: 10px;&#13;&#10;    font-weight: 600;&#13;&#10;}&#13;&#10;&#13;&#10;.service-card-description {&#13;&#10;    font-size: 0.95em;&#13;&#10;    color: var(--color-gray-text);&#13;&#10;    line-height: 1.5;&#13;&#10;}&#13;&#10;&#13;&#10;/* Estilos específicos para tarjetas clickeables */&#13;&#10;.clickable-card {&#13;&#10;    cursor: pointer;&#13;&#10;    border: 2px solid transparent;&#13;&#10;    transition: all 0.3s ease;&#13;&#10;    position: relative;&#13;&#10;    overflow: hidden;&#13;&#10;}&#13;&#10;&#13;&#10;.clickable-card:hover {&#13;&#10;    transform: translateY(-10px);&#13;&#10;    box-shadow: 0 15px 35px rgba(56, 142, 60, 0.2);&#13;&#10;    border-color: var(--color-green-medium);&#13;&#10;}&#13;&#10;&#13;&#10;.clickable-card:active {&#13;&#10;    transform: translateY(-5px);&#13;&#10;}&#13;&#10;&#13;&#10;/* Efecto de brillo para tarjetas clickeables */&#13;&#10;.clickable-card::before {&#13;&#10;    content: '';&#13;&#10;    position: absolute;&#13;&#10;    top: -50%;&#13;&#10;    left: -50%;&#13;&#10;    width: 200%;&#13;&#10;    height: 200%;&#13;&#10;    background: linear-gradient(&#13;&#10;        45deg,&#13;&#10;        transparent,&#13;&#10;        rgba(255, 255, 255, 0.1),&#13;&#10;        transparent&#13;&#10;    );&#13;&#10;    transform: translateX(-100%);&#13;&#10;    transition: transform 0.6s;&#13;&#10;}&#13;&#10;&#13;&#10;.clickable-card:hover::before {&#13;&#10;    transform: translateX(100%);&#13;&#10;}&#13;&#10;&#13;&#10;/* Estilos para las características de la tarjeta de bitácora */&#13;&#10;.service-card-features {&#13;&#10;    margin-top: 15px;&#13;&#10;    padding: 10px;&#13;&#10;    background-color: rgba(200, 230, 201, 0.3);&#13;&#10;    border-radius: 5px;&#13;&#10;    text-align: left;&#13;&#10;}&#13;&#10;&#13;&#10;.service-card-features small {&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    font-weight: 500;&#13;&#10;    display: block;&#13;&#10;    margin: 2px 0;&#13;&#10;}&#13;&#10;&#13;&#10;/* Indicador visual para tarjetas clickeables */&#13;&#10;.clickable-card .service-card-title::after {&#13;&#10;    content: ' →';&#13;&#10;    opacity: 0;&#13;&#10;    transition: opacity 0.3s ease;&#13;&#10;    color: var(--color-green-medium);&#13;&#10;}&#13;&#10;&#13;&#10;.clickable-card:hover .service-card-title::after {&#13;&#10;    opacity: 1;&#13;&#10;}&#13;&#10;&#13;&#10;/* --- 7. Sección de Eventos (Dashboard) --- */&#13;&#10;.event-controls {&#13;&#10;    display: flex;&#13;&#10;    flex-wrap: wrap; /* Permite que los elementos se envuelvan en pantallas pequeñas */&#13;&#10;    justify-content: center;&#13;&#10;    gap: 10px; /* Espacio entre elementos */&#13;&#10;    margin-bottom: 20px;&#13;&#10;}&#13;&#10;&#13;&#10;.btn-toggle {&#13;&#10;    background-color: var(--color-green-light);&#13;&#10;    color: var(--color-gray-text);&#13;&#10;}&#13;&#10;&#13;&#10;.btn-toggle:hover, .btn-toggle.active {&#13;&#10;    background-color: var(--color-green-medium);&#13;&#10;    color: white;&#13;&#10;}&#13;&#10;&#13;&#10;.date-filter-group {&#13;&#10;    display: flex;&#13;&#10;    align-items: center;&#13;&#10;    gap: 5px; /* Espacio entre elementos del filtro de fecha */&#13;&#10;}&#13;&#10;&#13;&#10;.filter-label {&#13;&#10;    color: var(--color-gray-text);&#13;&#10;    font-size: 0.9em;&#13;&#10;}&#13;&#10;&#13;&#10;.filter-input {&#13;&#10;    padding: 9px 12px;&#13;&#10;    border: 1px solid var(--color-border-light);&#13;&#10;    border-radius: 8px;&#13;&#10;    font-size: 1em;&#13;&#10;    color: var(--color-gray-text);&#13;&#10;    outline: none;&#13;&#10;}&#13;&#10;.filter-input:focus {&#13;&#10;    border-color: var(--color-green-medium);&#13;&#10;    box-shadow: 0 0 0 3px rgba(111, 168, 120, 0.2);&#13;&#10;}&#13;&#10;&#13;&#10;.btn-filter {&#13;&#10;    background-color: var(--color-green-dark);&#13;&#10;    color: white;&#13;&#10;}&#13;&#10;&#13;&#10;.btn-filter:hover {&#13;&#10;    background-color: var(--color-green-medium);&#13;&#10;}&#13;&#10;&#13;&#10;.event-list-view .event-item {&#13;&#10;    border-bottom: 1px dashed var(--color-border-light); /* Línea punteada */&#13;&#10;    padding: 20px 0; /* Más padding */&#13;&#10;    margin-bottom: 15px;&#13;&#10;    transition: background-color 0.3s ease;&#13;&#10;    border-radius: 5px; /* Para el hover */&#13;&#10;    padding-left: 10px; /* Para el hover */&#13;&#10;}&#13;&#10;.event-list-view .event-item:last-child {&#13;&#10;    border-bottom: none;&#13;&#10;    margin-bottom: 0;&#13;&#10;}&#13;&#10;.event-list-view .event-item:hover {&#13;&#10;    background-color: var(--color-cream-light);&#13;&#10;}&#13;&#10;.event-list-view .event-item h3 {&#13;&#10;    margin: 0 0 8px 0;&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    font-size: 1.4em; /* Más grande */&#13;&#10;    font-weight: 600;&#13;&#10;}&#13;&#10;.event-list-view .event-item p {&#13;&#10;    margin: 6px 0;&#13;&#10;    line-height: 1.6;&#13;&#10;}&#13;&#10;.event-list-view .event-item .event-meta {&#13;&#10;    font-size: 0.95em;&#13;&#10;    color: #777;&#13;&#10;    font-style: italic;&#13;&#10;}&#13;&#10;&#13;&#10;/* Estilos del calendario */&#13;&#10;table.calendar {&#13;&#10;    border-collapse: collapse;&#13;&#10;    width: 100%;&#13;&#10;    margin-top: 25px; /* Más margen */&#13;&#10;    table-layout: fixed; /* Ancho de columna fijo */&#13;&#10;}&#13;&#10;table.calendar th, table.calendar td {&#13;&#10;    border: 1px solid var(--color-border-light);&#13;&#10;    padding: 12px 8px; /* Más padding */&#13;&#10;    text-align: center;&#13;&#10;    height: 90px; /* Ajustado para más espacio */&#13;&#10;    vertical-align: top;&#13;&#10;    font-size: 0.9em;&#13;&#10;    position: relative; /* Para el contenido del día */&#13;&#10;}&#13;&#10;table.calendar th {&#13;&#10;    background-color: var(--color-green-light);&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    font-weight: 700;&#13;&#10;}&#13;&#10;table.calendar td {&#13;&#10;    background-color: white;&#13;&#10;    cursor: pointer;&#13;&#10;    transition: background-color 0.2s ease;&#13;&#10;}&#13;&#10;table.calendar td:hover {&#13;&#10;    background-color: var(--color-cream-light);&#13;&#10;}&#13;&#10;table.calendar td.today {&#13;&#10;    background-color: var(--color-green-light);&#13;&#10;    border: 2px solid var(--color-green-medium);&#13;&#10;}&#13;&#10;table.calendar td strong {&#13;&#10;    display: block; /* Para que el evento esté en una nueva línea */&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    font-weight: 600;&#13;&#10;    margin-top: 5px;&#13;&#10;    font-size: 0.85em;&#13;&#10;}&#13;&#10;table.calendar td .event-badge {&#13;&#10;    background-color: var(--color-accent-blue);&#13;&#10;    color: white;&#13;&#10;    font-size: 0.7em;&#13;&#10;    padding: 3px 6px;&#13;&#10;    border-radius: 5px;&#13;&#10;    position: absolute;&#13;&#10;    bottom: 5px;&#13;&#10;    left: 5px;&#13;&#10;    right: 5px;&#13;&#10;    white-space: nowrap;&#13;&#10;    overflow: hidden;&#13;&#10;    text-overflow: ellipsis;&#13;&#10;}&#13;&#10;table.calendar td.has-event {&#13;&#10;    border: 2px solid var(--color-green-medium);&#13;&#10;}&#13;&#10;&#13;&#10;/* --- 8. Sección de Foro (Dashboard) --- */&#13;&#10;.chat-history {&#13;&#10;    height: 350px; /* Más alto */&#13;&#10;    border: 1px solid var(--color-border-light);&#13;&#10;    background-color: var(--color-cream-light); /* Fondo más suave */&#13;&#10;    padding: 20px; /* Más padding */&#13;&#10;    overflow-y: auto;&#13;&#10;    margin-bottom: 20px;&#13;&#10;    border-radius: 10px;&#13;&#10;    display: flex;&#13;&#10;    flex-direction: column;&#13;&#10;    gap: 15px; /* Espacio entre mensajes */&#13;&#10;}&#13;&#10;.chat-message {&#13;&#10;    padding: 10px 15px;&#13;&#10;    border-radius: 20px; /* Más redondeado */&#13;&#10;    background-color: #E6F0E6; /* Verde muy claro */&#13;&#10;    align-self: flex-start;&#13;&#10;    max-width: 75%; /* Ligeramente más ancho */&#13;&#10;    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);&#13;&#10;    line-height: 1.5;&#13;&#10;}&#13;&#10;.chat-message.user-message {&#13;&#10;     background-color: var(--color-green-medium);&#13;&#10;     color: white;&#13;&#10;     align-self: flex-end;&#13;&#10;}&#13;&#10;.chat-message .message-author {&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    font-weight: 600;&#13;&#10;    display: block; /* Nombre de usuario en nueva línea */&#13;&#10;    margin-bottom: 3px;&#13;&#10;}&#13;&#10;.chat-message.user-message .message-author {&#13;&#10;    color: var(--color-cream-light);&#13;&#10;}&#13;&#10;.chat-message p {&#13;&#10;    margin: 0;&#13;&#10;}&#13;&#10;.forum-input-container {&#13;&#10;    position: relative;&#13;&#10;}&#13;&#10;.forum-textarea {&#13;&#10;    width: calc(100% - 22px); /* Ajustar por padding */&#13;&#10;    padding: 15px; /* Más padding */&#13;&#10;    border: 1px solid var(--color-border-light);&#13;&#10;    border-radius: 10px;&#13;&#10;    font-size: 1.05em;&#13;&#10;    outline: none;&#13;&#10;    resize: vertical;&#13;&#10;    min-height: 60px; /* Altura mínima */&#13;&#10;    box-sizing: border-box;&#13;&#10;}&#13;&#10;.forum-textarea:focus {&#13;&#10;    border-color: var(--color-green-medium);&#13;&#10;    box-shadow: 0 0 0 3px rgba(111, 168, 120, 0.2); /* Sombra al enfocar */&#13;&#10;}&#13;&#10;.login-message {&#13;&#10;    position: absolute;&#13;&#10;    bottom: 10px;&#13;&#10;    left: 50%;&#13;&#10;    transform: translateX(-50%);&#13;&#10;    background-color: var(--color-error-red); /* Color de error */&#13;&#10;    color: white;&#13;&#10;    padding: 10px 20px;&#13;&#10;    border-radius: 5px;&#13;&#10;    font-size: 0.9em;&#13;&#10;    opacity: 0;&#13;&#10;    transition: opacity 0.5s ease-in-out;&#13;&#10;    pointer-events: none;&#13;&#10;    white-space: nowrap;&#13;&#10;    z-index: 10; /* Encima del input */&#13;&#10;}&#13;&#10;.login-message.show {&#13;&#10;    opacity: 1;&#13;&#10;}&#13;&#10;&#13;&#10;/* --- 9. Sección de Servicios (Dashboard - Flor Dinámica) --- */&#13;&#10;.service-section {&#13;&#10;    /* Altura ajustada para la flor en el dashboard */&#13;&#10;    min-height: 70vh; /* Permite que el contenido se expanda si es necesario */&#13;&#10;    display: flex;&#13;&#10;    flex-direction: column;&#13;&#10;    justify-content: center;&#13;&#10;    align-items: center;&#13;&#10;}&#13;&#10;&#13;&#10;.flor-container {&#13;&#10;    display: flex;&#13;&#10;    flex-direction: column;&#13;&#10;    justify-content: center;&#13;&#10;    align-items: center;&#13;&#10;    position: relative;&#13;&#10;    height: 400px; /* Mayor altura para más espacio */&#13;&#10;    width: 100%;&#13;&#10;    max-width: 600px; /* Limitar el ancho para mejor control */&#13;&#10;    margin-top: 20px;&#13;&#10;}&#13;&#10;&#13;&#10;.flor {&#13;&#10;    display: flex;&#13;&#10;    justify-content: center;&#13;&#10;    align-items: center;&#13;&#10;    position: relative;&#13;&#10;    height: 350px; /* Altura ajustada para la flor */&#13;&#10;    width: 350px;&#13;&#10;    margin: 2em auto;&#13;&#10;    transition: transform 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55); /* Rebote */&#13;&#10;}&#13;&#10;.flor.petal-selected {&#13;&#10;    transform: scale(0.9); /* Ligeramente más pequeño cuando se selecciona un pétalo */&#13;&#10;}&#13;&#10;.petalo {&#13;&#10;    position: absolute;&#13;&#10;    width: 80px; /* Tamaño del pétalo */&#13;&#10;    height: 80px; /* Tamaño del pétalo */&#13;&#10;    background: var(--color-green-light);&#13;&#10;    border-radius: 50%;&#13;&#10;    display: flex;&#13;&#10;    justify-content: center;&#13;&#10;    align-items: center;&#13;&#10;    font-weight: bold;&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    cursor: pointer;&#13;&#10;    transition: background-color 0.3s ease, transform 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55), width 0.5s ease, height 0.5s ease;&#13;&#10;    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);&#13;&#10;    font-size: 1.1em;&#13;&#10;    border: 2px solid transparent;&#13;&#10;}&#13;&#10;.petalo:hover {&#13;&#10;    background-color: var(--color-green-medium);&#13;&#10;    transform: scale(1.1);&#13;&#10;    color: white;&#13;&#10;}&#13;&#10;.petalo.selected {&#13;&#10;    background-color: var(--color-green-dark);&#13;&#10;    color: white;&#13;&#10;    border: 2px solid var(--color-accent-blue);&#13;&#10;    transform: scale(1.2); /* Más grande si está seleccionado */&#13;&#10;    z-index: 10;&#13;&#10;}&#13;&#10;&#13;&#10;/* Posicionamiento de los 6 pétalos alrededor de un centro de 120px */&#13;&#10;/* Radios de 100px desde el centro de la flor para el centro de los pétalos */&#13;&#10;.petalo:nth-child(2) { top: 25px; left: calc(50% - 40px); transform: translateX(-50%) translateY(-70px); } /* Arriba */&#13;&#10;.petalo:nth-child(3) { top: 75px; right: 0px; transform: translateX(70px) translateY(-50%); } /* Derecha-Arriba */&#13;&#10;.petalo:nth-child(4) { bottom: 75px; right: 0px; transform: translateX(70px) translateY(50%); } /* Derecha-Abajo */&#13;&#10;.petalo:nth-child(5) { bottom: 25px; left: calc(50% - 40px); transform: translateX(-50%) translateY(70px); } /* Abajo */&#13;&#10;.petalo:nth-child(6) { bottom: 75px; left: 0px; transform: translateX(-70px) translateY(50%); } /* Izquierda-Abajo */&#13;&#10;.petalo:nth-child(7) { top: 75px; left: 0px; transform: translateX(-70px) translateY(-50%); } /* Izquierda-Arriba */&#13;&#10;&#13;&#10;&#13;&#10;.petalo .info-general {&#13;&#10;    display: none;&#13;&#10;    position: absolute;&#13;&#10;    bottom: -35px; /* Debajo del pétalo */&#13;&#10;    background: white;&#13;&#10;    padding: 6px 12px;&#13;&#10;    border: 1px solid var(--color-border-light);&#13;&#10;    border-radius: 6px;&#13;&#10;    white-space: nowrap;&#13;&#10;    font-size: 0.85em;&#13;&#10;    color: var(--color-gray-text);&#13;&#10;    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1);&#13;&#10;    z-index: 100; /* Asegura que se vea por encima de otros pétalos */&#13;&#10;    transform: translateX(-50%);&#13;&#10;    left: 50%;&#13;&#10;}&#13;&#10;.petalo:hover .info-general {&#13;&#10;    display: block;&#13;&#10;}&#13;&#10;&#13;&#10;.flor-center-btn {&#13;&#10;    position: absolute;&#13;&#10;    width: 120px; /* Centro más grande */&#13;&#10;    height: 120px;&#13;&#10;    background: var(--color-green-dark);&#13;&#10;    border-radius: 50%;&#13;&#10;    z-index: 5;&#13;&#10;    cursor: pointer;&#13;&#10;    display: flex;&#13;&#10;    justify-content: center;&#13;&#10;    align-items: center;&#13;&#10;    color: white;&#13;&#10;    font-weight: 700;&#13;&#10;    font-size: 1.3em;&#13;&#10;    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);&#13;&#10;    transition: background-color 0.3s ease, transform 0.3s ease;&#13;&#10;}&#13;&#10;.flor-center-btn:hover {&#13;&#10;    background-color: var(--color-green-medium);&#13;&#10;    transform: scale(1.05);&#13;&#10;}&#13;&#10;&#13;&#10;.full-service-info {&#13;&#10;    background-color: var(--color-cream-medium);&#13;&#10;    border: 1px solid var(--color-border-light);&#13;&#10;    border-radius: 10px;&#13;&#10;    padding: 25px;&#13;&#10;    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);&#13;&#10;    text-align: center;&#13;&#10;    margin-top: 30px; /* Separación de la flor */&#13;&#10;    display: none; /* Oculto por defecto */&#13;&#10;}&#13;&#10;.full-service-info .service-detail-title {&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    margin-top: 0;&#13;&#10;    font-size: 1.8em;&#13;&#10;    margin-bottom: 15px;&#13;&#10;}&#13;&#10;.full-service-info .service-detail-description {&#13;&#10;    color: var(--color-gray-text);&#13;&#10;    line-height: 1.7;&#13;&#10;    font-size: 1.1em;&#13;&#10;}&#13;&#10;&#13;&#10;/* --- 10. Sección de Catálogo (Común para ambas, pero con formularios solo en Dashboard) --- */&#13;&#10;.carousel-wrapper {&#13;&#10;    position: relative;&#13;&#10;    width: 100%;&#13;&#10;    overflow: hidden;&#13;&#10;    padding-bottom: 30px; /* Espacio para nombre y fecha */&#13;&#10;    margin-top: 20px;&#13;&#10;}&#13;&#10;.carousel-track {&#13;&#10;    display: flex;&#13;&#10;    transition: transform 0.5s ease-out;&#13;&#10;    cursor: grab;&#13;&#10;    user-select: none;&#13;&#10;    padding: 10px 0; /* Padding vertical para sombra y borde */&#13;&#10;    scroll-behavior: smooth; /* Smooth scroll para botones */&#13;&#10;    overflow-x: auto; /* Permitir scroll manual */&#13;&#10;    -webkit-overflow-scrolling: touch; /* iOS smooth scrolling */&#13;&#10;    scrollbar-width: none; /* Ocultar scrollbar */&#13;&#10;    -ms-overflow-style: none;&#13;&#10;}&#13;&#10;.carousel-track::-webkit-scrollbar {&#13;&#10;    display: none;&#13;&#10;}&#13;&#10;.carousel-track.dragging {&#13;&#10;    cursor: grabbing;&#13;&#10;}&#13;&#10;.carousel-item {&#13;&#10;    min-width: 200px; /* Ancho fijo para cada ítem */&#13;&#10;    flex-shrink: 0;&#13;&#10;    box-sizing: border-box;&#13;&#10;    padding: 15px; /* Espacio entre fotos */&#13;&#10;    text-align: center;&#13;&#10;    display: flex;&#13;&#10;    flex-direction: column;&#13;&#10;    align-items: center;&#13;&#10;    background-color: white;&#13;&#10;    border-radius: 10px;&#13;&#10;    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);&#13;&#10;    transition: transform 0.3s ease, box-shadow 0.3s ease;&#13;&#10;    margin-right: 20px; /* Espacio entre ítems */&#13;&#10;}&#13;&#10;.carousel-item:hover {&#13;&#10;    transform: translateY(-5px); /* Pequeño levantamiento */&#13;&#10;    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15);&#13;&#10;}&#13;&#10;.carousel-item img {&#13;&#10;    width: 100%;&#13;&#10;    height: 180px; /* Altura fija para uniformidad */&#13;&#10;    object-fit: cover;&#13;&#10;    border-radius: 8px;&#13;&#10;    margin-bottom: 12px;&#13;&#10;    transition: transform 0.3s ease;&#13;&#10;    cursor: zoom-in; /* Cursor de zoom */&#13;&#10;}&#13;&#10;.carousel-item img:hover {&#13;&#10;    transform: scale(1.02);&#13;&#10;}&#13;&#10;.carousel-item .image-info {&#13;&#10;    font-size: 0.95em;&#13;&#10;    color: var(--color-gray-text);&#13;&#10;    text-align: center;&#13;&#10;    flex-grow: 1; /* Para que ocupe el espacio disponible */&#13;&#10;    display: flex;&#13;&#10;    flex-direction: column;&#13;&#10;    justify-content: center;&#13;&#10;}&#13;&#10;.carousel-item .image-info strong {&#13;&#10;    display: block;&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    margin-bottom: 5px;&#13;&#10;    font-size: 1.1em;&#13;&#10;    font-weight: 600;&#13;&#10;}&#13;&#10;.carousel-nav-btn {&#13;&#10;    position: absolute;&#13;&#10;    top: 50%;&#13;&#10;    transform: translateY(-50%);&#13;&#10;    background-color: rgba(0, 0, 0, 0.5);&#13;&#10;    color: white;&#13;&#10;    border: none;&#13;&#10;    padding: 15px 10px;&#13;&#10;    border-radius: 5px;&#13;&#10;    cursor: pointer;&#13;&#10;    font-size: 1.5em;&#13;&#10;    z-index: 10;&#13;&#10;    transition: background-color 0.3s ease, transform 0.3s ease;&#13;&#10;}&#13;&#10;.carousel-nav-btn:hover {&#13;&#10;    background-color: rgba(0, 0, 0, 0.7);&#13;&#10;    transform: translateY(-50%) scale(1.1);&#13;&#10;}&#13;&#10;.carousel-nav-btn.left {&#13;&#10;    left: 0;&#13;&#10;    border-top-left-radius: 0;&#13;&#10;    border-bottom-left-radius: 0;&#13;&#10;}&#13;&#10;.carousel-nav-btn.right {&#13;&#10;    right: 0;&#13;&#10;    border-top-right-radius: 0;&#13;&#10;    border-bottom-right-radius: 0;&#13;&#10;}&#13;&#10;&#13;&#10;/* --- 11. Modal de Información de Fotos (Común) --- */&#13;&#10;.photo-modal-overlay {&#13;&#10;    position: fixed;&#13;&#10;    top: 0;&#13;&#10;    left: 0;&#13;&#10;    width: 100%;&#13;&#10;    height: 100%;&#13;&#10;    background-color: rgba(0, 0, 0, 0.7); /* Fondo más oscuro */&#13;&#10;    display: flex;&#13;&#10;    justify-content: center;&#13;&#10;    align-items: center;&#13;&#10;    z-index: 2000; /* Alto z-index para estar por encima de todo */&#13;&#10;    opacity: 0;&#13;&#10;    visibility: hidden;&#13;&#10;    transition: opacity 0.4s ease, visibility 0.4s ease;&#13;&#10;}&#13;&#10;.photo-modal-overlay.visible {&#13;&#10;    opacity: 1;&#13;&#10;    visibility: visible;&#13;&#10;}&#13;&#10;.photo-modal-content {&#13;&#10;    background-color: var(--color-cream-light);&#13;&#10;    padding: 35px; /* Más padding */&#13;&#10;    border-radius: 15px; /* Más redondeado */&#13;&#10;    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4); /* Sombra más prominente */&#13;&#10;    max-width: 700px; /* Más ancho */&#13;&#10;    width: 90%;&#13;&#10;    text-align: center;&#13;&#10;    position: relative;&#13;&#10;    transform: scale(0.9); /* Empieza un poco pequeño */&#13;&#10;    transition: transform 0.3s ease;&#13;&#10;}&#13;&#10;.photo-modal-overlay.visible .photo-modal-content {&#13;&#10;    transform: scale(1); /* Escala normal al aparecer */&#13;&#10;}&#13;&#10;.photo-modal-content .modal-image {&#13;&#10;    max-width: 100%;&#13;&#10;    height: auto;&#13;&#10;    border-radius: 10px;&#13;&#10;    margin-bottom: 20px;&#13;&#10;    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);&#13;&#10;}&#13;&#10;.photo-modal-content .modal-title {&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    margin-bottom: 12px;&#13;&#10;    font-size: 2em;&#13;&#10;    font-weight: 700;&#13;&#10;}&#13;&#10;.photo-modal-content .modal-description {&#13;&#10;    color: var(--color-gray-text);&#13;&#10;    line-height: 1.7;&#13;&#10;    font-size: 1.1em;&#13;&#10;}&#13;&#10;.photo-modal-close {&#13;&#10;    position: absolute;&#13;&#10;    top: 15px;&#13;&#10;    right: 15px;&#13;&#10;    font-size: 1.8em;&#13;&#10;    color: var(--color-gray-text);&#13;&#10;    cursor: pointer;&#13;&#10;    transition: color 0.3s ease;&#13;&#10;    background: none; /* Eliminar fondo de botón por defecto */&#13;&#10;    border: none; /* Eliminar borde de botón por defecto */&#13;&#10;    padding: 0; /* Eliminar padding de botón por defecto */&#13;&#10;}&#13;&#10;.photo-modal-close:hover {&#13;&#10;    color: var(--color-error-red);&#13;&#10;}&#13;&#10;&#13;&#10;/* --- 12. Formularios (Add Plant/Event - Específicos del Dashboard) --- */&#13;&#10;.add-form-section {&#13;&#10;    margin-top: 3em;&#13;&#10;    padding-top: 2em;&#13;&#10;    border-top: 1px dashed var(--color-border-light);&#13;&#10;}&#13;&#10;.add-form-section h3 {&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    text-align: center;&#13;&#10;    margin-bottom: 1.5em;&#13;&#10;    font-weight: 600;&#13;&#10;    font-size: 1.8em;&#13;&#10;}&#13;&#10;.add-form-section form {&#13;&#10;    display: flex;&#13;&#10;    flex-direction: column;&#13;&#10;    gap: 15px;&#13;&#10;    max-width: 500px;&#13;&#10;    margin: 0 auto;&#13;&#10;}&#13;&#10;.add-form-section label {&#13;&#10;    font-weight: 600;&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    margin-bottom: 5px;&#13;&#10;    display: block;&#13;&#10;}&#13;&#10;.add-form-section input[type=&quot;text&quot;],&#13;&#10;.add-form-section input[type=&quot;date&quot;],&#13;&#10;.add-form-section input[type=&quot;file&quot;],&#13;&#10;.add-form-section textarea {&#13;&#10;    padding: 12px 15px;&#13;&#10;    border: 1px solid var(--color-border-light);&#13;&#10;    border-radius: 8px;&#13;&#10;    font-size: 1em;&#13;&#10;    color: var(--color-gray-text);&#13;&#10;    width: 100%;&#13;&#10;    box-sizing: border-box;&#13;&#10;    transition: border-color 0.3s ease, box-shadow 0.3s ease;&#13;&#10;}&#13;&#10;.add-form-section input[type=&quot;file&quot;] {&#13;&#10;    padding: 8px 0; /* Menos padding para el input file */&#13;&#10;}&#13;&#10;.add-form-section input[type=&quot;text&quot;]:focus,&#13;&#10;.add-form-section input[type=&quot;date&quot;]:focus,&#13;&#10;.add-form-section textarea:focus {&#13;&#10;    border-color: var(--color-green-medium);&#13;&#10;    box-shadow: 0 0 0 3px rgba(111, 168, 120, 0.2);&#13;&#10;    outline: none;&#13;&#10;}&#13;&#10;.add-form-section textarea {&#13;&#10;    resize: vertical;&#13;&#10;    min-height: 100px;&#13;&#10;}&#13;&#10;.add-form-section button { /* Estilo general para botones de formulario */&#13;&#10;    background-color: var(--color-green-dark);&#13;&#10;    color: white;&#13;&#10;    border: none;&#13;&#10;    padding: 15px 25px;&#13;&#10;    border-radius: 8px;&#13;&#10;    cursor: pointer;&#13;&#10;    font-size: 1.1em;&#13;&#10;    font-weight: 700;&#13;&#10;    transition: background-color 0.3s ease, transform 0.2s ease;&#13;&#10;    margin-top: 15px;&#13;&#10;}&#13;&#10;.add-form-section button:hover {&#13;&#10;    background-color: var(--color-green-medium);&#13;&#10;    transform: translateY(-2px);&#13;&#10;}&#13;&#10;.form-message {&#13;&#10;    text-align: center;&#13;&#10;    margin-top: 15px;&#13;&#10;    padding: 10px;&#13;&#10;    border-radius: 5px;&#13;&#10;    font-weight: 600;&#13;&#10;    display: none; /* Oculto por defecto */&#13;&#10;}&#13;&#10;.form-message.success {&#13;&#10;    background-color: #d4edda;&#13;&#10;    color: #155724;&#13;&#10;}&#13;&#10;.form-message.error {&#13;&#10;    background-color: #f8d7da;&#13;&#10;    color: #721c24;&#13;&#10;}&#13;&#10;&#13;&#10;/* --- 13. Sección Mis Registros (Dashboard) --- */&#13;&#10;.profile-info {&#13;&#10;    background-color: var(--color-cream-light);&#13;&#10;    padding: 2em;&#13;&#10;    border-radius: 10px;&#13;&#10;    box-shadow: 0 2px 10px rgba(0,0,0,0.05);&#13;&#10;    max-width: 600px;&#13;&#10;    margin: 2em auto;&#13;&#10;    text-align: center;&#13;&#10;}&#13;&#10;.profile-info p {&#13;&#10;    font-size: 1.1em;&#13;&#10;    margin-bottom: 10px;&#13;&#10;    color: var(--color-gray-text);&#13;&#10;}&#13;&#10;.profile-info strong {&#13;&#10;    color: var(--color-green-dark);&#13;&#10;}&#13;&#10;&#13;&#10;.user-record-list {&#13;&#10;    list-style: none;&#13;&#10;    padding: 0;&#13;&#10;    margin-top: 20px;&#13;&#10;}&#13;&#10;.user-record-list li {&#13;&#10;    background-color: var(--color-cream-light);&#13;&#10;    border: 1px solid var(--color-border-light);&#13;&#10;    padding: 12px 15px;&#13;&#10;    margin-bottom: 10px;&#13;&#10;    border-radius: 8px;&#13;&#10;    display: flex;&#13;&#10;    align-items: center;&#13;&#10;    gap: 10px;&#13;&#10;}&#13;&#10;.user-record-list li strong {&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    font-size: 1.1em;&#13;&#10;}&#13;&#10;&#13;&#10;.user-record-grid {&#13;&#10;    display: grid;&#13;&#10;    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));&#13;&#10;    gap: 20px;&#13;&#10;    margin-top: 20px;&#13;&#10;}&#13;&#10;/* Reutiliza .carousel-item para las tarjetas de plantas en la grid */&#13;&#10;.user-record-grid .carousel-item {&#13;&#10;    margin-right: 0; /* Anular margen del carrusel */&#13;&#10;    margin-bottom: 0; /* Anular margen del carrusel */&#13;&#10;    width: auto; /* Permitir que la grid controle el ancho */&#13;&#10;}&#13;&#10;&#13;&#10;&#13;&#10;/* --- 14. Sección de Contacto (Común) --- */&#13;&#10;#contactanos p {&#13;&#10;    text-align: center;&#13;&#10;    font-size: 1.15em;&#13;&#10;    margin: 12px 0;&#13;&#10;    color: var(--color-gray-text); /* Cambiado a gris para consistencia */&#13;&#10;}&#13;&#10;#contactanos p strong {&#13;&#10;    color: var(--color-green-dark);&#13;&#10;    font-weight: 700;&#13;&#10;}&#13;&#10;#contactanos .social-links { /* Clase añadida para agrupar iconos */&#13;&#10;    display: flex;&#13;&#10;    justify-content: center;&#13;&#10;    gap: 25px;&#13;&#10;    margin-top: 25px;&#13;&#10;}&#13;&#10;#contactanos .social-links .social-icon { /* Clase añadida para iconos */&#13;&#10;    font-size: 2.8em; /* Iconos más grandes */&#13;&#10;    transition: transform 0.3s ease, color 0.3s ease;&#13;&#10;}&#13;&#10;#contactanos .social-links .social-icon:hover {&#13;&#10;    transform: translateY(-5px) scale(1.1);&#13;&#10;}&#13;&#10;/* Colores específicos de redes para un toque más profesional */&#13;&#10;.facebook-color { color: #3b5998; }&#13;&#10;.instagram-color { color: #C13584; } /* Instagram más vibrante */&#13;&#10;/* Añadir colores para otros iconos si se usan en el HTML */&#13;&#10;/* .twitter-color { color: #1DA1F2; } */&#13;&#10;/* .linkedin-color { color: #0A66C2; } */&#13;&#10;&#13;&#10;&#13;&#10;/* --- 15. Responsive Design (Media Queries) --- */&#13;&#10;/* Estilos para pantallas más pequeñas (ej. móviles) */&#13;&#10;@media (max-width: 768px) {&#13;&#10;    .app-header {&#13;&#10;        flex-direction: column;&#13;&#10;        height: auto;&#13;&#10;        padding: 10px 15px;&#13;&#10;    }&#13;&#10;    .header-brand {&#13;&#10;        margin-bottom: 10px;&#13;&#10;    }&#13;&#10;    .header-actions {&#13;&#10;        display: flex;&#13;&#10;        flex-wrap: wrap;&#13;&#10;        justify-content: center;&#13;&#10;        gap: 10px;&#13;&#10;    }&#13;&#10;    .header-actions .btn {&#13;&#10;        padding: 8px 12px;&#13;&#10;        margin: 0;&#13;&#10;    }&#13;&#10;    .header-actions .header-icon {&#13;&#10;        margin-right: 10px;&#13;&#10;    }&#13;&#10;&#13;&#10;    /*.search-bar {&#13;&#10;        top: auto;  Allow header to collapse&#13;&#10;        padding: 15px;&#13;&#10;    }*/&#13;&#10;&#13;&#10;    .search-bar {&#13;&#10;        position: relative;&#13;&#10;        z-index: 1000; /* Número alto para que esté encima */&#13;&#10;    }&#13;&#10;&#13;&#10;    .search-input {&#13;&#10;        width: 90%;&#13;&#10;    }&#13;&#10;    .search-suggestions {&#13;&#10;        width: 90%;&#13;&#10;    }&#13;&#10;&#13;&#10;    .menu-toggle {&#13;&#10;        left: 20px;&#13;&#10;        height: 55px;&#13;&#10;        width: 55px;&#13;&#10;        font-size: 1.8em;&#13;&#10;    }&#13;&#10;&#13;&#10;    .sidebar.active {&#13;&#10;        width: 200px;&#13;&#10;    }&#13;&#10;    body.sidebar-active main {&#13;&#10;        margin-left: 0; /* No mover el contenido en móviles, solo superponer */&#13;&#10;        padding-top: 150px; /* Ajustar padding superior */&#13;&#10;    }&#13;&#10;    main {&#13;&#10;         padding-top: 120px; /* Ajustar padding superior para header colapsado */&#13;&#10;    }&#13;&#10;&#13;&#10;    .content-section {&#13;&#10;        width: 95%;&#13;&#10;        padding: 2em;&#13;&#10;        margin: 2em auto;&#13;&#10;    }&#13;&#10;    .section-title {&#13;&#10;        font-size: 1.8em;&#13;&#10;    }&#13;&#10;&#13;&#10;    /* Home specific */&#13;&#10;    .hero-section {&#13;&#10;        padding: 3em 1.5em;&#13;&#10;    }&#13;&#10;    .hero-section .section-title {&#13;&#10;        font-size: 2.2em;&#13;&#10;    }&#13;&#10;    .hero-actions {&#13;&#10;        flex-direction: column;&#13;&#10;        gap: 15px;&#13;&#10;    }&#13;&#10;    .hero-actions .btn {&#13;&#10;        width: 100%;&#13;&#10;    }&#13;&#10;    .service-grid {&#13;&#10;        grid-template-columns: 1fr; /* Una columna en móvil */&#13;&#10;    }&#13;&#10;&#13;&#10;    /* Eventos */&#13;&#10;    .event-controls {&#13;&#10;        flex-direction: column;&#13;&#10;        gap: 10px;&#13;&#10;    }&#13;&#10;    .event-controls .btn-toggle, .event-controls .filter-input, .event-controls .btn-filter {&#13;&#10;        width: 100%;&#13;&#10;        box-sizing: border-box;&#13;&#10;    }&#13;&#10;&#13;&#10;    table.calendar th, table.calendar td {&#13;&#10;        font-size: 0.8em;&#13;&#10;        height: 70px;&#13;&#10;        padding: 8px 5px;&#13;&#10;    }&#13;&#10;&#13;&#10;    /* Foro */&#13;&#10;    .chat-message {&#13;&#10;        max-width: 95%;&#13;&#10;    }&#13;&#10;&#13;&#10;    /* Servicios (Flor) */&#13;&#10;    .flor {&#13;&#10;        transform: scale(0.8);&#13;&#10;        margin: 0 auto 1em;&#13;&#10;        height: 300px;&#13;&#10;        width: 300px;&#13;&#10;    }&#13;&#10;    .petalo {&#13;&#10;        width: 60px;&#13;&#10;        height: 60px;&#13;&#10;        font-size: 0.9em;&#13;&#10;    }&#13;&#10;    .flor-center-btn {&#13;&#10;        width: 100px;&#13;&#10;        height: 100px;&#13;&#10;        font-size: 1.1em;&#13;&#10;    }&#13;&#10;    .petalo .info-general {&#13;&#10;        font-size: 0.75em;&#13;&#10;        bottom: -25px;&#13;&#10;    }&#13;&#10;    /* Reajustar posiciones de pétalos para flor más pequeña */&#13;&#10;    .petalo:nth-child(2) { top: 20px; left: calc(50% - 30px); transform: translateX(-50%) translateY(-60px); }&#13;&#10;    .petalo:nth-child(3) { top: 60px; right: 0px; transform: translateX(60px) translateY(-50%); }&#13;&#10;    .petalo:nth-child(4) { bottom: 60px; right: 0px; transform: translateX(60px) translateY(50%); }&#13;&#10;    .petalo:nth-child(5) { bottom: 20px; left: calc(50% - 30px); transform: translateX(-50%) translateY(60px); }&#13;&#10;    .petalo:nth-child(6) { bottom: 60px; left: 0px; transform: translateX(-60px) translateY(50%); }&#13;&#10;    .petalo:nth-child(7) { top: 60px; left: 0px; transform: translateX(-60px) translateY(-50%); }&#13;&#10;&#13;&#10;&#13;&#10;    /* Catálogo */&#13;&#10;    .carousel-item {&#13;&#10;        min-width: 150px;&#13;&#10;        padding: 10px;&#13;&#10;    }&#13;&#10;    .carousel-item img {&#13;&#10;        height: 120px;&#13;&#10;    }&#13;&#10;    .carousel-nav-btn {&#13;&#10;        padding: 10px 5px;&#13;&#10;        font-size: 1.2em;&#13;&#10;    }&#13;&#10;&#13;&#10;    /* Modal de fotos */&#13;&#10;    .photo-modal-content {&#13;&#10;        padding: 20px;&#13;&#10;    }&#13;&#10;    .photo-modal-content .modal-title {&#13;&#10;        font-size: 1.5em;&#13;&#10;    }&#13;&#10;    .photo-modal-close {&#13;&#10;        font-size: 1.5em;&#13;&#10;    }&#13;&#10;&#13;&#10;    /* Formularios */&#13;&#10;    .add-form-section form {&#13;&#10;        max-width: 100%;&#13;&#10;    }&#13;&#10;&#13;&#10;    /* Mis Registros */&#13;&#10;    .user-record-grid {&#13;&#10;        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); /* Más pequeñas en móvil */&#13;&#10;    }&#13;&#10;    .user-record-grid .carousel-item {&#13;&#10;        min-width: unset; /* Permitir que la grid controle el tamaño */&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/detalle.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/detalle.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;es&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Detalle Bitácora&lt;/title&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;nav class=&quot;navbar navbar-expand-lg navbar-dark bg-success&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;a class=&quot;navbar-brand&quot; href=&quot;/dashboard&quot;&gt;&#10;                &lt;i class=&quot;fas fa-leaf&quot;&gt;&lt;/i&gt; PlantApp&#10;            &lt;/a&gt;&#10;            &lt;div class=&quot;navbar-nav ms-auto&quot;&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/plantas&quot;&gt;Mis Plantas&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link active&quot; href=&quot;/bitacora&quot;&gt;Bitácora&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/recordatorios&quot;&gt;Recordatorios&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/nav&gt;&#10;&#10;    &lt;div class=&quot;container mt-4&quot;&gt;&#10;        &lt;div class=&quot;row justify-content-center&quot;&gt;&#10;            &lt;div class=&quot;col-md-10&quot;&gt;&#10;                &lt;div class=&quot;card&quot;&gt;&#10;                    &lt;div th:if=&quot;${bitacora.foto}&quot; class=&quot;text-center&quot;&gt;&#10;                        &lt;img th:src=&quot;${bitacora.foto}&quot; class=&quot;card-img-top&quot; alt=&quot;Foto de cuidado&quot; &#10;                             style=&quot;max-height: 400px; object-fit: cover;&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    &#10;                    &lt;div class=&quot;card-header&quot;&gt;&#10;                        &lt;div class=&quot;d-flex justify-content-between align-items-center&quot;&gt;&#10;                            &lt;h3&gt;&lt;i class=&quot;fas fa-book-open&quot;&gt;&lt;/i&gt; Detalle de Entrada&lt;/h3&gt;&#10;                            &lt;div&gt;&#10;                                &lt;span th:if=&quot;${bitacora.tipoCuidado}&quot; &#10;                                      class=&quot;badge bg-primary fs-6&quot; th:text=&quot;${bitacora.tipoCuidado}&quot;&gt;&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &#10;                    &lt;div class=&quot;card-body&quot;&gt;&#10;                        &lt;div class=&quot;row&quot;&gt;&#10;                            &lt;div class=&quot;col-md-8&quot;&gt;&#10;                                &lt;h4 class=&quot;mb-3&quot;&gt;Descripción&lt;/h4&gt;&#10;                                &lt;p class=&quot;lead&quot; th:text=&quot;${bitacora.descripcion}&quot;&gt;&lt;/p&gt;&#10;                                &#10;                                &lt;div th:if=&quot;${bitacora.observaciones}&quot; class=&quot;mt-4&quot;&gt;&#10;                                    &lt;h5&gt;&lt;i class=&quot;fas fa-eye&quot;&gt;&lt;/i&gt; Observaciones&lt;/h5&gt;&#10;                                    &lt;p th:text=&quot;${bitacora.observaciones}&quot;&gt;&lt;/p&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &#10;                            &lt;div class=&quot;col-md-4&quot;&gt;&#10;                                &lt;div class=&quot;card bg-light&quot;&gt;&#10;                                    &lt;div class=&quot;card-body&quot;&gt;&#10;                                        &lt;h6 class=&quot;card-title&quot;&gt;&lt;i class=&quot;fas fa-info-circle&quot;&gt;&lt;/i&gt; Información&lt;/h6&gt;&#10;                                        &#10;                                        &lt;div class=&quot;mb-2&quot;&gt;&#10;                                            &lt;strong&gt;Fecha:&lt;/strong&gt;&lt;br&gt;&#10;                                            &lt;span th:text=&quot;${#temporals.format(bitacora.fecha, 'dd/MM/yyyy HH:mm')}&quot;&gt;&lt;/span&gt;&#10;                                        &lt;/div&gt;&#10;                                        &#10;                                        &lt;div class=&quot;mb-2&quot;&gt;&#10;                                            &lt;strong&gt;Planta ID:&lt;/strong&gt;&lt;br&gt;&#10;                                            &lt;span th:text=&quot;${bitacora.plantaId}&quot;&gt;&lt;/span&gt;&#10;                                        &lt;/div&gt;&#10;                                        &#10;                                        &lt;div th:if=&quot;${bitacora.tipoCuidado}&quot; class=&quot;mb-2&quot;&gt;&#10;                                            &lt;strong&gt;Tipo de Cuidado:&lt;/strong&gt;&lt;br&gt;&#10;                                            &lt;span th:text=&quot;${bitacora.tipoCuidado}&quot;&gt;&lt;/span&gt;&#10;                                        &lt;/div&gt;&#10;                                        &#10;                                        &lt;div class=&quot;mb-2&quot;&gt;&#10;                                            &lt;strong&gt;ID Bitácora:&lt;/strong&gt;&lt;br&gt;&#10;                                            &lt;small class=&quot;text-muted&quot; th:text=&quot;${bitacora.id}&quot;&gt;&lt;/small&gt;&#10;                                        &lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &#10;                    &lt;div class=&quot;card-footer&quot;&gt;&#10;                        &lt;div class=&quot;d-flex justify-content-between&quot;&gt;&#10;                            &lt;div&gt;&#10;                                &lt;a th:href=&quot;@{/bitacora/planta/{plantaId}(plantaId=${bitacora.plantaId})}&quot; &#10;                                   class=&quot;btn btn-outline-primary&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-arrow-left&quot;&gt;&lt;/i&gt; Volver a la Planta&#10;                                &lt;/a&gt;&#10;                                &lt;a href=&quot;/bitacora&quot; class=&quot;btn btn-outline-secondary&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-list&quot;&gt;&lt;/i&gt; Ver Todas&#10;                                &lt;/a&gt;&#10;                            &lt;/div&gt;&#10;                            &#10;                            &lt;div&gt;&#10;                                &lt;a th:href=&quot;@{/bitacora/{id}/editar(id=${bitacora.id})}&quot; &#10;                                   class=&quot;btn btn-warning&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-edit&quot;&gt;&lt;/i&gt; Editar&#10;                                &lt;/a&gt;&#10;                                &lt;form th:action=&quot;@{/bitacora/{id}/eliminar(id=${bitacora.id})}&quot; &#10;                                      method=&quot;post&quot; class=&quot;d-inline&quot;&gt;&#10;                                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger&quot; &#10;                                            onclick=&quot;return confirm('¿Estás seguro de que quieres eliminar esta entrada?')&quot;&gt;&#10;                                        &lt;i class=&quot;fas fa-trash&quot;&gt;&lt;/i&gt; Eliminar&#10;                                    &lt;/button&gt;&#10;                                &lt;/form&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/editar.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/editar.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;es&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Editar Bitácora&lt;/title&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;nav class=&quot;navbar navbar-expand-lg navbar-dark bg-success&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;a class=&quot;navbar-brand&quot; href=&quot;/dashboard&quot;&gt;&#10;                &lt;i class=&quot;fas fa-leaf&quot;&gt;&lt;/i&gt; PlantApp&#10;            &lt;/a&gt;&#10;            &lt;div class=&quot;navbar-nav ms-auto&quot;&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/plantas&quot;&gt;Mis Plantas&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link active&quot; href=&quot;/bitacora&quot;&gt;Bitácora&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/recordatorios&quot;&gt;Recordatorios&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/nav&gt;&#10;&#10;    &lt;div class=&quot;container mt-4&quot;&gt;&#10;        &lt;div class=&quot;row justify-content-center&quot;&gt;&#10;            &lt;div class=&quot;col-md-8&quot;&gt;&#10;                &lt;div class=&quot;card&quot;&gt;&#10;                    &lt;div class=&quot;card-header&quot;&gt;&#10;                        &lt;h3&gt;&lt;i class=&quot;fas fa-edit&quot;&gt;&lt;/i&gt; Editar Entrada de Bitácora&lt;/h3&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;card-body&quot;&gt;&#10;                        &lt;!-- Mensajes de error --&gt;&#10;                        &lt;div th:if=&quot;${error}&quot; class=&quot;alert alert-danger&quot; role=&quot;alert&quot;&gt;&#10;                            &lt;i class=&quot;fas fa-exclamation-triangle&quot;&gt;&lt;/i&gt; &lt;span th:text=&quot;${error}&quot;&gt;&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;form th:action=&quot;@{/bitacora/{id}/editar(id=${bitacora.id})}&quot; method=&quot;post&quot;&gt;&#10;                            &lt;div class=&quot;mb-3&quot;&gt;&#10;                                &lt;label for=&quot;plantaId&quot; class=&quot;form-label&quot;&gt;Planta&lt;/label&gt;&#10;                                &lt;input type=&quot;text&quot; id=&quot;plantaId&quot; class=&quot;form-control&quot; th:value=&quot;${bitacora.plantaId}&quot; disabled&gt;&#10;                                &lt;div class=&quot;form-text&quot;&gt;La planta no se puede cambiar después de crear la entrada&lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div class=&quot;mb-3&quot;&gt;&#10;                                &lt;label for=&quot;tipoCuidado&quot; class=&quot;form-label&quot;&gt;Tipo de Cuidado&lt;/label&gt;&#10;                                &lt;select id=&quot;tipoCuidado&quot; name=&quot;tipoCuidado&quot; class=&quot;form-select&quot;&gt;&#10;                                    &lt;option value=&quot;&quot;&gt;Selecciona el tipo&lt;/option&gt;&#10;                                    &lt;option value=&quot;riego&quot; th:selected=&quot;${bitacora.tipoCuidado == 'riego'}&quot;&gt; Riego&lt;/option&gt;&#10;                                    &lt;option value=&quot;fertilizacion&quot; th:selected=&quot;${bitacora.tipoCuidado == 'fertilizacion'}&quot;&gt; Fertilización&lt;/option&gt;&#10;                                    &lt;option value=&quot;poda&quot; th:selected=&quot;${bitacora.tipoCuidado == 'poda'}&quot;&gt;✂️ Poda&lt;/option&gt;&#10;                                    &lt;option value=&quot;trasplante&quot; th:selected=&quot;${bitacora.tipoCuidado == 'trasplante'}&quot;&gt; Trasplante&lt;/option&gt;&#10;                                    &lt;option value=&quot;observacion&quot; th:selected=&quot;${bitacora.tipoCuidado == 'observacion'}&quot;&gt;️ Observación&lt;/option&gt;&#10;                                    &lt;option value=&quot;tratamiento&quot; th:selected=&quot;${bitacora.tipoCuidado == 'tratamiento'}&quot;&gt; Tratamiento&lt;/option&gt;&#10;                                    &lt;option value=&quot;limpieza&quot; th:selected=&quot;${bitacora.tipoCuidado == 'limpieza'}&quot;&gt; Limpieza&lt;/option&gt;&#10;                                &lt;/select&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div class=&quot;mb-3&quot;&gt;&#10;                                &lt;label for=&quot;descripcion&quot; class=&quot;form-label&quot;&gt;Descripción &lt;span class=&quot;text-danger&quot;&gt;*&lt;/span&gt;&lt;/label&gt;&#10;                                &lt;textarea id=&quot;descripcion&quot; name=&quot;descripcion&quot; class=&quot;form-control&quot; rows=&quot;4&quot; &#10;                                         th:text=&quot;${bitacora.descripcion}&quot; required&gt;&lt;/textarea&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div class=&quot;mb-3&quot;&gt;&#10;                                &lt;label for=&quot;observaciones&quot; class=&quot;form-label&quot;&gt;Observaciones Adicionales&lt;/label&gt;&#10;                                &lt;textarea id=&quot;observaciones&quot; name=&quot;observaciones&quot; class=&quot;form-control&quot; rows=&quot;3&quot; &#10;                                         th:text=&quot;${bitacora.observaciones}&quot;&gt;&lt;/textarea&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div class=&quot;mb-3&quot;&gt;&#10;                                &lt;label for=&quot;foto&quot; class=&quot;form-label&quot;&gt;Foto (URL)&lt;/label&gt;&#10;                                &lt;input type=&quot;url&quot; id=&quot;foto&quot; name=&quot;foto&quot; class=&quot;form-control&quot; th:value=&quot;${bitacora.foto}&quot;&gt;&#10;                                &lt;div class=&quot;form-text&quot;&gt;URL de una foto del cuidado realizado&lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div class=&quot;mb-3&quot;&gt;&#10;                                &lt;label class=&quot;form-label&quot;&gt;Información de la Entrada&lt;/label&gt;&#10;                                &lt;div class=&quot;card bg-light&quot;&gt;&#10;                                    &lt;div class=&quot;card-body&quot;&gt;&#10;                                        &lt;p class=&quot;mb-1&quot;&gt;&lt;strong&gt;Fecha de creación:&lt;/strong&gt; &#10;                                           &lt;span th:text=&quot;${#temporals.format(bitacora.fecha, 'dd/MM/yyyy HH:mm')}&quot;&gt;&lt;/span&gt;&lt;/p&gt;&#10;                                        &lt;p class=&quot;mb-0&quot;&gt;&lt;strong&gt;ID:&lt;/strong&gt; &lt;span th:text=&quot;${bitacora.id}&quot;&gt;&lt;/span&gt;&lt;/p&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div class=&quot;d-grid gap-2 d-md-flex justify-content-md-end&quot;&gt;&#10;                                &lt;a th:href=&quot;@{/bitacora/{id}(id=${bitacora.id})}&quot; class=&quot;btn btn-secondary me-md-2&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-arrow-left&quot;&gt;&lt;/i&gt; Cancelar&#10;                                &lt;/a&gt;&#10;                                &lt;button type=&quot;submit&quot; class=&quot;btn btn-success&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-save&quot;&gt;&lt;/i&gt; Guardar Cambios&#10;                                &lt;/button&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/form&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/exportar.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/exportar.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;es&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Exportar Bitácora&lt;/title&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &lt;style&gt;&#10;        @media print {&#10;            .no-print { display: none !important; }&#10;            .navbar { display: none !important; }&#10;            body { font-size: 12px; }&#10;        }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;nav class=&quot;navbar navbar-expand-lg navbar-dark bg-success no-print&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;a class=&quot;navbar-brand&quot; href=&quot;/dashboard&quot;&gt;&#10;                &lt;i class=&quot;fas fa-leaf&quot;&gt;&lt;/i&gt; PlantApp&#10;            &lt;/a&gt;&#10;            &lt;div class=&quot;navbar-nav ms-auto&quot;&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/plantas&quot;&gt;Mis Plantas&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link active&quot; href=&quot;/bitacora&quot;&gt;Bitácora&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/recordatorios&quot;&gt;Recordatorios&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/nav&gt;&#10;&#10;    &lt;div class=&quot;container mt-4&quot;&gt;&#10;        &lt;!-- Controles de exportación --&gt;&#10;        &lt;div class=&quot;row no-print mb-4&quot;&gt;&#10;            &lt;div class=&quot;col-12&quot;&gt;&#10;                &lt;div class=&quot;d-flex justify-content-between align-items-center&quot;&gt;&#10;                    &lt;h1&gt;&lt;i class=&quot;fas fa-download&quot;&gt;&lt;/i&gt; Exportar Bitácora&lt;/h1&gt;&#10;                    &lt;div&gt;&#10;                        &lt;button onclick=&quot;window.print()&quot; class=&quot;btn btn-primary me-2&quot;&gt;&#10;                            &lt;i class=&quot;fas fa-print&quot;&gt;&lt;/i&gt; Imprimir&#10;                        &lt;/button&gt;&#10;                        &lt;a th:href=&quot;@{/bitacora/planta/{plantaId}(plantaId=${plantaId})}&quot; class=&quot;btn btn-secondary&quot;&gt;&#10;                            &lt;i class=&quot;fas fa-arrow-left&quot;&gt;&lt;/i&gt; Volver&#10;                        &lt;/a&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Encabezado del reporte --&gt;&#10;        &lt;div class=&quot;text-center mb-4&quot;&gt;&#10;            &lt;h2&gt;&lt;i class=&quot;fas fa-leaf&quot;&gt;&lt;/i&gt; PlantApp - Reporte de Bitácora&lt;/h2&gt;&#10;            &lt;h4&gt;Planta ID: &lt;span th:text=&quot;${plantaId}&quot;&gt;&lt;/span&gt;&lt;/h4&gt;&#10;            &lt;p class=&quot;text-muted&quot;&gt;&#10;                Generado el: &lt;span th:text=&quot;${#temporals.format(fechaExportacion, 'dd/MM/yyyy HH:mm')}&quot;&gt;&lt;/span&gt;&#10;            &lt;/p&gt;&#10;            &lt;hr&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Resumen --&gt;&#10;        &lt;div class=&quot;row mb-4&quot;&gt;&#10;            &lt;div class=&quot;col-12&quot;&gt;&#10;                &lt;div class=&quot;card&quot;&gt;&#10;                    &lt;div class=&quot;card-body&quot;&gt;&#10;                        &lt;h5 class=&quot;card-title&quot;&gt;&lt;i class=&quot;fas fa-chart-bar&quot;&gt;&lt;/i&gt; Resumen&lt;/h5&gt;&#10;                        &lt;div class=&quot;row&quot;&gt;&#10;                            &lt;div class=&quot;col-md-4&quot;&gt;&#10;                                &lt;strong&gt;Total de entradas:&lt;/strong&gt; &lt;span th:text=&quot;${#lists.size(bitacoras)}&quot;&gt;&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;col-md-4&quot;&gt;&#10;                                &lt;strong&gt;Primera entrada:&lt;/strong&gt; &#10;                                &lt;span th:if=&quot;${!#lists.isEmpty(bitacoras)}&quot; &#10;                                      th:text=&quot;${#temporals.format(bitacoras[#lists.size(bitacoras)-1].fecha, 'dd/MM/yyyy')}&quot;&gt;&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;col-md-4&quot;&gt;&#10;                                &lt;strong&gt;Última entrada:&lt;/strong&gt; &#10;                                &lt;span th:if=&quot;${!#lists.isEmpty(bitacoras)}&quot; &#10;                                      th:text=&quot;${#temporals.format(bitacoras[0].fecha, 'dd/MM/yyyy')}&quot;&gt;&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Bitácoras --&gt;&#10;        &lt;div th:if=&quot;${#lists.isEmpty(bitacoras)}&quot; class=&quot;text-center py-5&quot;&gt;&#10;            &lt;h4 class=&quot;text-muted&quot;&gt;No hay entradas para exportar&lt;/h4&gt;&#10;            &lt;p class=&quot;text-muted&quot;&gt;Esta planta no tiene registros en la bitácora&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div th:if=&quot;${!#lists.isEmpty(bitacoras)}&quot;&gt;&#10;            &lt;h3 class=&quot;mb-4&quot;&gt;&lt;i class=&quot;fas fa-list-alt&quot;&gt;&lt;/i&gt; Registro de Cuidados&lt;/h3&gt;&#10;            &#10;            &lt;div class=&quot;table-responsive&quot;&gt;&#10;                &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&#10;                    &lt;thead class=&quot;table-dark&quot;&gt;&#10;                        &lt;tr&gt;&#10;                            &lt;th&gt;Fecha&lt;/th&gt;&#10;                            &lt;th&gt;Tipo de Cuidado&lt;/th&gt;&#10;                            &lt;th&gt;Descripción&lt;/th&gt;&#10;                            &lt;th&gt;Observaciones&lt;/th&gt;&#10;                            &lt;th class=&quot;no-print&quot;&gt;Foto&lt;/th&gt;&#10;                        &lt;/tr&gt;&#10;                    &lt;/thead&gt;&#10;                    &lt;tbody&gt;&#10;                        &lt;tr th:each=&quot;bitacora : ${bitacoras}&quot;&gt;&#10;                            &lt;td th:text=&quot;${#temporals.format(bitacora.fecha, 'dd/MM/yyyy HH:mm')}&quot;&gt;&lt;/td&gt;&#10;                            &lt;td&gt;&#10;                                &lt;span th:if=&quot;${bitacora.tipoCuidado}&quot; &#10;                                      class=&quot;badge bg-secondary&quot; th:text=&quot;${bitacora.tipoCuidado}&quot;&gt;&lt;/span&gt;&#10;                                &lt;span th:unless=&quot;${bitacora.tipoCuidado}&quot; class=&quot;text-muted&quot;&gt;-&lt;/span&gt;&#10;                            &lt;/td&gt;&#10;                            &lt;td th:text=&quot;${bitacora.descripcion}&quot;&gt;&lt;/td&gt;&#10;                            &lt;td th:text=&quot;${bitacora.observaciones ?: '-'}&quot;&gt;&lt;/td&gt;&#10;                            &lt;td class=&quot;no-print&quot;&gt;&#10;                                &lt;span th:if=&quot;${bitacora.foto}&quot; class=&quot;text-success&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-check&quot;&gt;&lt;/i&gt; Sí&#10;                                &lt;/span&gt;&#10;                                &lt;span th:unless=&quot;${bitacora.foto}&quot; class=&quot;text-muted&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-times&quot;&gt;&lt;/i&gt; No&#10;                                &lt;/span&gt;&#10;                            &lt;/td&gt;&#10;                        &lt;/tr&gt;&#10;                    &lt;/tbody&gt;&#10;                &lt;/table&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Pie del reporte --&gt;&#10;        &lt;div class=&quot;mt-5 pt-4 border-top&quot;&gt;&#10;            &lt;div class=&quot;row&quot;&gt;&#10;                &lt;div class=&quot;col-md-6&quot;&gt;&#10;                    &lt;p class=&quot;small text-muted&quot;&gt;&#10;                        &lt;strong&gt;PlantApp - Sistema de Gestión de Plantas&lt;/strong&gt;&lt;br&gt;&#10;                        Reporte generado automáticamente&#10;                    &lt;/p&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;col-md-6 text-end&quot;&gt;&#10;                    &lt;p class=&quot;small text-muted&quot;&gt;&#10;                        Total de páginas: &lt;span id=&quot;totalPages&quot;&gt;1&lt;/span&gt;&lt;br&gt;&#10;                        Fecha de exportación: &lt;span th:text=&quot;${#temporals.format(fechaExportacion, 'dd/MM/yyyy HH:mm')}&quot;&gt;&lt;/span&gt;&#10;                    &lt;/p&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Controles adicionales (solo en pantalla) --&gt;&#10;        &lt;div class=&quot;no-print mt-4 text-center&quot;&gt;&#10;            &lt;div class=&quot;alert alert-info&quot;&gt;&#10;                &lt;h6&gt;&lt;i class=&quot;fas fa-info-circle&quot;&gt;&lt;/i&gt; Instrucciones&lt;/h6&gt;&#10;                &lt;p class=&quot;mb-0&quot;&gt;&#10;                    Haz clic en &quot;Imprimir&quot; para generar un PDF o impresión física del reporte.&#10;                    También puedes usar Ctrl+P en tu navegador.&#10;                &lt;/p&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/historial.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/historial.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;es&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Historial de Cuidados&lt;/title&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;nav class=&quot;navbar navbar-expand-lg navbar-dark bg-success&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;a class=&quot;navbar-brand&quot; href=&quot;/dashboard&quot;&gt;&#10;                &lt;i class=&quot;fas fa-leaf&quot;&gt;&lt;/i&gt; PlantApp&#10;            &lt;/a&gt;&#10;            &lt;div class=&quot;navbar-nav ms-auto&quot;&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/plantas&quot;&gt;Mis Plantas&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link active&quot; href=&quot;/bitacora&quot;&gt;Bitácora&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/recordatorios&quot;&gt;Recordatorios&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/nav&gt;&#10;&#10;    &lt;div class=&quot;container mt-4&quot;&gt;&#10;        &lt;div class=&quot;row&quot;&gt;&#10;            &lt;div class=&quot;col-12&quot;&gt;&#10;                &lt;div class=&quot;d-flex justify-content-between align-items-center mb-4&quot;&gt;&#10;                    &lt;h1&gt;&lt;i class=&quot;fas fa-history&quot;&gt;&lt;/i&gt; Historial de Cuidados&lt;/h1&gt;&#10;                    &lt;a th:href=&quot;@{/bitacora/planta/{plantaId}(plantaId=${plantaId})}&quot; class=&quot;btn btn-outline-secondary&quot;&gt;&#10;                        &lt;i class=&quot;fas fa-arrow-left&quot;&gt;&lt;/i&gt; Volver&#10;                    &lt;/a&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Estadísticas --&gt;&#10;                &lt;div class=&quot;row mb-4&quot;&gt;&#10;                    &lt;div class=&quot;col-md-4&quot;&gt;&#10;                        &lt;div class=&quot;card text-white bg-primary&quot;&gt;&#10;                            &lt;div class=&quot;card-body&quot;&gt;&#10;                                &lt;div class=&quot;d-flex justify-content-between&quot;&gt;&#10;                                    &lt;div&gt;&#10;                                        &lt;h4 class=&quot;card-title&quot; th:text=&quot;${totalCuidados}&quot;&gt;0&lt;/h4&gt;&#10;                                        &lt;p class=&quot;card-text&quot;&gt;Total de Cuidados&lt;/p&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;align-self-center&quot;&gt;&#10;                                        &lt;i class=&quot;fas fa-chart-line fa-2x&quot;&gt;&lt;/i&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;col-md-4&quot;&gt;&#10;                        &lt;div class=&quot;card text-white bg-success&quot;&gt;&#10;                            &lt;div class=&quot;card-body&quot;&gt;&#10;                                &lt;div class=&quot;d-flex justify-content-between&quot;&gt;&#10;                                    &lt;div&gt;&#10;                                        &lt;h4 class=&quot;card-title&quot; th:text=&quot;${#lists.size(bitacoras)}&quot;&gt;0&lt;/h4&gt;&#10;                                        &lt;p class=&quot;card-text&quot;&gt;Entradas Recientes&lt;/p&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;align-self-center&quot;&gt;&#10;                                        &lt;i class=&quot;fas fa-clock fa-2x&quot;&gt;&lt;/i&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;col-md-4&quot;&gt;&#10;                        &lt;div class=&quot;card text-white bg-info&quot;&gt;&#10;                            &lt;div class=&quot;card-body&quot;&gt;&#10;                                &lt;div class=&quot;d-flex justify-content-between&quot;&gt;&#10;                                    &lt;div&gt;&#10;                                        &lt;h4 class=&quot;card-title&quot;&gt;Planta&lt;/h4&gt;&#10;                                        &lt;p class=&quot;card-text&quot; th:text=&quot;${plantaId}&quot;&gt;ID&lt;/p&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;align-self-center&quot;&gt;&#10;                                        &lt;i class=&quot;fas fa-seedling fa-2x&quot;&gt;&lt;/i&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Controles de límite --&gt;&#10;                &lt;div class=&quot;card mb-4&quot;&gt;&#10;                    &lt;div class=&quot;card-body&quot;&gt;&#10;                        &lt;form method=&quot;get&quot; class=&quot;row g-3 align-items-end&quot;&gt;&#10;                            &lt;div class=&quot;col-md-6&quot;&gt;&#10;                                &lt;label for=&quot;limite&quot; class=&quot;form-label&quot;&gt;Número de entradas a mostrar&lt;/label&gt;&#10;                                &lt;select id=&quot;limite&quot; name=&quot;limite&quot; class=&quot;form-select&quot;&gt;&#10;                                    &lt;option value=&quot;5&quot; th:selected=&quot;${limite == 5}&quot;&gt;5 más recientes&lt;/option&gt;&#10;                                    &lt;option value=&quot;10&quot; th:selected=&quot;${limite == 10}&quot;&gt;10 más recientes&lt;/option&gt;&#10;                                    &lt;option value=&quot;20&quot; th:selected=&quot;${limite == 20}&quot;&gt;20 más recientes&lt;/option&gt;&#10;                                    &lt;option value=&quot;50&quot; th:selected=&quot;${limite == 50}&quot;&gt;50 más recientes&lt;/option&gt;&#10;                                &lt;/select&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;col-md-6&quot;&gt;&#10;                                &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-sync&quot;&gt;&lt;/i&gt; Actualizar&#10;                                &lt;/button&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/form&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Historial --&gt;&#10;                &lt;div th:if=&quot;${#lists.isEmpty(bitacoras)}&quot; class=&quot;text-center py-5&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-history fa-3x text-muted mb-3&quot;&gt;&lt;/i&gt;&#10;                    &lt;h4 class=&quot;text-muted&quot;&gt;No hay historial para esta planta&lt;/h4&gt;&#10;                    &lt;p class=&quot;text-muted&quot;&gt;Las entradas aparecerán aquí conforme registres cuidados&lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div th:if=&quot;${!#lists.isEmpty(bitacoras)}&quot; class=&quot;row&quot;&gt;&#10;                    &lt;div th:each=&quot;bitacora : ${bitacoras}&quot; class=&quot;col-12 mb-3&quot;&gt;&#10;                        &lt;div class=&quot;card border-left-primary&quot;&gt;&#10;                            &lt;div class=&quot;card-body&quot;&gt;&#10;                                &lt;div class=&quot;row&quot;&gt;&#10;                                    &lt;div class=&quot;col-md-8&quot;&gt;&#10;                                        &lt;div class=&quot;d-flex align-items-center mb-2&quot;&gt;&#10;                                            &lt;span th:if=&quot;${bitacora.tipoCuidado}&quot; &#10;                                                  class=&quot;badge bg-secondary me-2&quot; th:text=&quot;${bitacora.tipoCuidado}&quot;&gt;&lt;/span&gt;&#10;                                            &lt;small class=&quot;text-muted&quot; th:text=&quot;${#temporals.format(bitacora.fecha, 'dd/MM/yyyy HH:mm')}&quot;&gt;&lt;/small&gt;&#10;                                        &lt;/div&gt;&#10;                                        &lt;h6 class=&quot;card-title&quot; th:text=&quot;${bitacora.descripcion}&quot;&gt;&lt;/h6&gt;&#10;                                        &lt;p th:if=&quot;${bitacora.observaciones}&quot; class=&quot;card-text text-muted&quot;&gt;&#10;                                            &lt;small th:text=&quot;${bitacora.observaciones}&quot;&gt;&lt;/small&gt;&#10;                                        &lt;/p&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;col-md-4 text-end&quot;&gt;&#10;                                        &lt;div class=&quot;btn-group btn-group-sm&quot;&gt;&#10;                                            &lt;a th:href=&quot;@{/bitacora/{id}(id=${bitacora.id})}&quot; &#10;                                               class=&quot;btn btn-outline-primary&quot; title=&quot;Ver detalle&quot;&gt;&#10;                                                &lt;i class=&quot;fas fa-eye&quot;&gt;&lt;/i&gt;&#10;                                            &lt;/a&gt;&#10;                                            &lt;a th:href=&quot;@{/bitacora/{id}/editar(id=${bitacora.id})}&quot; &#10;                                               class=&quot;btn btn-outline-warning&quot; title=&quot;Editar&quot;&gt;&#10;                                                &lt;i class=&quot;fas fa-edit&quot;&gt;&lt;/i&gt;&#10;                                            &lt;/a&gt;&#10;                                        &lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Acciones adicionales --&gt;&#10;                &lt;div class=&quot;text-center mt-4&quot;&gt;&#10;                    &lt;a th:href=&quot;@{/bitacora/nueva(plantaId=${plantaId})}&quot; class=&quot;btn btn-success me-2&quot;&gt;&#10;                        &lt;i class=&quot;fas fa-plus&quot;&gt;&lt;/i&gt; Nueva Entrada&#10;                    &lt;/a&gt;&#10;                    &lt;a th:href=&quot;@{/bitacora/planta/{plantaId}/exportar(plantaId=${plantaId})}&quot; class=&quot;btn btn-info&quot;&gt;&#10;                        &lt;i class=&quot;fas fa-download&quot;&gt;&lt;/i&gt; Exportar Historial&#10;                    &lt;/a&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/lista.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/lista.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;es&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Bitácora de Plantas&lt;/title&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;nav class=&quot;navbar navbar-expand-lg navbar-dark bg-success&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;a class=&quot;navbar-brand&quot; href=&quot;/dashboard&quot;&gt;&#10;                &lt;i class=&quot;fas fa-leaf&quot;&gt;&lt;/i&gt; PlantApp&#10;            &lt;/a&gt;&#10;            &lt;div class=&quot;navbar-nav ms-auto&quot;&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/plantas&quot;&gt;Mis Plantas&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link active&quot; href=&quot;/bitacora&quot;&gt;Bitácora&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/recordatorios&quot;&gt;Recordatorios&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/nav&gt;&#10;&#10;    &lt;div class=&quot;container mt-4&quot;&gt;&#10;        &lt;div class=&quot;row&quot;&gt;&#10;            &lt;div class=&quot;col-12&quot;&gt;&#10;                &lt;div class=&quot;d-flex justify-content-between align-items-center mb-4&quot;&gt;&#10;                    &lt;h1&gt;&lt;i class=&quot;fas fa-book&quot;&gt;&lt;/i&gt; Bitácora de Cuidados&lt;/h1&gt;&#10;                    &lt;a href=&quot;/bitacora/nueva&quot; class=&quot;btn btn-success&quot;&gt;&#10;                        &lt;i class=&quot;fas fa-plus&quot;&gt;&lt;/i&gt; Nueva Entrada&#10;                    &lt;/a&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Mensajes de éxito o error --&gt;&#10;                &lt;div th:if=&quot;${mensaje}&quot; class=&quot;alert alert-success alert-dismissible fade show&quot; role=&quot;alert&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-check-circle&quot;&gt;&lt;/i&gt; &lt;span th:text=&quot;${mensaje}&quot;&gt;&lt;/span&gt;&#10;                    &lt;button type=&quot;button&quot; class=&quot;btn-close&quot; data-bs-dismiss=&quot;alert&quot;&gt;&lt;/button&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div th:if=&quot;${error}&quot; class=&quot;alert alert-danger alert-dismissible fade show&quot; role=&quot;alert&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-exclamation-triangle&quot;&gt;&lt;/i&gt; &lt;span th:text=&quot;${error}&quot;&gt;&lt;/span&gt;&#10;                    &lt;button type=&quot;button&quot; class=&quot;btn-close&quot; data-bs-dismiss=&quot;alert&quot;&gt;&lt;/button&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Filtros --&gt;&#10;                &lt;div class=&quot;card mb-4&quot;&gt;&#10;                    &lt;div class=&quot;card-body&quot;&gt;&#10;                        &lt;h5 class=&quot;card-title&quot;&gt;&lt;i class=&quot;fas fa-filter&quot;&gt;&lt;/i&gt; Filtros&lt;/h5&gt;&#10;                        &lt;form method=&quot;get&quot; class=&quot;row g-3&quot;&gt;&#10;                            &lt;div class=&quot;col-md-4&quot;&gt;&#10;                                &lt;label for=&quot;plantaId&quot; class=&quot;form-label&quot;&gt;Planta&lt;/label&gt;&#10;                                &lt;select id=&quot;plantaId&quot; name=&quot;plantaId&quot; class=&quot;form-select&quot;&gt;&#10;                                    &lt;option value=&quot;&quot;&gt;Todas las plantas&lt;/option&gt;&#10;                                    &lt;!-- Aquí se cargarían las plantas dinámicamente --&gt;&#10;                                &lt;/select&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;col-md-4&quot;&gt;&#10;                                &lt;label for=&quot;tipoCuidado&quot; class=&quot;form-label&quot;&gt;Tipo de Cuidado&lt;/label&gt;&#10;                                &lt;select id=&quot;tipoCuidado&quot; name=&quot;tipoCuidado&quot; class=&quot;form-select&quot;&gt;&#10;                                    &lt;option value=&quot;&quot;&gt;Todos los tipos&lt;/option&gt;&#10;                                    &lt;option value=&quot;riego&quot;&gt;Riego&lt;/option&gt;&#10;                                    &lt;option value=&quot;fertilizacion&quot;&gt;Fertilización&lt;/option&gt;&#10;                                    &lt;option value=&quot;poda&quot;&gt;Poda&lt;/option&gt;&#10;                                    &lt;option value=&quot;trasplante&quot;&gt;Trasplante&lt;/option&gt;&#10;                                    &lt;option value=&quot;observacion&quot;&gt;Observación&lt;/option&gt;&#10;                                &lt;/select&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;col-md-4 d-flex align-items-end&quot;&gt;&#10;                                &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-search&quot;&gt;&lt;/i&gt; Filtrar&#10;                                &lt;/button&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/form&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Lista de bitácoras --&gt;&#10;                &lt;div class=&quot;row&quot;&gt;&#10;                    &lt;div th:if=&quot;${#lists.isEmpty(bitacoras)}&quot; class=&quot;col-12&quot;&gt;&#10;                        &lt;div class=&quot;text-center py-5&quot;&gt;&#10;                            &lt;i class=&quot;fas fa-book-open fa-3x text-muted mb-3&quot;&gt;&lt;/i&gt;&#10;                            &lt;h4 class=&quot;text-muted&quot;&gt;No hay entradas en la bitácora&lt;/h4&gt;&#10;                            &lt;p class=&quot;text-muted&quot;&gt;Comienza registrando el cuidado de tus plantas&lt;/p&gt;&#10;                            &lt;a href=&quot;/bitacora/nueva&quot; class=&quot;btn btn-success&quot;&gt;&#10;                                &lt;i class=&quot;fas fa-plus&quot;&gt;&lt;/i&gt; Crear Primera Entrada&#10;                            &lt;/a&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &#10;                    &lt;div th:each=&quot;bitacora : ${bitacoras}&quot; class=&quot;col-md-6 col-lg-4 mb-4&quot;&gt;&#10;                        &lt;div class=&quot;card h-100&quot;&gt;&#10;                            &lt;div th:if=&quot;${bitacora.foto}&quot; class=&quot;card-img-top-container&quot; style=&quot;height: 200px; overflow: hidden;&quot;&gt;&#10;                                &lt;img th:src=&quot;${bitacora.foto}&quot; class=&quot;card-img-top&quot; alt=&quot;Foto de cuidado&quot; style=&quot;width: 100%; height: 100%; object-fit: cover;&quot;&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;card-body&quot;&gt;&#10;                                &lt;h5 class=&quot;card-title&quot;&gt;&#10;                                    &lt;span th:if=&quot;${bitacora.tipoCuidado}&quot; class=&quot;badge bg-secondary me-2&quot; th:text=&quot;${bitacora.tipoCuidado}&quot;&gt;&lt;/span&gt;&#10;                                    &lt;small class=&quot;text-muted&quot; th:text=&quot;${#temporals.format(bitacora.fecha, 'dd/MM/yyyy HH:mm')}&quot;&gt;&lt;/small&gt;&#10;                                &lt;/h5&gt;&#10;                                &lt;p class=&quot;card-text&quot; th:text=&quot;${bitacora.descripcion}&quot;&gt;&lt;/p&gt;&#10;                                &lt;p th:if=&quot;${bitacora.observaciones}&quot; class=&quot;card-text&quot;&gt;&#10;                                    &lt;small class=&quot;text-muted&quot;&gt;&lt;strong&gt;Observaciones:&lt;/strong&gt; &lt;span th:text=&quot;${bitacora.observaciones}&quot;&gt;&lt;/span&gt;&lt;/small&gt;&#10;                                &lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;card-footer&quot;&gt;&#10;                                &lt;div class=&quot;btn-group w-100&quot; role=&quot;group&quot;&gt;&#10;                                    &lt;a th:href=&quot;@{/bitacora/{id}(id=${bitacora.id})}&quot; class=&quot;btn btn-outline-primary btn-sm&quot;&gt;&#10;                                        &lt;i class=&quot;fas fa-eye&quot;&gt;&lt;/i&gt; Ver&#10;                                    &lt;/a&gt;&#10;                                    &lt;a th:href=&quot;@{/bitacora/{id}/editar(id=${bitacora.id})}&quot; class=&quot;btn btn-outline-warning btn-sm&quot;&gt;&#10;                                        &lt;i class=&quot;fas fa-edit&quot;&gt;&lt;/i&gt; Editar&#10;                                    &lt;/a&gt;&#10;                                    &lt;form th:action=&quot;@{/bitacora/{id}/eliminar(id=${bitacora.id})}&quot; method=&quot;post&quot; class=&quot;d-inline&quot;&gt;&#10;                                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-outline-danger btn-sm&quot; &#10;                                                onclick=&quot;return confirm('¿Estás seguro de que quieres eliminar esta entrada?')&quot;&gt;&#10;                                            &lt;i class=&quot;fas fa-trash&quot;&gt;&lt;/i&gt; Eliminar&#10;                                        &lt;/button&gt;&#10;                                    &lt;/form&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/nueva.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/nueva.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;es&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Nueva Entrada - Bitácora&lt;/title&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;nav class=&quot;navbar navbar-expand-lg navbar-dark bg-success&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;a class=&quot;navbar-brand&quot; href=&quot;/dashboard&quot;&gt;&#10;                &lt;i class=&quot;fas fa-leaf&quot;&gt;&lt;/i&gt; PlantApp&#10;            &lt;/a&gt;&#10;            &lt;div class=&quot;navbar-nav ms-auto&quot;&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/plantas&quot;&gt;Mis Plantas&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link active&quot; href=&quot;/bitacora&quot;&gt;Bitácora&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/recordatorios&quot;&gt;Recordatorios&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/nav&gt;&#10;&#10;    &lt;div class=&quot;container mt-4&quot;&gt;&#10;        &lt;div class=&quot;row justify-content-center&quot;&gt;&#10;            &lt;div class=&quot;col-md-8&quot;&gt;&#10;                &lt;div class=&quot;card&quot;&gt;&#10;                    &lt;div class=&quot;card-header&quot;&gt;&#10;                        &lt;h3&gt;&lt;i class=&quot;fas fa-plus&quot;&gt;&lt;/i&gt; Nueva Entrada en Bitácora&lt;/h3&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;card-body&quot;&gt;&#10;                        &lt;!-- Mensajes de error --&gt;&#10;                        &lt;div th:if=&quot;${error}&quot; class=&quot;alert alert-danger&quot; role=&quot;alert&quot;&gt;&#10;                            &lt;i class=&quot;fas fa-exclamation-triangle&quot;&gt;&lt;/i&gt; &lt;span th:text=&quot;${error}&quot;&gt;&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;form th:action=&quot;@{/bitacora/nueva}&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;&#10;                            &lt;div class=&quot;mb-3&quot;&gt;&#10;                                &lt;label for=&quot;plantaId&quot; class=&quot;form-label&quot;&gt;Planta &lt;span class=&quot;text-danger&quot;&gt;*&lt;/span&gt;&lt;/label&gt;&#10;                                &lt;select id=&quot;plantaId&quot; name=&quot;plantaId&quot; class=&quot;form-select&quot; required th:value=&quot;${plantaId}&quot;&gt;&#10;                                    &lt;option value=&quot;&quot;&gt;Selecciona una planta&lt;/option&gt;&#10;                                    &lt;!-- Aquí se cargarían las plantas dinámicamente --&gt;&#10;                                    &lt;option th:if=&quot;${plantaId}&quot; th:value=&quot;${plantaId}&quot; th:text=&quot;'Planta ID: ' + ${plantaId}&quot; selected&gt;&lt;/option&gt;&#10;                                &lt;/select&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div class=&quot;mb-3&quot;&gt;&#10;                                &lt;label for=&quot;tipoCuidado&quot; class=&quot;form-label&quot;&gt;Tipo de Cuidado&lt;/label&gt;&#10;                                &lt;select id=&quot;tipoCuidado&quot; name=&quot;tipoCuidado&quot; class=&quot;form-select&quot;&gt;&#10;                                    &lt;option value=&quot;&quot;&gt;Selecciona el tipo&lt;/option&gt;&#10;                                    &lt;option value=&quot;riego&quot;&gt; Riego&lt;/option&gt;&#10;                                    &lt;option value=&quot;fertilizacion&quot;&gt; Fertilización&lt;/option&gt;&#10;                                    &lt;option value=&quot;poda&quot;&gt;✂️ Poda&lt;/option&gt;&#10;                                    &lt;option value=&quot;trasplante&quot;&gt; Trasplante&lt;/option&gt;&#10;                                    &lt;option value=&quot;observacion&quot;&gt;️ Observación&lt;/option&gt;&#10;                                    &lt;option value=&quot;tratamiento&quot;&gt; Tratamiento&lt;/option&gt;&#10;                                    &lt;option value=&quot;limpieza&quot;&gt; Limpieza&lt;/option&gt;&#10;                                &lt;/select&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div class=&quot;mb-3&quot;&gt;&#10;                                &lt;label for=&quot;descripcion&quot; class=&quot;form-label&quot;&gt;Descripción &lt;span class=&quot;text-danger&quot;&gt;*&lt;/span&gt;&lt;/label&gt;&#10;                                &lt;textarea id=&quot;descripcion&quot; name=&quot;descripcion&quot; class=&quot;form-control&quot; rows=&quot;4&quot; &#10;                                         placeholder=&quot;Describe el cuidado realizado...&quot; required&gt;&lt;/textarea&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div class=&quot;mb-3&quot;&gt;&#10;                                &lt;label for=&quot;observaciones&quot; class=&quot;form-label&quot;&gt;Observaciones Adicionales&lt;/label&gt;&#10;                                &lt;textarea id=&quot;observaciones&quot; name=&quot;observaciones&quot; class=&quot;form-control&quot; rows=&quot;3&quot; &#10;                                         placeholder=&quot;Observaciones sobre el estado de la planta, cambios notados, etc.&quot;&gt;&lt;/textarea&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div class=&quot;mb-3&quot;&gt;&#10;                                &lt;label for=&quot;foto&quot; class=&quot;form-label&quot;&gt;Foto (URL)&lt;/label&gt;&#10;                                &lt;input type=&quot;url&quot; id=&quot;foto&quot; name=&quot;foto&quot; class=&quot;form-control&quot; &#10;                                       placeholder=&quot;https://ejemplo.com/imagen.jpg&quot;&gt;&#10;                                &lt;div class=&quot;form-text&quot;&gt;Opcional: URL de una foto del cuidado realizado&lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div class=&quot;d-grid gap-2 d-md-flex justify-content-md-end&quot;&gt;&#10;                                &lt;a href=&quot;/bitacora&quot; class=&quot;btn btn-secondary me-md-2&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-arrow-left&quot;&gt;&lt;/i&gt; Cancelar&#10;                                &lt;/a&gt;&#10;                                &lt;button type=&quot;submit&quot; class=&quot;btn btn-success&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-save&quot;&gt;&lt;/i&gt; Guardar Entrada&#10;                                &lt;/button&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/form&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/por-planta.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/bitacora/por-planta.html" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;es&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Bitácoras de Planta&lt;/title&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;    &lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;nav class=&quot;navbar navbar-expand-lg navbar-dark bg-success&quot;&gt;&#10;        &lt;div class=&quot;container&quot;&gt;&#10;            &lt;a class=&quot;navbar-brand&quot; href=&quot;/dashboard&quot;&gt;&#10;                &lt;i class=&quot;fas fa-leaf&quot;&gt;&lt;/i&gt; PlantApp&#10;            &lt;/a&gt;&#10;            &lt;div class=&quot;navbar-nav ms-auto&quot;&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/plantas&quot;&gt;Mis Plantas&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link active&quot; href=&quot;/bitacora&quot;&gt;Bitácora&lt;/a&gt;&#10;                &lt;a class=&quot;nav-link&quot; href=&quot;/recordatorios&quot;&gt;Recordatorios&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/nav&gt;&#10;&#10;    &lt;div class=&quot;container mt-4&quot;&gt;&#10;        &lt;div class=&quot;row&quot;&gt;&#10;            &lt;div class=&quot;col-12&quot;&gt;&#10;                &lt;div class=&quot;d-flex justify-content-between align-items-center mb-4&quot;&gt;&#10;                    &lt;h1&gt;&lt;i class=&quot;fas fa-seedling&quot;&gt;&lt;/i&gt; Bitácora de la Planta&lt;/h1&gt;&#10;                    &lt;div&gt;&#10;                        &lt;a th:href=&quot;@{/bitacora/nueva(plantaId=${plantaId})}&quot; class=&quot;btn btn-success me-2&quot;&gt;&#10;                            &lt;i class=&quot;fas fa-plus&quot;&gt;&lt;/i&gt; Nueva Entrada&#10;                        &lt;/a&gt;&#10;                        &lt;a th:href=&quot;@{/bitacora/planta/{plantaId}/historial(plantaId=${plantaId})}&quot; class=&quot;btn btn-info me-2&quot;&gt;&#10;                            &lt;i class=&quot;fas fa-history&quot;&gt;&lt;/i&gt; Historial&#10;                        &lt;/a&gt;&#10;                        &lt;a th:href=&quot;@{/bitacora/planta/{plantaId}/exportar(plantaId=${plantaId})}&quot; class=&quot;btn btn-outline-secondary&quot;&gt;&#10;                            &lt;i class=&quot;fas fa-download&quot;&gt;&lt;/i&gt; Exportar&#10;                        &lt;/a&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Información de la planta --&gt;&#10;                &lt;div class=&quot;alert alert-info&quot;&gt;&#10;                    &lt;h6&gt;&lt;i class=&quot;fas fa-info-circle&quot;&gt;&lt;/i&gt; Planta ID: &lt;span th:text=&quot;${plantaId}&quot;&gt;&lt;/span&gt;&lt;/h6&gt;&#10;                    &lt;p class=&quot;mb-0&quot;&gt;Total de entradas: &lt;span th:text=&quot;${#lists.size(bitacoras)}&quot;&gt;&lt;/span&gt;&lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Mensajes --&gt;&#10;                &lt;div th:if=&quot;${mensaje}&quot; class=&quot;alert alert-success alert-dismissible fade show&quot; role=&quot;alert&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-check-circle&quot;&gt;&lt;/i&gt; &lt;span th:text=&quot;${mensaje}&quot;&gt;&lt;/span&gt;&#10;                    &lt;button type=&quot;button&quot; class=&quot;btn-close&quot; data-bs-dismiss=&quot;alert&quot;&gt;&lt;/button&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div th:if=&quot;${error}&quot; class=&quot;alert alert-danger alert-dismissible fade show&quot; role=&quot;alert&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-exclamation-triangle&quot;&gt;&lt;/i&gt; &lt;span th:text=&quot;${error}&quot;&gt;&lt;/span&gt;&#10;                    &lt;button type=&quot;button&quot; class=&quot;btn-close&quot; data-bs-dismiss=&quot;alert&quot;&gt;&lt;/button&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Lista de bitácoras --&gt;&#10;                &lt;div th:if=&quot;${#lists.isEmpty(bitacoras)}&quot; class=&quot;text-center py-5&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-book-open fa-3x text-muted mb-3&quot;&gt;&lt;/i&gt;&#10;                    &lt;h4 class=&quot;text-muted&quot;&gt;No hay entradas para esta planta&lt;/h4&gt;&#10;                    &lt;p class=&quot;text-muted&quot;&gt;Comienza registrando el primer cuidado&lt;/p&gt;&#10;                    &lt;a th:href=&quot;@{/bitacora/nueva(plantaId=${plantaId})}&quot; class=&quot;btn btn-success&quot;&gt;&#10;                        &lt;i class=&quot;fas fa-plus&quot;&gt;&lt;/i&gt; Primera Entrada&#10;                    &lt;/a&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div th:if=&quot;${!#lists.isEmpty(bitacoras)}&quot; class=&quot;timeline&quot;&gt;&#10;                    &lt;div th:each=&quot;bitacora, iterStat : ${bitacoras}&quot; class=&quot;timeline-item mb-4&quot;&gt;&#10;                        &lt;div class=&quot;card&quot;&gt;&#10;                            &lt;div class=&quot;card-header d-flex justify-content-between align-items-center&quot;&gt;&#10;                                &lt;div&gt;&#10;                                    &lt;span th:if=&quot;${bitacora.tipoCuidado}&quot; &#10;                                          class=&quot;badge bg-primary me-2&quot; th:text=&quot;${bitacora.tipoCuidado}&quot;&gt;&lt;/span&gt;&#10;                                    &lt;span class=&quot;text-muted&quot; th:text=&quot;${#temporals.format(bitacora.fecha, 'dd/MM/yyyy HH:mm')}&quot;&gt;&lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;btn-group btn-group-sm&quot;&gt;&#10;                                    &lt;a th:href=&quot;@{/bitacora/{id}(id=${bitacora.id})}&quot; class=&quot;btn btn-outline-primary&quot;&gt;&#10;                                        &lt;i class=&quot;fas fa-eye&quot;&gt;&lt;/i&gt;&#10;                                    &lt;/a&gt;&#10;                                    &lt;a th:href=&quot;@{/bitacora/{id}/editar(id=${bitacora.id})}&quot; class=&quot;btn btn-outline-warning&quot;&gt;&#10;                                        &lt;i class=&quot;fas fa-edit&quot;&gt;&lt;/i&gt;&#10;                                    &lt;/a&gt;&#10;                                    &lt;form th:action=&quot;@{/bitacora/{id}/eliminar(id=${bitacora.id})}&quot; method=&quot;post&quot; class=&quot;d-inline&quot;&gt;&#10;                                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-outline-danger&quot; &#10;                                                onclick=&quot;return confirm('¿Eliminar esta entrada?')&quot;&gt;&#10;                                            &lt;i class=&quot;fas fa-trash&quot;&gt;&lt;/i&gt;&#10;                                        &lt;/button&gt;&#10;                                    &lt;/form&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;card-body&quot;&gt;&#10;                                &lt;div class=&quot;row&quot;&gt;&#10;                                    &lt;div th:class=&quot;${bitacora.foto ? 'col-md-8' : 'col-12'}&quot;&gt;&#10;                                        &lt;p class=&quot;card-text&quot; th:text=&quot;${bitacora.descripcion}&quot;&gt;&lt;/p&gt;&#10;                                        &lt;p th:if=&quot;${bitacora.observaciones}&quot; class=&quot;text-muted&quot;&gt;&#10;                                            &lt;small&gt;&lt;strong&gt;Observaciones:&lt;/strong&gt; &lt;span th:text=&quot;${bitacora.observaciones}&quot;&gt;&lt;/span&gt;&lt;/small&gt;&#10;                                        &lt;/p&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div th:if=&quot;${bitacora.foto}&quot; class=&quot;col-md-4&quot;&gt;&#10;                                        &lt;img th:src=&quot;${bitacora.foto}&quot; class=&quot;img-fluid rounded&quot; alt=&quot;Foto de cuidado&quot;&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Navegación --&gt;&#10;                &lt;div class=&quot;text-center mt-4&quot;&gt;&#10;                    &lt;a href=&quot;/bitacora&quot; class=&quot;btn btn-outline-secondary&quot;&gt;&#10;                        &lt;i class=&quot;fas fa-arrow-left&quot;&gt;&lt;/i&gt; Ver Todas las Bitácoras&#10;                    &lt;/a&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/login/index.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/PlanTapp/src/main/resources/templates/login/index.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;es&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Plantee - Tu Comunidad Botánica&lt;/title&gt;&#10;    &lt;!-- Enlace a Font Awesome para iconos --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css&quot;&gt;&#10;    &lt;!-- Enlace a la hoja de estilos principal usando Thymeleaf --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@{/login/css/index.css}&quot;&gt;&#10;    &lt;!-- Enlace a Google Fonts para Poppins y Lora --&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&amp;family=Lora:wght@400;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;!-- Encabezado global de la aplicación --&gt;&#10;&lt;header class=&quot;app-header&quot;&gt;&#10;    &lt;div class=&quot;header-brand&quot;&gt;&#10;        &lt;strong class=&quot;brand-name&quot;&gt;Plantee&lt;/strong&gt;&#10;    &lt;/div&gt;&#10;    &lt;div class=&quot;header-actions&quot;&gt;&#10;        &lt;i class=&quot;fas fa-search header-icon&quot; id=&quot;search-icon&quot; aria-label=&quot;Abrir barra de búsqueda&quot;&gt;&lt;/i&gt;&#10;&#10;        &lt;!-- Mostrar diferentes opciones según si el usuario está logueado --&gt;&#10;        &lt;div th:if=&quot;${usuarioNombre == null}&quot;&gt;&#10;            &lt;!-- Usuario no logueado --&gt;&#10;            &lt;a th:href=&quot;@{/web/login}&quot; class=&quot;btn btn-primary&quot; id=&quot;register-btn&quot;&gt;Registrarse&lt;/a&gt;&#10;            &lt;a th:href=&quot;@{/web/login}&quot; class=&quot;btn btn-secondary&quot; id=&quot;login-btn&quot;&gt;Iniciar Sesión&lt;/a&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div th:if=&quot;${usuarioNombre != null}&quot;&gt;&#10;            &lt;!-- Usuario logueado --&gt;&#10;            &lt;span class=&quot;user-welcome&quot;&gt;Hola, &lt;span th:text=&quot;${usuarioNombre}&quot;&gt;Usuario&lt;/span&gt;&lt;/span&gt;&#10;            &lt;a th:href=&quot;@{/web/login}&quot; class=&quot;btn btn-secondary&quot;&gt;Cerrar Sesión&lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/header&gt;&#10;&#10;&lt;!-- Barra de búsqueda desplegable --&gt;&#10;&lt;div id=&quot;search-bar&quot; class=&quot;search-bar hidden&quot;&gt;&#10;    &lt;input type=&quot;text&quot; placeholder=&quot;Buscar...&quot; id=&quot;search-input&quot; class=&quot;search-input&quot; aria-label=&quot;Campo de búsqueda&quot;&gt;&#10;    &lt;div id=&quot;search-suggestions&quot; class=&quot;search-suggestions&quot;&gt;&lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Botón de alternar menú lateral --&gt;&#10;&lt;button id=&quot;menu-toggle&quot; class=&quot;menu-toggle&quot; aria-label=&quot;Abrir menú de navegación&quot;&gt;☰&lt;/button&gt;&#10;&#10;&lt;!-- Menú de navegación lateral (Sidebar) --&gt;&#10;&lt;nav id=&quot;sidebar&quot; class=&quot;sidebar&quot;&gt;&#10;    &lt;a class=&quot;nav-link&quot; href=&quot;#inicio&quot;&gt;&lt;i class=&quot;fas fa-home nav-icon&quot;&gt;&lt;/i&gt;&lt;span class=&quot;nav-text&quot;&gt;Inicio&lt;/span&gt;&lt;/a&gt;&#10;    &lt;a class=&quot;nav-link&quot; href=&quot;#servicios&quot;&gt;&lt;i class=&quot;fas fa-tools nav-icon&quot;&gt;&lt;/i&gt;&lt;span class=&quot;nav-text&quot;&gt;Servicios&lt;/span&gt;&lt;/a&gt;&#10;    &lt;a class=&quot;nav-link&quot; href=&quot;#catalogo&quot;&gt;&lt;i class=&quot;fas fa-images nav-icon&quot;&gt;&lt;/i&gt;&lt;span class=&quot;nav-text&quot;&gt;Catálogo&lt;/span&gt;&lt;/a&gt;&#10;    &lt;a class=&quot;nav-link&quot; href=&quot;#contactanos&quot;&gt;&lt;i class=&quot;fas fa-envelope nav-icon&quot;&gt;&lt;/i&gt;&lt;span class=&quot;nav-text&quot;&gt;Contáctanos&lt;/span&gt;&lt;/a&gt;&#10;&#10;    &lt;!-- Enlace al Dashboard solo si el usuario está logueado --&gt;&#10;    &lt;a th:if=&quot;${usuarioNombre != null}&quot;&#10;       class=&quot;nav-link&quot;&#10;       th:href=&quot;@{/web/dashboard}&quot;&#10;       style=&quot;margin-top: auto; border-top: 1px solid rgba(255,255,255,0.2); padding-top: 20px;&quot;&gt;&#10;        &lt;i class=&quot;fas fa-user-circle nav-icon&quot;&gt;&lt;/i&gt;&#10;        &lt;span class=&quot;nav-text&quot;&gt;Mi Cuenta&lt;/span&gt;&#10;    &lt;/a&gt;&#10;&#10;    &lt;!-- Si no está logueado, mostrar enlace para login --&gt;&#10;    &lt;a th:if=&quot;${usuarioNombre == null}&quot;&#10;       class=&quot;nav-link&quot;&#10;       th:href=&quot;@{/web/login}&quot;&#10;       style=&quot;margin-top: auto; border-top: 1px solid rgba(255,255,255,0.2); padding-top: 20px;&quot;&gt;&#10;        &lt;i class=&quot;fas fa-sign-in-alt nav-icon&quot;&gt;&lt;/i&gt;&#10;        &lt;span class=&quot;nav-text&quot;&gt;Iniciar Sesión&lt;/span&gt;&#10;    &lt;/a&gt;&#10;&lt;/nav&gt;&#10;&#10;&lt;!-- Contenido principal de la página --&gt;&#10;&lt;main class=&quot;main-content&quot;&gt;&#10;    &lt;!-- Mensaje de bienvenida personalizado --&gt;&#10;    &lt;div th:if=&quot;${usuarioNombre != null}&quot; class=&quot;welcome-message&quot;&gt;&#10;        &lt;p&gt;¡Bienvenido de vuelta, &lt;span th:text=&quot;${usuarioNombre}&quot;&gt;Usuario&lt;/span&gt;!&lt;/p&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;!-- Sección de Inicio --&gt;&#10;    &lt;section id=&quot;inicio&quot; class=&quot;content-section hero-section&quot;&gt;&#10;        &lt;h1 class=&quot;section-title&quot;&gt;&#10;            &lt;span th:if=&quot;${usuarioNombre != null}&quot;&gt;&#10;                ¡Hola &lt;span th:text=&quot;${usuarioNombre}&quot;&gt;Usuario&lt;/span&gt;! Bienvenido a Plantee&#10;            &lt;/span&gt;&#10;            &lt;span th:if=&quot;${usuarioNombre == null}&quot;&gt;&#10;                Bienvenido a Plantee&#10;            &lt;/span&gt;&#10;        &lt;/h1&gt;&#10;        &lt;p class=&quot;section-description&quot;&gt;Tu comunidad ideal para aprender y compartir sobre el fascinante mundo de las plantas. Explora nuestros eventos, participa en el foro, descubre nuestros servicios y sumérgete en nuestro catálogo botánico. ¡Conéctate con otros amantes de la naturaleza y haz que tu pasión florezca!&lt;/p&gt;&#10;        &lt;div class=&quot;hero-actions&quot;&gt;&#10;            &lt;!-- Enlaces que cambian según el estado de autenticación --&gt;&#10;            &lt;div th:if=&quot;${usuarioNombre != null}&quot;&gt;&#10;                &lt;a th:href=&quot;@{/web/dashboard#eventos}&quot; class=&quot;btn btn-primary&quot;&gt;Ver Eventos&lt;/a&gt;&#10;                &lt;a th:href=&quot;@{/web/dashboard#foro}&quot; class=&quot;btn btn-secondary&quot;&gt;Unirse al Foro&lt;/a&gt;&#10;            &lt;/div&gt;&#10;            &lt;div th:if=&quot;${usuarioNombre == null}&quot;&gt;&#10;                &lt;a th:href=&quot;@{/web/login}&quot; class=&quot;btn btn-primary&quot;&gt;Iniciar Sesión para Ver Eventos&lt;/a&gt;&#10;                &lt;a th:href=&quot;@{/web/login}&quot; class=&quot;btn btn-secondary&quot;&gt;Registrarse&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;!-- Sección de Servicios --&gt;&#10;    &lt;section id=&quot;servicios&quot; class=&quot;content-section service-section&quot;&gt;&#10;        &lt;h2 class=&quot;section-title&quot;&gt;Nuestros Servicios&lt;/h2&gt;&#10;        &lt;p class=&quot;section-description&quot;&gt;Ofrecemos una variedad de servicios para ayudarte a cuidar tus plantas y expandir tus conocimientos.&lt;/p&gt;&#10;        &lt;div class=&quot;service-grid&quot;&gt;&#10;            &lt;div class=&quot;service-card&quot;&gt;&#10;                &lt;i class=&quot;fas fa-leaf service-icon&quot;&gt;&lt;/i&gt;&#10;                &lt;h3 class=&quot;service-card-title&quot;&gt;Consultoría de Jardinería&lt;/h3&gt;&#10;                &lt;p class=&quot;service-card-description&quot;&gt;Asesoramiento personalizado para el cuidado de tus plantas y solución de problemas.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;service-card&quot;&gt;&#10;                &lt;i class=&quot;fas fa-palette service-icon&quot;&gt;&lt;/i&gt;&#10;                &lt;h3 class=&quot;service-card-title&quot;&gt;Diseño de Paisajes&lt;/h3&gt;&#10;                &lt;p class=&quot;service-card-description&quot;&gt;Creación de espacios verdes estéticos y funcionales.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;service-card&quot;&gt;&#10;                &lt;i class=&quot;fas fa-hand-holding-heart service-icon&quot;&gt;&lt;/i&gt;&#10;                &lt;h3 class=&quot;service-card-title&quot;&gt;Mantenimiento de Jardines&lt;/h3&gt;&#10;                &lt;p class=&quot;service-card-description&quot;&gt;Servicio completo de poda, riego, abonado y limpieza.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;service-card&quot;&gt;&#10;                &lt;i class=&quot;fas fa-bug service-icon&quot;&gt;&lt;/i&gt;&#10;                &lt;h3 class=&quot;service-card-title&quot;&gt;Control de Plagas Orgánico&lt;/h3&gt;&#10;                &lt;p class=&quot;service-card-description&quot;&gt;Soluciones ecológicas y seguras para combatir plagas.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;service-card&quot;&gt;&#10;                &lt;i class=&quot;fas fa-store service-icon&quot;&gt;&lt;/i&gt;&#10;                &lt;h3 class=&quot;service-card-title&quot;&gt;Venta de Semillas y Plantas&lt;/h3&gt;&#10;                &lt;p class=&quot;service-card-description&quot;&gt;Amplia variedad de semillas de calidad y plantas saludables.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;service-card&quot;&gt;&#10;                &lt;i class=&quot;fas fa-chalkboard-teacher service-icon&quot;&gt;&lt;/i&gt;&#10;                &lt;h3 class=&quot;service-card-title&quot;&gt;Talleres y Cursos&lt;/h3&gt;&#10;                &lt;p class=&quot;service-card-description&quot;&gt;Programas educativos sobre horticultura y técnicas de jardinería.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;div class=&quot;text-center mt-8&quot;&gt;&#10;            &lt;a th:href=&quot;@{/web/dashboard#servicios}&quot;&#10;               th:if=&quot;${usuarioNombre != null}&quot;&#10;               class=&quot;btn btn-primary&quot;&gt;Ver Detalles de Servicios&lt;/a&gt;&#10;            &lt;a th:href=&quot;@{/web/login}&quot;&#10;               th:if=&quot;${usuarioNombre == null}&quot;&#10;               class=&quot;btn btn-primary&quot;&gt;Iniciar Sesión para Ver Servicios&lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;!-- Sección de Catálogo Botánico --&gt;&#10;    &lt;section id=&quot;catalogo&quot; class=&quot;content-section&quot;&gt;&#10;        &lt;h2 class=&quot;section-title&quot;&gt;Catálogo Botánico&lt;/h2&gt;&#10;        &lt;p class=&quot;section-description&quot;&gt;Descubre algunas de las hermosas plantas de nuestro catálogo.&lt;/p&gt;&#10;        &lt;div class=&quot;carousel-wrapper&quot;&gt;&#10;            &lt;button class=&quot;carousel-nav-btn left&quot; id=&quot;carousel-prev-btn&quot;&gt;&lt;i class=&quot;fas fa-chevron-left&quot;&gt;&lt;/i&gt;&lt;/button&gt;&#10;            &lt;div class=&quot;carousel-track&quot; id=&quot;carousel-track&quot;&gt;&#10;                &lt;!-- Las imágenes del carrusel se cargarán con JavaScript --&gt;&#10;            &lt;/div&gt;&#10;            &lt;button class=&quot;carousel-nav-btn right&quot; id=&quot;carousel-next-btn&quot;&gt;&lt;i class=&quot;fas fa-chevron-right&quot;&gt;&lt;/i&gt;&lt;/button&gt;&#10;        &lt;/div&gt;&#10;        &lt;div class=&quot;text-center mt-8&quot;&gt;&#10;            &lt;a th:href=&quot;@{/web/plantas/catalogo}&quot; class=&quot;btn btn-primary&quot;&gt;Explorar Catálogo Completo&lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;!-- Sección de Contacto --&gt;&#10;    &lt;section id=&quot;contactanos&quot; class=&quot;content-section&quot;&gt;&#10;        &lt;h2 class=&quot;section-title&quot;&gt;Contáctanos&lt;/h2&gt;&#10;        &lt;p class=&quot;contact-info&quot;&gt;&lt;strong&gt;Correo:&lt;/strong&gt; contacto@plantee.com&lt;/p&gt;&#10;        &lt;p class=&quot;contact-info&quot;&gt;&lt;strong&gt;Teléfono:&lt;/strong&gt; +51 987 654 321&lt;/p&gt;&#10;        &lt;div th:if=&quot;${usuarioCorreo != null}&quot; class=&quot;contact-info&quot;&gt;&#10;            &lt;strong&gt;Tu correo registrado:&lt;/strong&gt; &lt;span th:text=&quot;${usuarioCorreo}&quot;&gt;correo@ejemplo.com&lt;/span&gt;&#10;        &lt;/div&gt;&#10;        &lt;p class=&quot;contact-info social-links&quot;&gt;&#10;            &lt;strong&gt;Síguenos en redes:&lt;/strong&gt;&#10;            &lt;a href=&quot;#&quot; aria-label=&quot;Facebook de Plantee&quot;&gt;&lt;i class=&quot;fab fa-facebook-square social-icon facebook-color&quot;&gt;&lt;/i&gt;&lt;/a&gt;&#10;            &lt;a href=&quot;#&quot; aria-label=&quot;Instagram de Plantee&quot;&gt;&lt;i class=&quot;fab fa-instagram-square social-icon instagram-color&quot;&gt;&lt;/i&gt;&lt;/a&gt;&#10;        &lt;/p&gt;&#10;    &lt;/section&gt;&#10;&lt;/main&gt;&#10;&#10;&lt;!-- Modal de información de fotos --&gt;&#10;&lt;div class=&quot;photo-modal-overlay&quot; id=&quot;photo-modal-overlay&quot;&gt;&#10;    &lt;div class=&quot;photo-modal-content&quot; id=&quot;photo-modal-content&quot;&gt;&#10;        &lt;img src=&quot;&quot; alt=&quot;Planta en detalle&quot; class=&quot;modal-image&quot;&gt;&#10;        &lt;h3 class=&quot;modal-title&quot;&gt;&lt;span class=&quot;sr-only&quot;&gt;Título de la foto&lt;/span&gt;&lt;/h3&gt;&#10;        &lt;p class=&quot;modal-description&quot;&gt;&lt;/p&gt;&#10;        &lt;button class=&quot;photo-modal-close&quot; aria-label=&quot;Cerrar modal de foto&quot;&gt;&amp;times;&lt;/button&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Enlace al archivo JavaScript usando Thymeleaf --&gt;&#10;&lt;script th:src=&quot;@{/login/js/home.js}&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;es&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Plantee - Tu Comunidad Botánica&lt;/title&gt;&#10;    &lt;!-- Enlace a Font Awesome para iconos --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css&quot;&gt;&#10;    &lt;!-- Enlace a la hoja de estilos principal usando Thymeleaf --&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; th:href=&quot;@{/login/css/index.css}&quot;&gt;&#10;    &lt;!-- Enlace a Google Fonts para Poppins y Lora --&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&amp;family=Lora:wght@400;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;!-- Encabezado global de la aplicación --&gt;&#10;&lt;header class=&quot;app-header&quot;&gt;&#10;    &lt;div class=&quot;header-brand&quot;&gt;&#10;        &lt;strong class=&quot;brand-name&quot;&gt;Plantee&lt;/strong&gt;&#10;    &lt;/div&gt;&#10;    &lt;div class=&quot;header-actions&quot;&gt;&#10;        &lt;i class=&quot;fas fa-search header-icon&quot; id=&quot;search-icon&quot; aria-label=&quot;Abrir barra de búsqueda&quot;&gt;&lt;/i&gt;&#10;&#10;        &lt;!-- Mostrar diferentes opciones según si el usuario está logueado --&gt;&#10;        &lt;div th:if=&quot;${usuarioNombre == null}&quot;&gt;&#10;            &lt;!-- Usuario no logueado --&gt;&#10;            &lt;a th:href=&quot;@{/web/login}&quot; class=&quot;btn btn-primary&quot; id=&quot;register-btn&quot;&gt;Registrarse&lt;/a&gt;&#10;            &lt;a th:href=&quot;@{/web/login}&quot; class=&quot;btn btn-secondary&quot; id=&quot;login-btn&quot;&gt;Iniciar Sesión&lt;/a&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div th:if=&quot;${usuarioNombre != null}&quot;&gt;&#10;            &lt;!-- Usuario logueado --&gt;&#10;            &lt;span class=&quot;user-welcome&quot;&gt;Hola, &lt;span th:text=&quot;${usuarioNombre}&quot;&gt;Usuario&lt;/span&gt;&lt;/span&gt;&#10;            &lt;a th:href=&quot;@{/web/login}&quot; class=&quot;btn btn-secondary&quot;&gt;Cerrar Sesión&lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/header&gt;&#10;&#10;&lt;!-- Barra de búsqueda desplegable --&gt;&#10;&lt;div id=&quot;search-bar&quot; class=&quot;search-bar hidden&quot;&gt;&#10;    &lt;input type=&quot;text&quot; placeholder=&quot;Buscar...&quot; id=&quot;search-input&quot; class=&quot;search-input&quot; aria-label=&quot;Campo de búsqueda&quot;&gt;&#10;    &lt;div id=&quot;search-suggestions&quot; class=&quot;search-suggestions&quot;&gt;&lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Botón de alternar menú lateral --&gt;&#10;&lt;button id=&quot;menu-toggle&quot; class=&quot;menu-toggle&quot; aria-label=&quot;Abrir menú de navegación&quot;&gt;☰&lt;/button&gt;&#10;&#10;&lt;!-- Menú de navegación lateral (Sidebar) --&gt;&#10;&lt;nav id=&quot;sidebar&quot; class=&quot;sidebar&quot;&gt;&#10;    &lt;a class=&quot;nav-link&quot; href=&quot;#inicio&quot;&gt;&lt;i class=&quot;fas fa-home nav-icon&quot;&gt;&lt;/i&gt;&lt;span class=&quot;nav-text&quot;&gt;Inicio&lt;/span&gt;&lt;/a&gt;&#10;    &lt;a class=&quot;nav-link&quot; href=&quot;#servicios&quot;&gt;&lt;i class=&quot;fas fa-tools nav-icon&quot;&gt;&lt;/i&gt;&lt;span class=&quot;nav-text&quot;&gt;Servicios&lt;/span&gt;&lt;/a&gt;&#10;    &lt;a class=&quot;nav-link&quot; href=&quot;#catalogo&quot;&gt;&lt;i class=&quot;fas fa-images nav-icon&quot;&gt;&lt;/i&gt;&lt;span class=&quot;nav-text&quot;&gt;Catálogo&lt;/span&gt;&lt;/a&gt;&#10;    &lt;a class=&quot;nav-link&quot; href=&quot;#contactanos&quot;&gt;&lt;i class=&quot;fas fa-envelope nav-icon&quot;&gt;&lt;/i&gt;&lt;span class=&quot;nav-text&quot;&gt;Contáctanos&lt;/span&gt;&lt;/a&gt;&#10;&#10;    &lt;!-- Enlace al Dashboard solo si el usuario está logueado --&gt;&#10;    &lt;a th:if=&quot;${usuarioNombre != null}&quot;&#10;       class=&quot;nav-link&quot;&#10;       th:href=&quot;@{/web/dashboard}&quot;&#10;       style=&quot;margin-top: auto; border-top: 1px solid rgba(255,255,255,0.2); padding-top: 20px;&quot;&gt;&#10;        &lt;i class=&quot;fas fa-user-circle nav-icon&quot;&gt;&lt;/i&gt;&#10;        &lt;span class=&quot;nav-text&quot;&gt;Mi Cuenta&lt;/span&gt;&#10;    &lt;/a&gt;&#10;&#10;    &lt;!-- Si no está logueado, mostrar enlace para login --&gt;&#10;    &lt;a th:if=&quot;${usuarioNombre == null}&quot;&#10;       class=&quot;nav-link&quot;&#10;       th:href=&quot;@{/web/login}&quot;&#10;       style=&quot;margin-top: auto; border-top: 1px solid rgba(255,255,255,0.2); padding-top: 20px;&quot;&gt;&#10;        &lt;i class=&quot;fas fa-sign-in-alt nav-icon&quot;&gt;&lt;/i&gt;&#10;        &lt;span class=&quot;nav-text&quot;&gt;Iniciar Sesión&lt;/span&gt;&#10;    &lt;/a&gt;&#10;&lt;/nav&gt;&#10;&#10;&lt;!-- Contenido principal de la página --&gt;&#10;&lt;main class=&quot;main-content&quot;&gt;&#10;    &lt;!-- Mensaje de bienvenida personalizado --&gt;&#10;    &lt;div th:if=&quot;${usuarioNombre != null}&quot; class=&quot;welcome-message&quot;&gt;&#10;        &lt;p&gt;¡Bienvenido de vuelta, &lt;span th:text=&quot;${usuarioNombre}&quot;&gt;Usuario&lt;/span&gt;!&lt;/p&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;!-- Sección de Inicio --&gt;&#10;    &lt;section id=&quot;inicio&quot; class=&quot;content-section hero-section&quot;&gt;&#10;        &lt;h1 class=&quot;section-title&quot;&gt;&#10;            &lt;span th:if=&quot;${usuarioNombre != null}&quot;&gt;&#10;                ¡Hola &lt;span th:text=&quot;${usuarioNombre}&quot;&gt;Usuario&lt;/span&gt;! Bienvenido a Plantee&#10;            &lt;/span&gt;&#10;            &lt;span th:if=&quot;${usuarioNombre == null}&quot;&gt;&#10;                Bienvenido a Plantee&#10;            &lt;/span&gt;&#10;        &lt;/h1&gt;&#10;        &lt;p class=&quot;section-description&quot;&gt;Tu comunidad ideal para aprender y compartir sobre el fascinante mundo de las plantas. Explora nuestros eventos, participa en el foro, descubre nuestros servicios y sumérgete en nuestro catálogo botánico. ¡Conéctate con otros amantes de la naturaleza y haz que tu pasión florezca!&lt;/p&gt;&#10;        &lt;div class=&quot;hero-actions&quot;&gt;&#10;            &lt;!-- Enlaces que cambian según el estado de autenticación --&gt;&#10;            &lt;div th:if=&quot;${usuarioNombre != null}&quot;&gt;&#10;                &lt;a th:href=&quot;@{/web/dashboard#eventos}&quot; class=&quot;btn btn-primary&quot;&gt;Ver Eventos&lt;/a&gt;&#10;                &lt;a th:href=&quot;@{/web/dashboard#foro}&quot; class=&quot;btn btn-secondary&quot;&gt;Unirse al Foro&lt;/a&gt;&#10;            &lt;/div&gt;&#10;            &lt;div th:if=&quot;${usuarioNombre == null}&quot;&gt;&#10;                &lt;a th:href=&quot;@{/web/login}&quot; class=&quot;btn btn-primary&quot;&gt;Iniciar Sesión para Ver Eventos&lt;/a&gt;&#10;                &lt;a th:href=&quot;@{/web/login}&quot; class=&quot;btn btn-secondary&quot;&gt;Registrarse&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;!-- Sección de Servicios --&gt;&#10;    &lt;section id=&quot;servicios&quot; class=&quot;content-section service-section&quot;&gt;&#10;        &lt;h2 class=&quot;section-title&quot;&gt;Nuestros Servicios&lt;/h2&gt;&#10;        &lt;p class=&quot;section-description&quot;&gt;Ofrecemos una variedad de servicios para ayudarte a cuidar tus plantas y expandir tus conocimientos.&lt;/p&gt;&#10;        &lt;div class=&quot;service-grid&quot;&gt;&#10;            &lt;div class=&quot;service-card clickable-card&quot; onclick=&quot;location.href='/bitacora'&quot;&gt;&#10;                &lt;i class=&quot;fas fa-book service-icon&quot;&gt;&lt;/i&gt;&#10;                &lt;h3 class=&quot;service-card-title&quot;&gt;Consultoría de Jardinería&lt;/h3&gt;&#10;                &lt;p class=&quot;service-card-description&quot;&gt;Registra y gestiona el cuidado de tus plantas con nuestra bitácora digital. Lleva un historial completo de riegos, podas y observaciones.&lt;/p&gt;&#10;                &lt;div class=&quot;service-card-features&quot;&gt;&#10;                    &lt;small&gt;✓ Registro de cuidados&lt;/small&gt;&lt;br&gt;&#10;                    &lt;small&gt;✓ Historial de plantas&lt;/small&gt;&lt;br&gt;&#10;                    &lt;small&gt;✓ Exportar reportes&lt;/small&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;service-card&quot;&gt;&#10;                &lt;i class=&quot;fas fa-palette service-icon&quot;&gt;&lt;/i&gt;&#10;                &lt;h3 class=&quot;service-card-title&quot;&gt;Diseño de Paisajes&lt;/h3&gt;&#10;                &lt;p class=&quot;service-card-description&quot;&gt;Creación de espacios verdes estéticos y funcionales.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;service-card&quot;&gt;&#10;                &lt;i class=&quot;fas fa-hand-holding-heart service-icon&quot;&gt;&lt;/i&gt;&#10;                &lt;h3 class=&quot;service-card-title&quot;&gt;Mantenimiento de Jardines&lt;/h3&gt;&#10;                &lt;p class=&quot;service-card-description&quot;&gt;Servicio completo de poda, riego, abonado y limpieza.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;service-card&quot;&gt;&#10;                &lt;i class=&quot;fas fa-bug service-icon&quot;&gt;&lt;/i&gt;&#10;                &lt;h3 class=&quot;service-card-title&quot;&gt;Control de Plagas Orgánico&lt;/h3&gt;&#10;                &lt;p class=&quot;service-card-description&quot;&gt;Soluciones ecológicas y seguras para combatir plagas.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;service-card&quot;&gt;&#10;                &lt;i class=&quot;fas fa-store service-icon&quot;&gt;&lt;/i&gt;&#10;                &lt;h3 class=&quot;service-card-title&quot;&gt;Venta de Semillas y Plantas&lt;/h3&gt;&#10;                &lt;p class=&quot;service-card-description&quot;&gt;Amplia variedad de semillas de calidad y plantas saludables.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;service-card&quot;&gt;&#10;                &lt;i class=&quot;fas fa-chalkboard-teacher service-icon&quot;&gt;&lt;/i&gt;&#10;                &lt;h3 class=&quot;service-card-title&quot;&gt;Talleres y Cursos&lt;/h3&gt;&#10;                &lt;p class=&quot;service-card-description&quot;&gt;Programas educativos sobre horticultura y técnicas de jardinería.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;div class=&quot;text-center mt-8&quot;&gt;&#10;            &lt;a th:href=&quot;@{/web/dashboard#servicios}&quot;&#10;               th:if=&quot;${usuarioNombre != null}&quot;&#10;               class=&quot;btn btn-primary&quot;&gt;Ver Detalles de Servicios&lt;/a&gt;&#10;            &lt;a th:href=&quot;@{/web/login}&quot;&#10;               th:if=&quot;${usuarioNombre == null}&quot;&#10;               class=&quot;btn btn-primary&quot;&gt;Iniciar Sesión para Ver Servicios&lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;!-- Sección de Catálogo Botánico --&gt;&#10;    &lt;section id=&quot;catalogo&quot; class=&quot;content-section&quot;&gt;&#10;        &lt;h2 class=&quot;section-title&quot;&gt;Catálogo Botánico&lt;/h2&gt;&#10;        &lt;p class=&quot;section-description&quot;&gt;Descubre algunas de las hermosas plantas de nuestro catálogo.&lt;/p&gt;&#10;        &lt;div class=&quot;carousel-wrapper&quot;&gt;&#10;            &lt;button class=&quot;carousel-nav-btn left&quot; id=&quot;carousel-prev-btn&quot;&gt;&lt;i class=&quot;fas fa-chevron-left&quot;&gt;&lt;/i&gt;&lt;/button&gt;&#10;            &lt;div class=&quot;carousel-track&quot; id=&quot;carousel-track&quot;&gt;&#10;                &lt;!-- Las imágenes del carrusel se cargarán con JavaScript --&gt;&#10;            &lt;/div&gt;&#10;            &lt;button class=&quot;carousel-nav-btn right&quot; id=&quot;carousel-next-btn&quot;&gt;&lt;i class=&quot;fas fa-chevron-right&quot;&gt;&lt;/i&gt;&lt;/button&gt;&#10;        &lt;/div&gt;&#10;        &lt;div class=&quot;text-center mt-8&quot;&gt;&#10;            &lt;a th:href=&quot;@{/web/plantas/catalogo}&quot; class=&quot;btn btn-primary&quot;&gt;Explorar Catálogo Completo&lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;!-- Sección de Contacto --&gt;&#10;    &lt;section id=&quot;contactanos&quot; class=&quot;content-section&quot;&gt;&#10;        &lt;h2 class=&quot;section-title&quot;&gt;Contáctanos&lt;/h2&gt;&#10;        &lt;p class=&quot;contact-info&quot;&gt;&lt;strong&gt;Correo:&lt;/strong&gt; contacto@plantee.com&lt;/p&gt;&#10;        &lt;p class=&quot;contact-info&quot;&gt;&lt;strong&gt;Teléfono:&lt;/strong&gt; +51 987 654 321&lt;/p&gt;&#10;        &lt;div th:if=&quot;${usuarioCorreo != null}&quot; class=&quot;contact-info&quot;&gt;&#10;            &lt;strong&gt;Tu correo registrado:&lt;/strong&gt; &lt;span th:text=&quot;${usuarioCorreo}&quot;&gt;correo@ejemplo.com&lt;/span&gt;&#10;        &lt;/div&gt;&#10;        &lt;p class=&quot;contact-info social-links&quot;&gt;&#10;            &lt;strong&gt;Síguenos en redes:&lt;/strong&gt;&#10;            &lt;a href=&quot;#&quot; aria-label=&quot;Facebook de Plantee&quot;&gt;&lt;i class=&quot;fab fa-facebook-square social-icon facebook-color&quot;&gt;&lt;/i&gt;&lt;/a&gt;&#10;            &lt;a href=&quot;#&quot; aria-label=&quot;Instagram de Plantee&quot;&gt;&lt;i class=&quot;fab fa-instagram-square social-icon instagram-color&quot;&gt;&lt;/i&gt;&lt;/a&gt;&#10;        &lt;/p&gt;&#10;    &lt;/section&gt;&#10;&lt;/main&gt;&#10;&#10;&lt;!-- Modal de información de fotos --&gt;&#10;&lt;div class=&quot;photo-modal-overlay&quot; id=&quot;photo-modal-overlay&quot;&gt;&#10;    &lt;div class=&quot;photo-modal-content&quot; id=&quot;photo-modal-content&quot;&gt;&#10;        &lt;img src=&quot;&quot; alt=&quot;Planta en detalle&quot; class=&quot;modal-image&quot;&gt;&#10;        &lt;h3 class=&quot;modal-title&quot;&gt;&lt;span class=&quot;sr-only&quot;&gt;Título de la foto&lt;/span&gt;&lt;/h3&gt;&#10;        &lt;p class=&quot;modal-description&quot;&gt;&lt;/p&gt;&#10;        &lt;button class=&quot;photo-modal-close&quot; aria-label=&quot;Cerrar modal de foto&quot;&gt;&amp;times;&lt;/button&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Enlace al archivo JavaScript usando Thymeleaf --&gt;&#10;&lt;script th:src=&quot;@{/login/js/home.js}&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>